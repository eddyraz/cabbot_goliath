(undo-tree-save-format-version . 1)
"94f7c42362bd52b8d5fd1be014885c2ae0aaa66b"
[nil nil nil nil (25414 65437 528669 390000) 0 nil]
([nil nil ((#("      " 0 6 (fontified t)) . -695) (#("    " 0 4 (fontified nil)) . 694) (694 . 698) (694 . 695) (t 25413 52169 857209 999000)) nil (25414 65437 528666 945000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 693) (undo-tree-id2 . -1) (#("
" 0 1 (fontified t)) . 693) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1)) nil (25414 65437 528663 228000) 0 nil])
([nil nil ((693 . 694)) nil (25414 65437 528656 576000) 0 nil])
([nil nil ((706 . 710) (#("    " 0 4 (fontified t)) . 705) (undo-tree-id0 . -4) (undo-tree-id1 . -4) (704 . 710)) nil (25414 65437 528654 332000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -720) (720 . 721) (#(")" 0 1 (fontified nil)) . -720) (720 . 721) (710 . 721)) nil (25414 65437 528623 514000) 0 nil])
([nil nil ((720 . 724)) nil (25414 65437 528620 488000) 0 nil])
([nil nil ((724 . 731)) nil (25414 65437 528613 755000) 0 nil])
([nil nil ((712 . 713) (t 25414 65437 568125 336000)) nil (25414 65448 162076 324000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -1485) (undo-tree-id19 . -1) (#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . -1486) (undo-tree-id20 . -1) (#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . -1487) (undo-tree-id21 . -1) (#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . -1488) (undo-tree-id22 . -1) (#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . -1489) (undo-tree-id23 . -1) 1490 (t 25414 65448 176239 738000)) nil (25414 65526 109364 594000) 0 nil])
([nil nil ((1603 . 1608)) nil (25414 65526 109325 90000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -1619) (1619 . 1620) (#(")" 0 1 (fontified nil)) . -1619) (1619 . 1620) (1608 . 1620)) nil (25414 65526 109323 267000) 0 nil])
([nil nil ((1619 . 1623)) nil (25414 65526 109320 472000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 705) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1)) nil (25414 65526 109318 538000) 0 nil])
([nil nil ((#("    IO.inspect(resp_q_data)" 0 4 (fontified t) 4 6 (face font-lock-type-face fontified t) 6 14 (fontified t) 14 26 (fontified t) 26 27 (fontified t)) . 705) (undo-tree-id14 . -27)) nil (25414 65526 109313 519000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 705) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1)) nil (25414 65526 109310 493000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 705) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1)) nil (25414 65526 109299 713000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1665) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (t 25414 65526 113078 391000)) nil (25415 26683 823583 723000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . 705) (705 . 709) (705 . 706)) nil (25415 26683 823561 131000) 0 nil])
([nil nil ((706 . 707)) nil (25415 26683 823557 935000) 0 nil])
([nil nil ((716 . 717)) nil (25415 26683 823555 871000) 0 nil])
([nil nil ((745 . 746)) nil (25415 26683 823553 476000) 0 nil])
([nil nil ((827 . 828)) nil (25415 26683 823551 533000) 0 nil])
([nil nil ((865 . 866)) nil (25415 26683 823549 770000) 0 nil])
([nil nil ((1232 . 1233)) nil (25415 26683 823547 816000) 0 nil])
([nil nil ((1242 . 1243)) nil (25415 26683 823545 532000) 0 nil])
([nil nil ((1271 . 1272)) nil (25415 26683 823543 147000) 0 nil])
([nil nil ((1354 . 1355)) nil (25415 26683 823540 1000) 0 nil])
([nil nil ((1399 . 1400)) nil (25415 26683 823532 678000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -1232) (undo-tree-id31 . -1) 1233 (t 25415 26683 843711 33000)) nil (25415 26845 730264 540000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -1241) (undo-tree-id30 . -1) 1242) nil (25415 26845 730259 110000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -1269) (undo-tree-id29 . -1) 1270) nil (25415 26845 730253 559000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -1351) (undo-tree-id28 . -1) 1352) nil (25415 26845 730247 277000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -1395) (undo-tree-id27 . -1) 1396) nil (25415 26845 730237 229000) 0 nil])
([nil nil ((1226 . 1230) (1154 . 1155) (#("      " 0 6 (fontified nil)) . 1154) (1230 . 1231) (t 25415 26845 751568 511000)) nil (25415 28243 245181 193000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -1244) (1244 . 1245) (#(")" 0 1 (fontified nil)) . -1244) (1244 . 1245) (1230 . 1245)) nil (25415 28243 245156 146000) 0 nil])
([nil nil ((1595 . 1596) (t 25415 28243 267032 844000)) nil (25415 28259 761415 27000) 0 nil])
([nil nil ((1472 . 1473)) nil (25415 28259 761406 371000) 0 nil])
([nil nil ((1246 . 1253) (t 25415 28259 771219 430000)) nil (25415 28293 558893 987000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 1233) (#("(" 0 1 (fontified t)) . 1233) (undo-tree-id32 . 1) (undo-tree-id33 . -1) (#("t" 0 1 (fontified t)) . 1233) (#("c" 0 1 (fontified t)) . 1233) (#("e" 0 1 (fontified t)) . 1233) (#("p" 0 1 (fontified t)) . 1233) (#("s" 0 1 (fontified t)) . 1233) (#("n" 0 1 (fontified t)) . 1233) (#("i" 0 1 (fontified t)) . 1233) (#("." 0 1 (fontified t)) . 1233) (#("O" 0 1 (face font-lock-type-face fontified t)) . 1233) (#("I" 0 1 (face font-lock-type-face fontified t)) . 1233)) nil (25415 28293 558887 705000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -1242) (1242 . 1243) (#(")" 0 1 (fontified nil)) . -1242) (1242 . 1243) (1233 . 1243)) nil (25415 28293 558863 961000) 0 nil])
([nil nil ((#("]" 0 1 (fontified nil)) . -1243) (1243 . 1244) (#("]" 0 1 (fontified nil)) . -1243) (1243 . 1244) (1242 . 1244)) nil (25415 28293 558858 591000) 0 nil])
([nil nil ((1243 . 1252)) nil (25415 28293 558853 662000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -1273) (1273 . 1274) (#(")" 0 1 (fontified nil)) . -1273) (1273 . 1274) (1262 . 1274)) nil (25415 28293 558844 354000) 0 nil])
([nil nil ((1233 . 1238) (t 25415 28293 571578 597000)) nil (25415 28324 12327 153000) 0 nil])
([nil nil ((1237 . 1238)) nil (25415 28324 12318 787000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -1259) (undo-tree-id96 . -1) (undo-tree-id97 . 1) (undo-tree-id98 . -1) (#("
" 0 1 (fontified t)) . -1260) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (#(" " 0 1 (fontified t)) . -1261) (undo-tree-id104 . -1) (#(" " 0 1 (fontified t)) . -1262) (undo-tree-id105 . -1) (#(" " 0 1 (fontified t)) . -1263) (undo-tree-id106 . -1) (#(" " 0 1 (fontified t)) . -1264) (undo-tree-id107 . -1) (#("|" 0 1 (fontified t)) . -1265) (undo-tree-id108 . -1) (#(">" 0 1 (fontified t)) . -1266) (undo-tree-id109 . -1) (#(" " 0 1 (fontified t)) . -1267) (undo-tree-id110 . -1) (#("I" 0 1 (face font-lock-type-face fontified t)) . -1268) (undo-tree-id111 . -1) (#("O" 0 1 (face font-lock-type-face fontified t)) . -1269) (undo-tree-id112 . -1) (#("." 0 1 (fontified t)) . -1270) (undo-tree-id113 . -1) (#("i" 0 1 (fontified t)) . -1271) (undo-tree-id114 . -1) (#("n" 0 1 (fontified t)) . -1272) (undo-tree-id115 . -1) (#("s" 0 1 (fontified t)) . -1273) (undo-tree-id116 . -1) (#("p" 0 1 (fontified t)) . -1274) (undo-tree-id117 . -1) (#("e" 0 1 (fontified t)) . -1275) (undo-tree-id118 . -1) (#("c" 0 1 (fontified t)) . -1276) (undo-tree-id119 . -1) (#("t" 0 1 (fontified t)) . -1277) (undo-tree-id120 . -1) (#("(" 0 1 (fontified t)) . -1278) (undo-tree-id121 . -1) (#(")" 0 1 (fontified t)) . -1279) (undo-tree-id122 . -1) (undo-tree-id123 . 1) (undo-tree-id124 . -1) 1280 (t 25415 28324 23877 117000)) nil (25415 28530 59824 39000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1238) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (#("M" 0 1 (face font-lock-type-face fontified t)) . -1239) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (#("a" 0 1 (face font-lock-type-face fontified t)) . -1240) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (#("p" 0 1 (face font-lock-type-face fontified t)) . -1241) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (#("." 0 1 (fontified t)) . -1242) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (#("d" 0 1 (fontified t)) . -1243) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (#("r" 0 1 (fontified t)) . -1244) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (#("o" 0 1 (fontified t)) . -1245) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (#("p" 0 1 (fontified t)) . -1246) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (#("(" 0 1 (fontified t)) . -1247) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (#("[" 0 1 (fontified t)) . -1248) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . 1) (undo-tree-id74 . -1) (#(":" 0 1 (fontified t)) . -1249) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (#("_" 0 1 (face elixir-atom-face fontified t)) . -1250) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (#("_" 0 1 (face elixir-atom-face fontified t)) . -1251) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (#("m" 0 1 (face elixir-atom-face fontified t)) . -1252) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (#("e" 0 1 (face elixir-atom-face fontified t)) . -1253) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (#("t" 0 1 (face elixir-atom-face fontified t)) . -1254) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (#("a" 0 1 (face elixir-atom-face fontified t)) . -1255) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (#("_" 0 1 (face elixir-atom-face fontified t)) . -1256) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (#("_" 0 1 (face elixir-atom-face fontified t)) . -1257) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (#("]" 0 1 (fontified t)) . -1258) (undo-tree-id93 . -1) (undo-tree-id94 . 1) (undo-tree-id95 . -1) 1259) nil (25415 28530 59707 911000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -1233) (undo-tree-id36 . -1) (#("d" 0 1 (fontified t)) . -1234) (undo-tree-id37 . -1) (#(" " 0 1 (fontified t)) . -1235) (undo-tree-id38 . -1) (#("|" 0 1 (fontified t)) . -1236) (undo-tree-id39 . -1) (#(">" 0 1 (fontified t)) . -1237) (undo-tree-id40 . -1) 1238) nil (25415 28530 59469 174000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -1244) (1244 . 1245) (#(")" 0 1 (fontified nil)) . -1244) (1244 . 1245) (1233 . 1245)) nil (25415 28530 59448 25000) 0 nil])
([nil nil ((1244 . 1245) (#("	" 0 1 (fontified t)) . 1243) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (1243 . 1245) (1226 . 1227) (#("    " 0 4 (fontified nil)) . 1226) (1245 . 1246)) nil (25415 28530 59436 12000) 0 nil])
([nil nil ((1230 . 1236) (t 25415 28530 69370 785000)) nil (25415 28546 923645 232000) 0 nil])
([nil nil ((#("I" 0 1 (face font-lock-type-face fontified t)) . -1236) (undo-tree-id129 . -1) (#("O" 0 1 (face font-lock-type-face fontified t)) . -1237) (undo-tree-id130 . -1) (#("." 0 1 (fontified t)) . -1238) (undo-tree-id131 . -1) (#("i" 0 1 (fontified t)) . -1239) (undo-tree-id132 . -1) (#("n" 0 1 (fontified t)) . -1240) (undo-tree-id133 . -1) (#("s" 0 1 (fontified t)) . -1241) (undo-tree-id134 . -1) (#("p" 0 1 (fontified t)) . -1242) (undo-tree-id135 . -1) (#("e" 0 1 (fontified t)) . -1243) (undo-tree-id136 . -1) (#("c" 0 1 (fontified t)) . -1244) (undo-tree-id137 . -1) (#("t" 0 1 (fontified t)) . -1245) (undo-tree-id138 . -1) (#("(" 0 1 (fontified t)) . -1246) (undo-tree-id139 . -1) (#(")" 0 1 (fontified t)) . -1247) (undo-tree-id140 . -1) (undo-tree-id141 . 1) (undo-tree-id142 . -1) 1248 (t 25415 28546 925458 587000)) nil (25415 28589 185141 705000) 0 nil])
([nil nil ((1244 . 1246) (#(")" 0 1 (fontified nil)) . -1244) (1236 . 1245)) nil (25415 28589 185105 818000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -1244) (undo-tree-id125 . -1) (undo-tree-id126 . 1) (undo-tree-id127 . -1) (#("s" 0 1 (fontified t)) . -1245) (undo-tree-id128 . -1) 1246) nil (25415 28589 185099 667000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -1252) (1252 . 1253) (#(")" 0 1 (fontified nil)) . -1252) (1252 . 1253) (1244 . 1253)) nil (25415 28589 185070 452000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -1268) (1268 . 1269) (#(")" 0 1 (fontified nil)) . -1268) (1268 . 1269) (1253 . 1269) (t 25415 28589 205659 682000)) nil (25415 28595 440456 198000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -1252) (undo-tree-id143 . -1) (undo-tree-id144 . 1) (undo-tree-id145 . -1) (#(" " 0 1 (fontified t)) . -1253) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (#("|" 0 1 (fontified t)) . -1254) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (#(">" 0 1 (fontified t)) . -1255) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (#(" " 0 1 (fontified t)) . -1256) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (#("I" 0 1 (face font-lock-type-face fontified t)) . -1257) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (#("O" 0 1 (face font-lock-type-face fontified t)) . -1258) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (#("." 0 1 (fontified t)) . -1259) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (#("i" 0 1 (fontified t)) . -1260) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (#("n" 0 1 (fontified t)) . -1261) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (#("s" 0 1 (fontified t)) . -1262) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (#("p" 0 1 (fontified t)) . -1263) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (#("e" 0 1 (fontified t)) . -1264) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (#("c" 0 1 (fontified t)) . -1265) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (#("t" 0 1 (fontified t)) . -1266) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (#("(" 0 1 (fontified t)) . -1267) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . 1) (undo-tree-id191 . -1) (#(")" 0 1 (fontified t)) . -1268) (undo-tree-id192 . -1) (undo-tree-id193 . 1) (undo-tree-id194 . -1) (#("
" 0 1 (fontified t)) . -1269) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) 1270 (t 25415 28595 461687 202000)) nil (25415 28627 206312 266000) 0 nil])
([nil nil ((1252 . 1253) (#(")" 0 1 (fontified nil)) . -1252) (1252 . 1253)) nil (25415 28627 206228 299000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1232) (undo-tree-id206 . -1) (#("|" 0 1 (fontified t)) . -1233) (undo-tree-id207 . -1) (#(">" 0 1 (fontified t)) . -1234) (undo-tree-id208 . -1) (#(" " 0 1 (fontified t)) . -1235) (undo-tree-id209 . -1) (#("M" 0 1 (face font-lock-type-face fontified t)) . -1236) (undo-tree-id210 . -1) (#("a" 0 1 (face font-lock-type-face fontified t)) . -1237) (undo-tree-id211 . -1) (#("p" 0 1 (face font-lock-type-face fontified t)) . -1238) (undo-tree-id212 . -1) (#("." 0 1 (fontified t)) . -1239) (undo-tree-id213 . -1) (#("f" 0 1 (fontified t)) . -1240) (undo-tree-id214 . -1) (#("r" 0 1 (fontified t)) . -1241) (undo-tree-id215 . -1) (#("o" 0 1 (fontified t)) . -1242) (undo-tree-id216 . -1) (#("m" 0 1 (fontified t)) . -1243) (undo-tree-id217 . -1) (#("_" 0 1 (fontified t)) . -1244) (undo-tree-id218 . -1) (#("s" 0 1 (fontified t)) . -1245) (undo-tree-id219 . -1) (#("t" 0 1 (fontified t)) . -1246) (undo-tree-id220 . -1) (#("r" 0 1 (fontified t)) . -1247) (undo-tree-id221 . -1) (#("u" 0 1 (fontified t)) . -1248) (undo-tree-id222 . -1) (#("c" 0 1 (fontified t)) . -1249) (undo-tree-id223 . -1) (#("t" 0 1 (fontified t)) . -1250) (undo-tree-id224 . -1) (#("(" 0 1 (fontified t)) . -1251) (undo-tree-id225 . -1) (#(")" 0 1 (fontified t)) . -1252) (undo-tree-id226 . -1) (undo-tree-id227 . 1) (undo-tree-id228 . -1) 1253 (t 25415 28627 217818 501000)) nil (25415 31103 9261 864000) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -1227) (undo-tree-id201 . -1) (#(">" 0 1 (fontified t)) . -1228) (undo-tree-id202 . -1) (#(" " 0 1 (fontified t)) . -1229) (undo-tree-id203 . -1) (#("h" 0 1 (fontified t)) . -1230) (undo-tree-id204 . -1) (#("d" 0 1 (fontified t)) . -1231) (undo-tree-id205 . -1) 1232) nil (25415 31103 9208 524000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -1455) (undo-tree-id200 . -1) 1456) nil (25415 31103 9150 174000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -1657) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (#(" " 0 1 (fontified t)) . -1658) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (#("a" 0 1 (fontified t)) . -1659) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (#("s" 0 1 (fontified t)) . -1660) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (#(":" 0 1 (fontified t)) . -1661) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (#(" " 0 1 (fontified t)) . -1662) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (#(":" 0 1 (fontified t)) . -1663) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (#("d" 0 1 (face elixir-atom-face fontified t)) . -1664) (undo-tree-id250 . -1) (#("a" 0 1 (face elixir-atom-face fontified t)) . -1665) (undo-tree-id251 . -1) (#("t" 0 1 (face elixir-atom-face fontified t)) . -1666) (undo-tree-id252 . -1) (#("a" 0 1 (face elixir-atom-face fontified t)) . -1667) (undo-tree-id253 . -1) 1668 (t 25415 31103 29921 492000)) nil (25415 33401 672987 890000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -1578) (undo-tree-id254 . -1) 1579 (t 25415 33401 724835 298000)) nil (25415 33469 600306 230000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-string-face fontified t)) . -1641) (undo-tree-id255 . -1) (#("h" 0 1 (face font-lock-string-face fontified t)) . -1642) (undo-tree-id256 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -1643) (undo-tree-id257 . -1) (#("w" 0 1 (face font-lock-string-face fontified t)) . -1644) (undo-tree-id258 . -1) 1645 (t 25415 33469 613078 781000)) nil (25415 37822 114028 826000) 0 nil])
([nil nil ((1641 . 1647)) nil (25415 37822 113997 567000) 0 nil])
([nil nil ((1581 . 1582) (t 25415 37822 161826 676000)) nil (25415 37879 217181 200000) 0 nil])
([nil nil ((1603 . 1604)) nil (25415 37879 217179 96000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face syntax-table (15) fontified t)) . -1706) (undo-tree-id259 . -1) (#("s" 0 1 (face font-lock-string-face fontified t)) . -1707) (undo-tree-id260 . -1) (#("h" 0 1 (face font-lock-string-face fontified t)) . -1708) (undo-tree-id261 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -1709) (undo-tree-id262 . -1) (#("w" 0 1 (face font-lock-string-face fontified t)) . -1710) (undo-tree-id263 . -1) 1711) nil (25415 37879 217173 996000) 0 nil])
([nil nil ((1706 . 1712)) nil (25415 37879 217137 938000) 0 nil])
([nil nil ((1706 . 1707) (#("\"" 0 1 (syntax-table (15) fontified nil)) . -1706) (1706 . 1707) (t 25415 37879 227194 625000)) nil (25415 37883 519784 248000) 0 nil])
([nil nil ((#("   # IO.inspect(data)" 0 3 (fontified t) 3 5 (face font-lock-comment-delimiter-face fontified t) 5 7 (face font-lock-comment-face fontified t) 7 15 (face font-lock-comment-face fontified t) 15 20 (face font-lock-comment-face fontified t) 20 21 (face font-lock-comment-face fontified t)) . 1578) (undo-tree-id275 . -21) (t 25415 37883 543293 289000)) nil (25415 38097 314740 385000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1578) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1)) nil (25415 38097 314735 486000) 0 nil])
([nil nil ((#("   # Phoenix.View.render_many(data, view, \"render_many.json\")" 0 3 (fontified t) 3 5 (face font-lock-comment-delimiter-face fontified t) 5 17 (face font-lock-comment-face fontified t) 17 42 (face font-lock-comment-face fontified t) 42 43 (face font-lock-comment-face syntax-table (15) fontified t) 43 59 (face font-lock-comment-face fontified t) 59 60 (face font-lock-comment-face syntax-table (15) fontified t) 60 61 (face font-lock-comment-face fontified t)) . 1578) (undo-tree-id268 . -60) (undo-tree-id269 . -60) (undo-tree-id270 . -61)) nil (25415 38097 314725 247000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1578) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1)) nil (25415 38097 314712 402000) 0 nil])
([nil nil ((1230 . 1231) (t 25415 38097 327471 204000)) nil (25415 39243 279323 579000) 0 nil])
([nil nil ((1240 . 1241)) nil (25415 39243 279321 225000) 0 nil])
([nil nil ((1269 . 1270)) nil (25415 39243 279318 901000) 0 nil])
([nil nil ((1352 . 1353)) nil (25415 39243 279316 165000) 0 nil])
([nil nil ((1397 . 1398)) nil (25415 39243 279308 762000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1495) (undo-tree-id276 . -1) (#("+" 0 1 (fontified t)) . -1496) (undo-tree-id277 . -1) (#("+" 0 1 (fontified t)) . -1497) (undo-tree-id278 . -1) 1498 (t 25415 39243 290583 968000)) nil (25415 41284 656969 791000) 0 nil])
([nil nil ((1495 . 1498)) nil (25415 41284 656947 508000) 0 nil])
([nil nil ((1479 . 1481) (t 25415 41284 666167 63000)) nil (25415 41312 739876 998000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t)) . -1480) (undo-tree-id279 . -1) (undo-tree-id280 . 1) (undo-tree-id281 . -1) 1481) nil (25415 41312 739872 920000) 0 nil])
([nil nil ((1512 . 1513) (#("]" 0 1 (fontified nil)) . -1512) (1512 . 1513)) nil (25415 41312 739850 778000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -1479) (undo-tree-id288 . -1) 1480 (t 25415 41312 767348 452000)) nil (25415 41360 440317 231000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1495) (undo-tree-id285 . -1) (#("|" 0 1 (fontified t)) . -1496) (undo-tree-id286 . -1) (#(" " 0 1 (fontified t)) . -1497) (undo-tree-id287 . -1) 1498) nil (25415 41360 440312 21000) 0 nil])
([nil nil ((1495 . 1498)) nil (25415 41360 440304 476000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t)) . -1511) (undo-tree-id282 . -1) (undo-tree-id283 . 1) (undo-tree-id284 . -1) 1512) nil (25415 41360 440298 415000) 0 nil])
([nil nil ((#("	
	
#    conn
#    |> put_status(:created)
#    |> put_resp_header(\"location\", Routes.quota_path(conn, :index, resp_cq_data))
#    |> put_view(CabbotWeb.ClientsQuotaView)
#    |> render(\"show_many.json\", clients_quota: resp_cq_data)
" 0 4 (fontified t) 4 9 (fontified t face font-lock-comment-delimiter-face) 9 14 (fontified t face font-lock-comment-face) 14 19 (fontified t face font-lock-comment-delimiter-face) 19 43 (fontified t face font-lock-comment-face) 43 48 (fontified t face font-lock-comment-delimiter-face) 48 67 (fontified t face font-lock-comment-face) 67 68 (fontified t syntax-table (15) face font-lock-comment-face) 68 76 (fontified t face font-lock-comment-face) 76 77 (fontified t syntax-table (15) face font-lock-comment-face) 77 126 (fontified t face font-lock-comment-face) 126 131 (fontified t face font-lock-comment-delimiter-face) 131 171 (fontified t face font-lock-comment-face) 171 176 (fontified t face font-lock-comment-delimiter-face) 176 186 (fontified t face font-lock-comment-face) 186 187 (fontified t syntax-table (15) face font-lock-comment-face) 187 201 (fontified t face font-lock-comment-face) 201 202 (fontified t syntax-table (15) face font-lock-comment-face) 202 233 (fontified t face font-lock-comment-face)) . -1226) (undo-tree-id16 . -43) (undo-tree-id17 . -43) (undo-tree-id18 . -14) (undo-tree-id19 . -14) (undo-tree-id20 . -4) (undo-tree-id21 . -4) (undo-tree-id22 . -2) (undo-tree-id23 . -2) (undo-tree-id24 . -233) (undo-tree-id25 . -233) (undo-tree-id26 . -171) (undo-tree-id27 . -171) (undo-tree-id28 . -126) (undo-tree-id29 . -126) (undo-tree-id30 . -233) (undo-tree-id31 . -233) (undo-tree-id32 . -233) (undo-tree-id33 . -233) 1459 (t 25415 41360 461323 507000)) nil (25417 8872 178057 421000) 0 nil])
([nil nil ((#("
#    conn
#    |> put_status(:created)
#    |> put_resp_header(\"location\", Routes.quota_path(conn, :index, resp_q_data))
#    |> put_view(CabbotWeb.QuotaView)
#    |> render(\"show_many.json\", quotas: resp_q_data)
" 0 1 (fontified t) 1 6 (fontified t face font-lock-comment-delimiter-face) 6 11 (fontified t face font-lock-comment-face) 11 16 (fontified t face font-lock-comment-delimiter-face) 16 40 (fontified t face font-lock-comment-face) 40 45 (fontified t face font-lock-comment-delimiter-face) 45 64 (fontified t face font-lock-comment-face) 64 65 (fontified t syntax-table (15) face font-lock-comment-face) 65 73 (fontified t face font-lock-comment-face) 73 74 (fontified t syntax-table (15) face font-lock-comment-face) 74 122 (fontified t face font-lock-comment-face) 122 127 (fontified t face font-lock-comment-delimiter-face) 127 160 (fontified t face font-lock-comment-face) 160 165 (fontified t face font-lock-comment-delimiter-face) 165 175 (fontified t face font-lock-comment-face) 175 176 (fontified t syntax-table (15) face font-lock-comment-face) 176 190 (fontified t face font-lock-comment-face) 190 191 (fontified t syntax-table (15) face font-lock-comment-face) 191 214 (fontified t face font-lock-comment-face)) . -705) (undo-tree-id0 . -214) (undo-tree-id1 . -214) (undo-tree-id2 . -160) (undo-tree-id3 . -160) (undo-tree-id4 . -122) (undo-tree-id5 . -122) (undo-tree-id6 . -40) (undo-tree-id7 . -40) (undo-tree-id8 . -11) (undo-tree-id9 . -11) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -214) (undo-tree-id13 . -214) (undo-tree-id14 . -214) (undo-tree-id15 . -214) 919) nil (25417 8872 178018 259000) 0 nil])
([nil nil ((431 . 435) (#("    " 0 4 (fontified nil)) . 430) (430 . 434) (430 . 431) (t 25417 8872 189466 484000)) nil (25417 11752 974481 474000) 0 nil])
([nil nil ((711 . 715) (#("    " 0 4 (fontified nil)) . 710) (710 . 714) (710 . 711)) nil (25417 11752 974476 915000) 0 nil])
([nil nil ((#("     
" 0 6 (fontified t)) . 615) (undo-tree-id65 . -6) (undo-tree-id66 . -6) (undo-tree-id67 . -6)) nil (25417 11752 974472 377000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 615) (undo-tree-id64 . -1)) nil (25417 11752 974464 943000) 0 nil])
([nil nil ((#("     
" 0 6 (fontified t)) . 917) (undo-tree-id61 . -6) (undo-tree-id62 . -6) (undo-tree-id63 . -6)) nil (25417 11752 974461 126000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 917) (undo-tree-id60 . -1)) nil (25417 11752 974453 622000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . 1009) (1009 . 1013) (1009 . 1010)) nil (25417 11752 974448 432000) 0 nil])
([nil nil ((1219 . 1221) (#("  " 0 2 (fontified nil)) . 1218) (1218 . 1220) (1218 . 1219)) nil (25417 11752 974443 793000) 0 nil])
([nil current ((#("  # ***********************************************
  # unused functions
  # ***********************************************

  def fix_null_fields({key, value}) do
    if value |> to_string() |> String.length() == 0 do
      new_value = @config[\"NullFieldFillupValues\"][\"Quota\"][key]
      {key, new_value}
    end
  end

  # ************************************************" 0 2 (fontified t) 2 4 (fontified t face font-lock-comment-delimiter-face) 4 52 (fontified t face font-lock-comment-face) 52 54 (fontified t) 54 56 (fontified t face font-lock-comment-delimiter-face) 56 73 (fontified t face font-lock-comment-face) 73 75 (fontified t) 75 77 (fontified t face font-lock-comment-delimiter-face) 77 125 (fontified t face font-lock-comment-face) 125 128 (fontified t) 128 131 (fontified t face font-lock-keyword-face) 131 132 (fontified t) 132 147 (fontified t face font-lock-function-name-face) 147 162 (fontified t) 162 164 (fontified t face font-lock-keyword-face) 164 169 (fontified t) 169 171 (fontified t face font-lock-keyword-face) 171 196 (fontified t) 196 202 (fontified t face font-lock-type-face) 202 217 (fontified t) 217 219 (fontified t face font-lock-keyword-face) 219 226 (fontified t) 226 235 (fontified t face font-lock-variable-name-face) 235 238 (fontified t) 238 245 (fontified t face elixir-attribute-face) 245 246 (fontified t) 246 247 (syntax-table (15) fontified t face font-lock-string-face) 247 268 (fontified t face font-lock-string-face) 268 269 (syntax-table (15) fontified t face font-lock-string-face) 269 271 (fontified t) 271 272 (syntax-table (15) fontified t face font-lock-string-face) 272 277 (fontified t face font-lock-string-face) 277 278 (syntax-table (15) fontified t face font-lock-string-face) 278 312 (fontified t) 312 315 (fontified t face font-lock-keyword-face) 315 318 (fontified t) 318 321 (fontified t face font-lock-keyword-face) 321 325 (fontified t) 325 327 (fontified t face font-lock-comment-delimiter-face) 327 375 (fontified t face font-lock-comment-face)) . -5954) (undo-tree-id34 . -52) (undo-tree-id35 . -52) (undo-tree-id36 . -316) (undo-tree-id37 . -316) (undo-tree-id38 . -322) (undo-tree-id39 . -322) (undo-tree-id40 . -323) (undo-tree-id41 . -323) (undo-tree-id42 . -308) (undo-tree-id43 . -308) (undo-tree-id44 . -375) (undo-tree-id45 . -323) (undo-tree-id46 . -285) (undo-tree-id47 . -285) (undo-tree-id48 . -220) (undo-tree-id49 . -220) (undo-tree-id50 . -165) (undo-tree-id51 . -165) (undo-tree-id52 . -126) (undo-tree-id53 . -126) (undo-tree-id54 . -125) (undo-tree-id55 . -125) (undo-tree-id56 . -73) (undo-tree-id57 . -73) (undo-tree-id58 . -375) (undo-tree-id59 . -323) 6329) nil (25417 11752 974431 620000) 0 nil])
nil
