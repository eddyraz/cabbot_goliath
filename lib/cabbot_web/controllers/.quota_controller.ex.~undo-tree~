(undo-tree-save-format-version . 1)
"5cfcf445b58e3fa123c48ce56e182723f0ac2ec7"
[nil nil nil nil (25409 29094 804503 627000) 0 nil]
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -1519) (undo-tree-id0 . -1) 1520 (t 25408 35607 941008 165000)) nil (25409 29094 804496 514000) 0 nil])
([nil nil ((1563 . 1565) (t 25409 29094 815332 115000)) nil (25409 30584 671127 971000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -1574) (1574 . 1575) (#(")" 0 1 (fontified nil)) . -1574) (1574 . 1575) (1565 . 1575)) nil (25409 30584 671123 61000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -1571) (undo-tree-id2 . -1) 1572 (t 25409 30584 673470 92000)) nil (25409 30680 551759 998000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -1569) (undo-tree-id1 . -1) 1570) nil (25409 30680 551750 60000) 0 nil])
([nil nil ((1569 . 1571) (t 25409 30680 569540 79000)) nil (25409 30683 926411 238000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -1571) (undo-tree-id3 . -1) 1572) nil (25409 30683 926409 144000) 0 nil])
([nil nil ((1571 . 1572)) nil (25409 30683 926394 807000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -1569) (undo-tree-id5 . -1) 1570 (t 25409 30683 969542 983000)) nil (25409 30732 929179 20000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -1570) (undo-tree-id4 . -1) 1571) nil (25409 30732 929173 810000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t face font-lock-function-name-face)) . -2625) (undo-tree-id11 . -1) (#("b" 0 1 (fontified t face font-lock-function-name-face)) . -2626) (undo-tree-id12 . -1) 2627 (t 25409 30732 941587 691000)) nil (25409 34320 993645 234000) 0 nil])
([nil nil ((2625 . 2631)) nil (25409 34320 993642 919000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -2418) (undo-tree-id9 . -1) (#("b" 0 1 (fontified t)) . -2419) (undo-tree-id10 . -1) 2420) nil (25409 34320 993641 46000) 0 nil])
([nil nil ((2418 . 2423)) nil (25409 34320 993638 581000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t face font-lock-function-name-face)) . -2633) (undo-tree-id8 . -1) 2634) nil (25409 34320 993637 319000) 0 nil])
([nil nil ((3918 . 3919)) nil (25409 34320 993635 566000) 0 nil])
([nil nil ((3919 . 3924)) nil (25409 34320 993634 634000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t face font-lock-function-name-face)) . -3920) (undo-tree-id7 . -1) 3921) nil (25409 34320 993633 402000) 0 nil])
([nil nil ((3920 . 3921)) nil (25409 34320 993631 758000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t face font-lock-function-name-face)) . -3920) (undo-tree-id6 . -1) 3921) nil (25409 34320 993630 276000) 0 nil])
([nil nil ((3920 . 3921)) nil (25409 34320 993618 494000) 0 nil])
([nil nil ((2487 . 2493)) nil (25409 34320 993614 336000) 0 nil])
([nil nil ((#("  def parse_incomming_data(data) do
    loan_code_field = data[\"Codprestamo\"]
    quota_concept_list = data[\"CuotasConcepto\"]
    quota_plan_list = data[\"PlanCuotas\"]

    final_map = %{}

    # ++++++++++++++++++++Para la tabla ClientsCuota++++++++++++++++++++++++++++++++++

    quota_concept_list
    |> Enum.map(fn
      %{
        \"Seccuota\" => quota_sec_value,
        \"Codconcepto\" => concept_code_value,
        \"Numdiascalc\" => num_calc_days_values,
        \"Montocuota\" => quota_amount_value,
        \"Montodevengado\" => earned_amount_value,
        \"Montopagado\" => paid_amount_value,
        \"Fechapago\" => payment_date_value,
        \"Estadoconcepto\" => concept_state_value
      } ->
        concept_quota_final_map =
          %{
            \"Seccuota\" => quota_sec_value,
            \"Codconcepto\" => concept_code_value,
            \"Numdiascalc\" => num_calc_days_values,
            \"Montocuota\" => quota_amount_value,
            \"Montodevengado\" => earned_amount_value,
            \"Montopagado\" => paid_amount_value,
            \"Fechapago\" => payment_date_value,
            \"Estadoconcepto\" => concept_state_value
          }
          |> field_translator(\"CuotasConcepto\")
          |> request_data_merge(concept_quota_map_fill_up(), loan_code_field)

        concept_parsed_dates =
          concept_quota_final_map
          |> extract_date_fields()

        proto_concept_quota_map =
          Map.merge(concept_quota_final_map, concept_parsed_dates)
          |> Map.update!(\"payment_date\", fn _x -> ~N[1970-01-01 00:00:00] end)
          |> Map.update!(\"quota_sec\", fn _x -> _x  |> String.to_integer() end)

        Enum.into([ClientsQuota: proto_concept_quota_map], %{})
    end)

    # ++++++++++++++++++++Para la tabla Cuota++++++++++++++++++++++++++++++++++

    quota_plan_list
    |> Enum.map(fn %{
                     \"Diasatrcuota\" => delayed_days_value,
                     \"Estadocuota\" => quota_state_value,
                     \"Fechainicio\" => start_date_value,
                     \"Fechapago\" => payment_date_value,
                     \"Fechavencimiento\" => due_date_value,
                     \"Seccuota\" => quota_sequence_value
                   } ->
      quota_final_map =
        %{
          \"Diasatrcuota\" => delayed_days_value,
          \"Estadocuota\" => quota_state_value,
          \"Fechainicio\" => start_date_value,
          \"Fechapago\" => payment_date_value,
          \"Fechavencimiento\" => due_date_value,
          \"Seccuota\" => quota_sequence_value
        }
        |> field_translator(\"PlanCuotas\")
        |> request_data_merge(quota_map_fill_up(), loan_code_field)

      parsed_dates =
        quota_final_map
        |> extract_date_fields()

      proto_quota_map =
        Map.merge(quota_final_map, parsed_dates)
        |> Map.update!(\"payment_date\", fn _x -> ~N[1970-01-01 00:00:00] end)

      #      Enum.into([Quota: proto_quota_map], final_map)
    end)
  end
" 0 2 (fontified t) 2 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 26 (fontified t face font-lock-function-name-face) 26 33 (fontified t) 33 35 (fontified t face font-lock-keyword-face) 35 40 (fontified t) 40 55 (fontified t face font-lock-variable-name-face) 55 63 (fontified t) 63 64 (syntax-table (15) fontified t face font-lock-string-face) 64 75 (fontified t face font-lock-string-face) 75 76 (syntax-table (15) fontified t face font-lock-string-face) 76 82 (fontified t) 82 100 (fontified t face font-lock-variable-name-face) 100 108 (fontified t) 108 109 (syntax-table (15) fontified t face font-lock-string-face) 109 123 (fontified t face font-lock-string-face) 123 124 (syntax-table (15) fontified t face font-lock-string-face) 124 130 (fontified t) 130 145 (fontified t face font-lock-variable-name-face) 145 153 (fontified t) 153 154 (syntax-table (15) fontified t face font-lock-string-face) 154 164 (fontified t face font-lock-string-face) 164 165 (syntax-table (15) fontified t face font-lock-string-face) 165 172 (fontified t) 172 181 (fontified t face font-lock-variable-name-face) 181 193 (fontified t) 193 195 (fontified t face font-lock-comment-delimiter-face) 195 268 (fontified t face font-lock-comment-face) 268 276 (face font-lock-comment-face fontified t) 276 307 (fontified t) 307 311 (fontified t face font-lock-type-face) 311 316 (fontified t) 316 318 (fontified t face font-lock-keyword-face) 318 336 (fontified t) 336 337 (syntax-table (15) fontified t face font-lock-string-face) 337 345 (fontified t face font-lock-string-face) 345 346 (syntax-table (15) fontified t face font-lock-string-face) 346 375 (fontified t) 375 376 (syntax-table (15) fontified t face font-lock-string-face) 376 387 (fontified t face font-lock-string-face) 387 388 (syntax-table (15) fontified t face font-lock-string-face) 388 420 (fontified t) 420 421 (syntax-table (15) fontified t face font-lock-string-face) 421 432 (fontified t face font-lock-string-face) 432 433 (syntax-table (15) fontified t face font-lock-string-face) 433 467 (fontified t) 467 468 (syntax-table (15) fontified t face font-lock-string-face) 468 478 (fontified t face font-lock-string-face) 478 479 (syntax-table (15) fontified t face font-lock-string-face) 479 511 (fontified t) 511 512 (syntax-table (15) fontified t face font-lock-string-face) 512 526 (fontified t face font-lock-string-face) 526 527 (syntax-table (15) fontified t face font-lock-string-face) 527 560 (fontified t) 560 561 (syntax-table (15) fontified t face font-lock-string-face) 561 572 (fontified t face font-lock-string-face) 572 573 (syntax-table (15) fontified t face font-lock-string-face) 573 604 (fontified t) 604 605 (syntax-table (15) fontified t face font-lock-string-face) 605 614 (fontified t face font-lock-string-face) 614 615 (syntax-table (15) fontified t face font-lock-string-face) 615 647 (fontified t) 647 648 (syntax-table (15) fontified t face font-lock-string-face) 648 662 (fontified t face font-lock-string-face) 662 663 (syntax-table (15) fontified t face font-lock-string-face) 663 706 (fontified t) 706 729 (fontified t face font-lock-variable-name-face) 729 757 (fontified t) 757 758 (fontified t syntax-table (15) face font-lock-string-face) 758 766 (fontified t face font-lock-string-face) 766 767 (fontified t syntax-table (15) face font-lock-string-face) 767 776 (fontified t) 776 788 (fontified t) 788 800 (fontified t) 800 801 (syntax-table (15) fontified t face font-lock-string-face) 801 812 (fontified t face font-lock-string-face) 812 813 (syntax-table (15) fontified t face font-lock-string-face) 813 849 (fontified t) 849 850 (syntax-table (15) fontified t face font-lock-string-face) 850 861 (fontified t face font-lock-string-face) 861 862 (syntax-table (15) fontified t face font-lock-string-face) 862 900 (fontified t) 900 901 (syntax-table (15) fontified t face font-lock-string-face) 901 911 (fontified t face font-lock-string-face) 911 912 (syntax-table (15) fontified t face font-lock-string-face) 912 948 (fontified t) 948 949 (syntax-table (15) fontified t face font-lock-string-face) 949 963 (fontified t face font-lock-string-face) 963 964 (syntax-table (15) fontified t face font-lock-string-face) 964 1001 (fontified t) 1001 1002 (syntax-table (15) fontified t face font-lock-string-face) 1002 1013 (fontified t face font-lock-string-face) 1013 1014 (syntax-table (15) fontified t face font-lock-string-face) 1014 1049 (fontified t) 1049 1050 (syntax-table (15) fontified t face font-lock-string-face) 1050 1059 (fontified t face font-lock-string-face) 1059 1060 (syntax-table (15) fontified t face font-lock-string-face) 1060 1096 (fontified t) 1096 1097 (syntax-table (15) fontified t face font-lock-string-face) 1097 1111 (fontified t face font-lock-string-face) 1111 1112 (syntax-table (15) fontified t face font-lock-string-face) 1112 1178 (fontified t) 1178 1179 (syntax-table (15) fontified t face font-lock-string-face) 1179 1193 (fontified t face font-lock-string-face) 1193 1194 (syntax-table (15) fontified t face font-lock-string-face) 1194 1283 (fontified t) 1283 1288 (fontified t face font-lock-variable-name-face) 1288 1303 (face font-lock-variable-name-face fontified t) 1303 1306 (fontified t) 1306 1384 (fontified t) 1384 1407 (fontified t face font-lock-variable-name-face) 1407 1420 (fontified t) 1420 1423 (fontified t face font-lock-type-face) 1423 1490 (fontified t) 1490 1493 (fontified t face font-lock-type-face) 1493 1502 (fontified t) 1502 1503 (syntax-table (15) fontified t face font-lock-string-face) 1503 1515 (fontified t face font-lock-string-face) 1515 1516 (syntax-table (15) fontified t face font-lock-string-face) 1516 1518 (fontified t) 1518 1520 (fontified t face font-lock-keyword-face) 1520 1521 (fontified t) 1521 1523 (fontified t face font-lock-comment-face) 1523 1527 (fontified t) 1527 1529 (fontified t face font-lock-builtin-face) 1529 1530 (fontified t) 1530 1549 (fontified t face font-lock-string-face) 1549 1551 (fontified t) 1551 1554 (fontified t face font-lock-keyword-face) 1554 1569 (fontified t) 1569 1572 (fontified t face font-lock-type-face) 1572 1581 (fontified t) 1581 1582 (syntax-table (15) fontified t face font-lock-string-face) 1582 1591 (fontified t face font-lock-string-face) 1591 1592 (syntax-table (15) fontified t face font-lock-string-face) 1592 1594 (fontified t) 1594 1596 (fontified t face font-lock-keyword-face) 1596 1597 (fontified t) 1597 1599 (fontified t face font-lock-comment-face) 1599 1603 (fontified t) 1603 1605 (fontified t face font-lock-comment-face) 1605 1610 (fontified t) 1610 1616 (fontified t face font-lock-type-face) 1616 1630 (fontified t) 1630 1633 (fontified t face font-lock-keyword-face) 1633 1644 (fontified t) 1644 1648 (fontified t face font-lock-type-face) 1648 1655 (fontified t) 1655 1668 (fontified t face elixir-atom-face) 1668 1704 (fontified t) 1704 1707 (fontified t face font-lock-keyword-face) 1707 1714 (fontified t) 1714 1716 (fontified t face font-lock-comment-delimiter-face) 1716 1790 (fontified t face font-lock-comment-face) 1790 1806 (fontified t) 1806 1811 (fontified t) 1811 1818 (fontified t) 1818 1822 (fontified t face font-lock-type-face) 1822 1827 (fontified t) 1827 1829 (fontified t face font-lock-keyword-face) 1829 1854 (fontified t) 1854 1855 (syntax-table (15) fontified t face font-lock-string-face) 1855 1867 (fontified t face font-lock-string-face) 1867 1868 (syntax-table (15) fontified t face font-lock-string-face) 1868 1913 (fontified t) 1913 1914 (syntax-table (15) fontified t face font-lock-string-face) 1914 1925 (fontified t face font-lock-string-face) 1925 1926 (syntax-table (15) fontified t face font-lock-string-face) 1926 1970 (fontified t) 1970 1971 (syntax-table (15) fontified t face font-lock-string-face) 1971 1982 (fontified t face font-lock-string-face) 1982 1983 (syntax-table (15) fontified t face font-lock-string-face) 1983 2026 (fontified t) 2026 2027 (syntax-table (15) fontified t face font-lock-string-face) 2027 2036 (fontified t face font-lock-string-face) 2036 2037 (syntax-table (15) fontified t face font-lock-string-face) 2037 2082 (fontified t) 2082 2083 (syntax-table (15) fontified t face font-lock-string-face) 2083 2099 (fontified t face font-lock-string-face) 2099 2100 (syntax-table (15) fontified t face font-lock-string-face) 2100 2141 (fontified t) 2141 2142 (syntax-table (15) fontified t face font-lock-string-face) 2142 2150 (fontified t face font-lock-string-face) 2150 2151 (syntax-table (15) fontified t face font-lock-string-face) 2151 2206 (fontified t) 2206 2221 (fontified t face font-lock-variable-name-face) 2221 2245 (fontified t) 2245 2246 (fontified t syntax-table (15) face font-lock-string-face) 2246 2258 (fontified t face font-lock-string-face) 2258 2259 (fontified t syntax-table (15) face font-lock-string-face) 2259 2293 (fontified t) 2293 2294 (fontified t syntax-table (15) face font-lock-string-face) 2294 2305 (fontified t face font-lock-string-face) 2305 2306 (fontified t syntax-table (15) face font-lock-string-face) 2306 2311 (fontified t) 2311 2329 (fontified t) 2329 2339 (fontified t) 2339 2340 (syntax-table (15) fontified t face font-lock-string-face) 2340 2351 (fontified t face font-lock-string-face) 2351 2352 (syntax-table (15) fontified t face font-lock-string-face) 2352 2384 (fontified t) 2384 2385 (syntax-table (15) fontified t face font-lock-string-face) 2385 2394 (fontified t face font-lock-string-face) 2394 2395 (syntax-table (15) fontified t face font-lock-string-face) 2395 2429 (fontified t) 2429 2430 (syntax-table (15) fontified t face font-lock-string-face) 2430 2446 (fontified t face font-lock-string-face) 2446 2447 (syntax-table (15) fontified t face font-lock-string-face) 2447 2477 (fontified t) 2477 2478 (syntax-table (15) fontified t face font-lock-string-face) 2478 2486 (fontified t face font-lock-string-face) 2486 2487 (syntax-table (15) fontified t face font-lock-string-face) 2487 2550 (fontified t) 2550 2551 (syntax-table (15) fontified t face font-lock-string-face) 2551 2561 (fontified t face font-lock-string-face) 2561 2562 (syntax-table (15) fontified t face font-lock-string-face) 2562 2639 (fontified t) 2639 2651 (fontified t face font-lock-variable-name-face) 2651 2718 (fontified t) 2718 2733 (fontified t face font-lock-variable-name-face) 2733 2744 (fontified t) 2744 2747 (fontified t face font-lock-type-face) 2747 2796 (fontified t) 2796 2799 (fontified t face font-lock-type-face) 2799 2808 (fontified t) 2808 2809 (fontified t syntax-table (15) face font-lock-string-face) 2809 2821 (fontified t face font-lock-string-face) 2821 2822 (fontified t syntax-table (15) face font-lock-string-face) 2822 2824 (fontified t) 2824 2826 (fontified t face font-lock-keyword-face) 2826 2827 (fontified t) 2827 2829 (fontified t face font-lock-comment-face) 2829 2833 (fontified t) 2833 2835 (face font-lock-builtin-face fontified t) 2835 2836 (fontified t) 2836 2855 (face font-lock-string-face fontified t) 2855 2857 (fontified t) 2857 2860 (face font-lock-keyword-face fontified t) 2860 2862 (fontified t) 2862 2869 (fontified t) 2869 2876 (fontified t face font-lock-comment-delimiter-face) 2876 2923 (fontified t face font-lock-comment-face) 2923 2927 (fontified t) 2927 2930 (fontified t face font-lock-keyword-face) 2930 2934 (fontified t) 2934 2937 (fontified t face font-lock-keyword-face) 2937 2938 (fontified t)) . -5406) (undo-tree-id13 . -2938) (undo-tree-id14 . -2938) (undo-tree-id15 . -2932) (undo-tree-id16 . -2932) (undo-tree-id17 . -2923) (undo-tree-id18 . -2923) (undo-tree-id19 . -2863) (undo-tree-id20 . -2863) (undo-tree-id21 . -2862) (undo-tree-id22 . -2862) (undo-tree-id23 . -2785) (undo-tree-id24 . -2785) (undo-tree-id25 . -2736) (undo-tree-id26 . -2736) (undo-tree-id27 . -2712) (undo-tree-id28 . -2712) (undo-tree-id29 . -2654) (undo-tree-id30 . -2654) (undo-tree-id31 . -2633) (undo-tree-id32 . -2633) (undo-tree-id33 . -2632) (undo-tree-id34 . -2632) (undo-tree-id35 . -2564) (undo-tree-id36 . -2564) (undo-tree-id37 . -2522) (undo-tree-id38 . -2522) (undo-tree-id39 . -2512) (undo-tree-id40 . -2512) (undo-tree-id41 . -2467) (undo-tree-id42 . -2467) (undo-tree-id43 . -2419) (undo-tree-id44 . -2419) (undo-tree-id45 . -2374) (undo-tree-id46 . -2374) (undo-tree-id47 . -2329) (undo-tree-id48 . -2329) (undo-tree-id49 . -2283) (undo-tree-id50 . -2283) (undo-tree-id51 . -2235) (undo-tree-id52 . -2235) (undo-tree-id53 . -2711) (undo-tree-id54 . -2711) (undo-tree-id55 . -2224) (undo-tree-id56 . -2224) (undo-tree-id57 . -2176) (undo-tree-id58 . -2938) (undo-tree-id59 . -2938) (undo-tree-id60 . -2200) (undo-tree-id61 . -2200) (undo-tree-id62 . -2176) (undo-tree-id63 . -2176) (undo-tree-id64 . -2678) (undo-tree-id65 . -2678) (undo-tree-id66 . -2938) (undo-tree-id67 . -2938) 8344 (t 25409 34321 6198 281000)) nil (25409 34391 739956 940000) 0 nil])
([nil nil ((#("  def quota_map_fill_up() do
    quota_plan_fill_up = @config[\"PlanCuotasFillupValues\"]
  end

  def concept_quota_map_fill_up() do
    quota_concept_fill_up = @config[\"CuotasConceptoFillupValues\"]
  end
" 0 2 (fontified t) 2 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 23 (fontified t face font-lock-function-name-face) 23 26 (fontified t) 26 28 (fontified t face font-lock-keyword-face) 28 33 (fontified t) 33 51 (fontified t face font-lock-variable-name-face) 51 54 (fontified t) 54 61 (fontified t face elixir-attribute-face) 61 62 (fontified t) 62 63 (syntax-table (15) fontified t face font-lock-string-face) 63 85 (fontified t face font-lock-string-face) 85 86 (syntax-table (15) fontified t face font-lock-string-face) 86 90 (fontified t) 90 93 (fontified t face font-lock-keyword-face) 93 97 (fontified t) 97 100 (fontified t face font-lock-keyword-face) 100 101 (fontified t) 101 118 (fontified t face font-lock-function-name-face) 118 126 (face font-lock-function-name-face fontified t) 126 129 (fontified t) 129 131 (face font-lock-keyword-face fontified t) 131 132 (fontified t) 132 136 (fontified t) 136 157 (fontified t face font-lock-variable-name-face) 157 160 (fontified t) 160 167 (fontified t face elixir-attribute-face) 167 168 (fontified t) 168 169 (syntax-table (15) fontified t face font-lock-string-face) 169 195 (fontified t face font-lock-string-face) 195 196 (syntax-table (15) fontified t face font-lock-string-face) 196 200 (fontified t) 200 203 (fontified t face font-lock-keyword-face) 203 204 (fontified t)) . 6851) (undo-tree-id70 . -204) (undo-tree-id71 . -204) (undo-tree-id72 . -198) (undo-tree-id73 . -198) (undo-tree-id74 . -132) (undo-tree-id75 . -132) (undo-tree-id76 . -95) (undo-tree-id77 . -95) (undo-tree-id78 . -94) (undo-tree-id79 . -94) (undo-tree-id80 . -88) (undo-tree-id81 . -88) (undo-tree-id82 . -204) (undo-tree-id83 . -204) (undo-tree-id84 . -29) (undo-tree-id85 . -29) (undo-tree-id86 . -204) (undo-tree-id87 . -204) (undo-tree-id88 . -204) 7055 (t 25409 34391 749674 541000)) nil (25409 34488 190254 29000) 0 nil])
([nil nil ((6404 . 6406) (#("  " 0 2 (fontified t)) . 6403) (undo-tree-id68 . -2) (undo-tree-id69 . -2) (6402 . 6406)) nil (25409 34488 190213 444000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6609 . 6610) (nil fontified nil 6609 . 6610) (nil fontified nil 6606 . 6609) (nil fontified nil 6602 . 6606) (nil fontified nil 6601 . 6602) (nil fontified nil 6575 . 6601) (nil fontified nil 6574 . 6575) (nil fontified nil 6573 . 6574) (nil fontified nil 6566 . 6573) (nil fontified nil 6563 . 6566) (nil fontified nil 6542 . 6563) (nil fontified nil 6538 . 6542) (nil fontified nil 6537 . 6538) (nil fontified nil 6535 . 6537) (nil fontified nil 6532 . 6535) (nil fontified nil 6524 . 6532) (nil fontified nil 6507 . 6524) (nil fontified nil 6506 . 6507) (nil fontified nil 6503 . 6506) (nil fontified nil 6499 . 6503) (nil fontified nil 6496 . 6499) (nil fontified nil 6492 . 6496) (nil fontified nil 6491 . 6492) (nil fontified nil 6469 . 6491) (nil fontified nil 6468 . 6469) (nil fontified nil 6467 . 6468) (nil fontified nil 6460 . 6467) (nil fontified nil 6457 . 6460) (nil fontified nil 6439 . 6457) (nil fontified nil 6434 . 6439) (nil fontified nil 6432 . 6434) (nil fontified nil 6429 . 6432) (nil fontified nil 6412 . 6429) (nil fontified nil 6411 . 6412) (nil fontified nil 6408 . 6411) (nil fontified nil 6406 . 6408) (6406 . 6610)) nil (25409 34488 190187 676000) 0 nil])
([nil nil ((282 . 284) (#("  " 0 2 (fontified nil)) . 281) (281 . 283) (281 . 282) (t 25409 34488 237058 872000)) nil (25409 36287 370900 111000) 0 nil])
([nil nil ((#("q" 0 1 (fontified t)) . -6442) (undo-tree-id113 . -1) (#("u" 0 1 (fontified t)) . -6443) (undo-tree-id114 . -1) (#("o" 0 1 (fontified t)) . -6444) (undo-tree-id115 . -1) (#("t" 0 1 (fontified t)) . -6445) (undo-tree-id116 . -1) (#("a" 0 1 (fontified t)) . -6446) (undo-tree-id117 . -1) (#("_" 0 1 (fontified t)) . -6447) (undo-tree-id118 . -1) (#("p" 0 1 (fontified t)) . -6448) (undo-tree-id119 . -1) (#("l" 0 1 (fontified t)) . -6449) (undo-tree-id120 . -1) (#("a" 0 1 (fontified t)) . -6450) (undo-tree-id121 . -1) (#("n" 0 1 (fontified t)) . -6451) (undo-tree-id122 . -1) (#("_" 0 1 (fontified t)) . -6452) (undo-tree-id123 . -1) (#("f" 0 1 (fontified t)) . -6453) (undo-tree-id124 . -1) (#("i" 0 1 (fontified t)) . -6454) (undo-tree-id125 . -1) (#("l" 0 1 (fontified t)) . -6455) (undo-tree-id126 . -1) (#("l" 0 1 (fontified t)) . -6456) (undo-tree-id127 . -1) (#("_" 0 1 (fontified t)) . -6457) (undo-tree-id128 . -1) (#("u" 0 1 (fontified t)) . -6458) (undo-tree-id129 . -1) (#("p" 0 1 (fontified t)) . -6459) (undo-tree-id130 . -1) (#(" " 0 1 (fontified t)) . -6460) (undo-tree-id131 . -1) (#("=" 0 1 (fontified t)) . -6461) (undo-tree-id132 . -1) (#(" " 0 1 (fontified t)) . -6462) (undo-tree-id133 . -1) 6463 (t 25409 36287 370152 876000)) nil (25409 36310 123859 352000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -6527) (undo-tree-id92 . -1) (#("a" 0 1 (fontified t)) . -6528) (undo-tree-id93 . -1) (#("_" 0 1 (fontified t)) . -6529) (undo-tree-id94 . -1) (#("c" 0 1 (fontified t)) . -6530) (undo-tree-id95 . -1) (#("o" 0 1 (fontified t)) . -6531) (undo-tree-id96 . -1) (#("n" 0 1 (fontified t)) . -6532) (undo-tree-id97 . -1) (#("c" 0 1 (fontified t)) . -6533) (undo-tree-id98 . -1) (#("e" 0 1 (fontified t)) . -6534) (undo-tree-id99 . -1) (#("p" 0 1 (fontified t)) . -6535) (undo-tree-id100 . -1) (#("t" 0 1 (fontified t)) . -6536) (undo-tree-id101 . -1) (#("_" 0 1 (fontified t)) . -6537) (undo-tree-id102 . -1) (#("f" 0 1 (fontified t)) . -6538) (undo-tree-id103 . -1) (#("i" 0 1 (fontified t)) . -6539) (undo-tree-id104 . -1) (#("l" 0 1 (fontified t)) . -6540) (undo-tree-id105 . -1) (#("l" 0 1 (fontified t)) . -6541) (undo-tree-id106 . -1) (#("_" 0 1 (fontified t)) . -6542) (undo-tree-id107 . -1) (#("u" 0 1 (fontified t)) . -6543) (undo-tree-id108 . -1) (#("p" 0 1 (fontified t)) . -6544) (undo-tree-id109 . -1) (#(" " 0 1 (fontified t)) . -6545) (undo-tree-id110 . -1) (#("=" 0 1 (fontified t)) . -6546) (undo-tree-id111 . -1) (#(" " 0 1 (fontified t)) . -6547) (undo-tree-id112 . -1) 6548) nil (25409 36310 123818 275000) 0 nil])
([nil nil ((#("q" 0 1 (fontified t)) . -6524) (undo-tree-id89 . -1) (#("u" 0 1 (fontified t)) . -6525) (undo-tree-id90 . -1) (#("o" 0 1 (fontified t)) . -6526) (undo-tree-id91 . -1) 6527) nil (25409 36310 123778 159000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -287) (undo-tree-id137 . -1) 288 (t 25409 36310 130739 928000)) nil (25409 37599 874752 344000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -319) (undo-tree-id136 . -1) 320) nil (25409 37599 874750 190000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -355) (undo-tree-id135 . -1) 356) nil (25409 37599 874747 285000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -402) (undo-tree-id134 . -1) 403) nil (25409 37599 874741 835000) 0 nil])
([nil nil ((1518 . 1519) (t 25409 37599 879121 300000)) nil (25409 40806 777124 937000) 0 nil])
([nil nil ((1563 . 1564)) nil (25409 40806 777122 523000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-face)) . -1563) (undo-tree-id138 . -1) 1564) nil (25409 40806 777118 926000) 0 nil])
([nil nil ((1564 . 1565)) nil (25409 40806 777102 936000) 0 nil])
([nil nil ((1477 . 1478)) nil (25409 40806 777099 750000) 0 nil])
([nil nil ((1016 . 1017)) nil (25409 40806 777092 266000) 0 nil])
([nil nil ((#("      |> IO.inspect()" 0 9 (fontified t) 9 11 (fontified t face font-lock-type-face) 11 21 (fontified t)) . 569) (undo-tree-id144 . -21) (t 25409 40806 797340 985000)) nil (25409 40829 586489 949000) 0 nil])
([nil nil ((#("      # |> parse_incomming_data()" 0 6 (fontified t) 6 8 (fontified t face font-lock-comment-delimiter-face) 8 33 (fontified t face font-lock-comment-face)) . 513) (undo-tree-id143 . -33)) nil (25409 40829 586484 188000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 513) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1)) nil (25409 40829 586474 690000) 0 nil])
([nil nil ((#("    final_map =" 0 4 (fontified t) 4 13 (fontified t face font-lock-variable-name-face) 13 15 (fontified t)) . 464) (undo-tree-id162 . -15) (t 25409 40829 593616 748000)) nil (25409 40857 446542 912000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 464) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1)) nil (25409 40857 446538 284000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 519) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1)) nil (25409 40857 446530 18000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 519) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1)) nil (25409 40857 446521 703000) 0 nil])
([nil nil ((#("    final_map" 0 13 (fontified t)) . 519) (undo-tree-id149 . -13)) nil (25409 40857 446512 976000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 519) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1)) nil (25409 40857 446506 604000) 0 nil])
([nil nil ((519 . 521)) nil (25409 40857 446478 441000) 0 nil])
([nil nil (("
" . -6957) (undo-tree-id167 . -1) ("
" . -6511) (6351 . 6380) (#("    def quota_map_fill_up() do
" 4 7 (face font-lock-keyword-face) 8 25 (face font-lock-function-name-face) 28 30 (face font-lock-keyword-face)) . -6351) (undo-tree-id168 . -2) ("
" . -5354) (5195 . 5273) (#("	  |> Map.update!(\"quota_sec\", fn _x -> _x  |> String.to_integer() end)
" 6 9 (face font-lock-type-face) 18 19 (face font-lock-string-face syntax-table (15)) 19 28 (face font-lock-string-face) 28 29 (face font-lock-string-face syntax-table (15)) 31 33 (face font-lock-keyword-face) 34 36 (face font-lock-comment-face) 40 42 (face font-lock-comment-face) 47 53 (face font-lock-type-face) 67 70 (face font-lock-keyword-face)) . -5195) (1391 . 1516) (#("#        |> put_view(CabbotWeb.QuotaView)
#        |> render(\"show.json\", quota: quota)
#	|> dbg()
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 9 (fontified t face font-lock-comment-delimiter-face) 9 21 (fontified t face font-lock-comment-face) 21 40 (fontified t face font-lock-comment-face) 40 42 (fontified t face font-lock-comment-face) 42 43 (fontified t face font-lock-comment-delimiter-face) 43 51 (fontified t face font-lock-comment-delimiter-face) 51 61 (fontified t face font-lock-comment-face) 61 62 (syntax-table (15) fontified t face font-lock-comment-face) 62 71 (fontified t face font-lock-comment-face) 71 72 (syntax-table (15) fontified t face font-lock-comment-face) 72 74 (fontified t face font-lock-comment-face) 74 80 (fontified t face font-lock-comment-face) 80 87 (fontified t face font-lock-comment-face) 87 88 (fontified t face font-lock-comment-face) 88 89 (fontified t face font-lock-comment-delimiter-face) 89 96 (fontified t face font-lock-comment-face) 96 97 (fontified t face font-lock-comment-face) 97 98 (fontified t face font-lock-comment-face) 98 99 (fontified t face font-lock-comment-face)) . -1391) (undo-tree-id169 . -95) (undo-tree-id170 . -88) (undo-tree-id171 . -88) (undo-tree-id172 . -42) (undo-tree-id173 . -42) (912 . 1040) (#("#        |> put_view(CabbotWeb.ClientsQuotaView)
#        |> render(\"show.json\", clients_quota: clients_quota)
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 9 (fontified t face font-lock-comment-delimiter-face) 9 19 (fontified t face font-lock-comment-face) 19 21 (fontified t face font-lock-comment-face) 21 40 (fontified t face font-lock-comment-face) 40 47 (fontified t face font-lock-comment-face) 47 49 (fontified t face font-lock-comment-face) 49 52 (fontified t face font-lock-comment-delimiter-face) 52 58 (fontified t face font-lock-comment-delimiter-face) 58 68 (fontified t face font-lock-comment-face) 68 69 (syntax-table (15) fontified t face font-lock-comment-face) 69 74 (fontified t face font-lock-comment-face) 74 75 (fontified t face font-lock-comment-face) 75 78 (fontified t face font-lock-comment-face) 78 79 (syntax-table (15) fontified t face font-lock-comment-face) 79 90 (fontified t face font-lock-comment-face) 90 111 (fontified t face font-lock-comment-face)) . -912) (undo-tree-id174 . -111) (undo-tree-id175 . -111) (undo-tree-id176 . -49) (undo-tree-id177 . -49) (453 . 534) (#("      credits_params
      |> hd
      |> parse_maps()
      |> Enum.map(fn quota_map ->
" 0 20 (fontified t) 20 21 (fontified t) 21 33 (fontified t) 33 55 (fontified t) 55 57 (fontified t) 57 64 (fontified t) 64 68 (fontified t face font-lock-type-face) 68 73 (fontified t) 73 75 (fontified t face font-lock-keyword-face) 75 89 (fontified t)) . -453) (undo-tree-id178 . -55) (undo-tree-id179 . -55) (undo-tree-id180 . -33) (undo-tree-id181 . -33) (undo-tree-id182 . -89) (undo-tree-id183 . -89) (undo-tree-id184 . -21) (undo-tree-id185 . -21) (282 . 397) (#("  
    def index(conn, _params) do
      quota = Creditos.list_quota()
      render(conn, \"index.json\", quota: quota)
    end
" 0 3 (fontified t) 3 5 (fontified t) 5 7 (fontified t) 7 10 (fontified t face font-lock-keyword-face) 10 11 (fontified t) 11 16 (fontified t face font-lock-function-name-face) 16 23 (fontified t) 23 30 (fontified t face font-lock-comment-face) 30 32 (fontified t) 32 34 (fontified t face font-lock-keyword-face) 34 35 (fontified t) 35 37 (fontified t) 37 41 (fontified t) 41 46 (fontified t face font-lock-variable-name-face) 46 49 (fontified t) 49 57 (fontified t face font-lock-type-face) 57 71 (fontified t) 71 73 (fontified t) 73 77 (fontified t) 77 90 (fontified t) 90 91 (fontified t syntax-table (15) face font-lock-string-face) 91 101 (fontified t face font-lock-string-face) 101 102 (fontified t syntax-table (15) face font-lock-string-face) 102 104 (fontified t) 104 110 (fontified t face elixir-atom-face) 110 118 (fontified t) 118 120 (fontified t) 120 122 (fontified t) 122 125 (fontified t face font-lock-keyword-face) 125 126 (fontified t)) . -282) (t 25409 40857 453952 827000)) nil (25409 40909 102728 393000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -495) (undo-tree-id163 . -1) (#("a" 0 1 (fontified t)) . -496) (undo-tree-id164 . -1) (#("p" 0 1 (fontified t)) . -497) (undo-tree-id165 . -1) (#("s" 0 1 (fontified t)) . -498) (undo-tree-id166 . -1) 499) nil (25409 40909 102688 618000) 0 nil])
([nil nil ((495 . 501)) nil (25409 40909 102660 215000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t face font-lock-function-name-face)) . -2204) (undo-tree-id186 . -1) (#("a" 0 1 (fontified t face font-lock-function-name-face)) . -2205) (undo-tree-id187 . -1) (#("p" 0 1 (fontified t face font-lock-function-name-face)) . -2206) (undo-tree-id188 . -1) (#("s" 0 1 (fontified t face font-lock-function-name-face)) . -2207) (undo-tree-id189 . -1) 2208 (t 25409 40909 110573 425000)) nil (25409 40924 854718 229000) 0 nil])
([nil nil ((2204 . 2210)) nil (25409 40924 854687 691000) 0 nil])
([nil nil ((399 . 401) (#("  " 0 2 (fontified t)) . 398) (undo-tree-id194 . -2) (398 . 401) (#("  " 0 2 (fontified nil)) . 397) (397 . 399) (397 . 398) (t 25409 40924 898762 471000)) nil (25409 40996 74507 573000) 0 nil])
([nil nil ((399 . 401) (#("  " 0 2 (fontified nil)) . 398) (398 . 400) (398 . 399)) nil (25409 40996 74504 818000) 0 nil])
([nil nil ((401 . 422)) nil (25409 40996 74503 675000) 0 nil])
([nil nil ((422 . 424)) nil (25409 40996 74502 944000) 0 nil])
([nil nil ((424 . 427)) nil (25409 40996 74502 313000) 0 nil])
([nil nil ((427 . 432)) nil (25409 40996 74501 652000) 0 nil])
([nil nil ((432 . 435)) nil (25409 40996 74500 910000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t face font-lock-function-name-face)) . -405) (undo-tree-id190 . -1) (#("a" 0 1 (fontified t face font-lock-function-name-face)) . -406) (undo-tree-id191 . -1) (#("p" 0 1 (fontified t face font-lock-function-name-face)) . -407) (undo-tree-id192 . -1) (#("_" 0 1 (fontified t face font-lock-function-name-face)) . -408) (undo-tree-id193 . -1) 409) nil (25409 40996 74499 117000) 0 nil])
([nil nil ((405 . 409)) nil (25409 40996 74487 144000) 0 nil])
([nil nil ((427 . 432)) nil (25409 40996 74486 32000) 0 nil])
([nil nil ((432 . 435)) nil (25409 40996 74481 814000) 0 nil])
([nil nil ((435 . 437) (t 25409 40996 75611 412000)) nil (25409 42129 594269 20000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -432) (undo-tree-id221 . -1) (#("o" 0 1 (fontified t face elixir-atom-face)) . -433) (undo-tree-id222 . -1) (#("k" 0 1 (fontified t face elixir-atom-face)) . -434) (undo-tree-id223 . -1) (#("\\" 0 1 (fontified t)) . -435) (undo-tree-id224 . -1) (#("\\" 0 1 (fontified t)) . -436) (undo-tree-id225 . -1) 437) nil (25409 42129 594264 321000) 0 nil])
([nil nil ((423 . 430)) nil (25409 42129 594252 349000) 0 nil])
([nil nil ((430 . 447)) nil (25409 42129 594250 355000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t face font-lock-type-face)) . -437) (undo-tree-id220 . -1) 438) nil (25409 42129 594248 131000) 0 nil])
([nil nil ((446 . 453)) nil (25409 42129 594244 44000) 0 nil])
([nil nil ((#("M" 0 1 (fontified t face font-lock-type-face)) . -423) (undo-tree-id219 . -1) 424) nil (25409 42129 594241 549000) 0 nil])
([nil nil ((423 . 424)) nil (25409 42129 594237 461000) 0 nil])
([nil nil ((#("C" 0 1 (fontified t face font-lock-type-face)) . -431) (undo-tree-id218 . -1) 432) nil (25409 42129 594235 97000) 0 nil])
([nil nil ((431 . 432)) nil (25409 42129 594231 119000) 0 nil])
([nil nil ((438 . 439)) nil (25409 42129 594229 166000) 0 nil])
([nil nil ((#("F" 0 1 (fontified t)) . -439) (undo-tree-id217 . -1) 440) nil (25409 42129 594226 761000) 0 nil])
([nil nil ((439 . 440)) nil (25409 42129 594222 413000) 0 nil])
([nil nil ((448 . 449)) nil (25409 42129 594220 430000) 0 nil])
([nil nil ((431 . 432)) nil (25409 42129 594218 436000) 0 nil])
([nil nil ((460 . 465)) nil (25409 42129 594216 773000) 0 nil])
([nil nil ((#("}" 0 1 (fontified nil)) . -466) (466 . 467) (#("}" 0 1 (fontified nil)) . -466) (466 . 467) (465 . 467)) nil (25409 42129 594213 857000) 0 nil])
([nil nil ((465 . 466)) nil (25409 42129 594210 180000) 0 nil])
([nil nil ((468 . 474) (469 . 473) (#("      " 0 6 (fontified nil)) . 468) (468 . 474) (467 . 469)) nil (25409 42129 594207 716000) 0 nil])
([nil nil ((nil rear-nonsticky nil 488 . 489) (nil fontified nil 488 . 489) (nil fontified nil 475 . 488) (nil fontified nil 474 . 475) (474 . 489)) nil (25409 42129 594203 528000) 0 nil])
([nil nil ((489 . 493)) nil (25409 42129 594199 471000) 0 nil])
([nil nil ((492 . 493)) nil (25409 42129 594197 677000) 0 nil])
([nil nil ((493 . 506)) nil (25409 42129 594195 864000) 0 nil])
([nil nil ((5408 . 5410)) nil (25409 42129 594194 10000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -5426) (5426 . 5427) (#(")" 0 1 (fontified nil)) . -5426) (5426 . 5427) (5410 . 5427)) nil (25409 42129 594191 295000) 0 nil])
([nil nil ((5425 . 5426)) nil (25409 42129 594187 648000) 0 nil])
([nil nil ((5427 . 5431)) nil (25409 42129 594185 795000) 0 nil])
([nil nil ((#("M" 0 1 (fontified t face font-lock-type-face)) . -5427) (undo-tree-id213 . -1) (#("a" 0 1 (fontified t face font-lock-type-face)) . -5428) (undo-tree-id214 . -1) (#("p" 0 1 (fontified t face font-lock-type-face)) . -5429) (undo-tree-id215 . -1) (#("s" 0 1 (fontified t face font-lock-type-face)) . -5430) (undo-tree-id216 . -1) 5431) nil (25409 42129 594182 299000) 0 nil])
([nil nil ((5251 . 5253)) nil (25409 42129 594172 220000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -5269) (5269 . 5270) (#(")" 0 1 (fontified nil)) . -5269) (5269 . 5270) (5253 . 5270)) nil (25409 42129 594169 4000) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -5431) (undo-tree-id195 . -1) (#(">" 0 1 (fontified t)) . -5432) (undo-tree-id196 . -1) (#(" " 0 1 (fontified t)) . -5433) (undo-tree-id197 . -1) (#("M" 0 1 (fontified t face font-lock-type-face)) . -5434) (undo-tree-id198 . -1) (#("a" 0 1 (fontified t face font-lock-type-face)) . -5435) (undo-tree-id199 . -1) (#("p" 0 1 (fontified t face font-lock-type-face)) . -5436) (undo-tree-id200 . -1) (#("." 0 1 (fontified t)) . -5437) (undo-tree-id201 . -1) (#("u" 0 1 (fontified t)) . -5438) (undo-tree-id202 . -1) (#("p" 0 1 (fontified t)) . -5439) (undo-tree-id203 . -1) (#("d" 0 1 (fontified t)) . -5440) (undo-tree-id204 . -1) (#("a" 0 1 (fontified t)) . -5441) (undo-tree-id205 . -1) (#("t" 0 1 (fontified t)) . -5442) (undo-tree-id206 . -1) (#("e" 0 1 (fontified t)) . -5443) (undo-tree-id207 . -1) (#("!" 0 1 (fontified t)) . -5444) (undo-tree-id208 . -1) (#("(" 0 1 (fontified t)) . -5445) (undo-tree-id209 . -1) (#(")" 0 1 (fontified t)) . -5446) (undo-tree-id210 . -1) (undo-tree-id211 . 1) (undo-tree-id212 . -1) 5447) nil (25409 42129 594157 112000) 0 nil])
([nil nil ((5359 . 5360)) nil (25409 42129 594066 863000) 0 nil])
([nil nil ((5280 . 5281)) nil (25409 42129 594059 179000) 0 nil])
([nil nil ((#("    
" 0 4 (fontified t) 4 5 (fontified t)) . 514) (undo-tree-id226 . -5) (undo-tree-id227 . -5) (undo-tree-id228 . -5) (undo-tree-id229 . -5) (t 25409 42129 617170 907000)) nil (25409 42160 306105 313000) 0 nil])
([nil nil ((473 . 474)) nil (25409 42160 306082 250000) 0 nil])
([nil nil ((467 . 474)) nil (25409 42160 306078 633000) 0 nil])
([nil nil ((474 . 477)) nil (25409 42160 306071 450000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -474) (undo-tree-id230 . -1) (#("o" 0 1 (fontified t face elixir-atom-face)) . -475) (undo-tree-id231 . -1) (#("k" 0 1 (fontified t face elixir-atom-face)) . -476) (undo-tree-id232 . -1) 477 (t 25409 42160 317026 813000)) nil (25409 42175 147397 366000) 0 nil])
([nil nil ((#("  def fix_null_fields_new({key, value}) do
    :ok
  end
" 0 2 (fontified t) 2 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 25 (fontified t face font-lock-function-name-face) 25 40 (fontified t) 40 42 (fontified t face font-lock-keyword-face) 42 47 (fontified t) 47 50 (fontified t face elixir-atom-face) 50 53 (fontified t) 53 56 (fontified t face font-lock-keyword-face) 56 57 (fontified t)) . -7064) (undo-tree-id235 . -57) (undo-tree-id236 . -57) (undo-tree-id237 . -57) (undo-tree-id238 . -57) 7121 (t 25409 42175 168961 471000)) nil (25409 42269 951542 509000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -5363) (undo-tree-id233 . -1) (#(" " 0 1 (fontified t face font-lock-comment-delimiter-face)) . -5364) (undo-tree-id234 . -1) 5365) nil (25409 42269 951528 323000) 0 nil])
([nil nil ((5363 . 5365)) nil (25409 42269 951503 166000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -5283) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (#(" " 0 1 (fontified t face font-lock-comment-delimiter-face)) . -5284) (undo-tree-id255 . -1) 5285 (t 25409 42270 605 667000)) nil (25409 42477 28067 862000) 0 nil])
([nil nil ((5283 . 5284)) nil (25409 42477 28057 943000) 0 nil])
([nil nil ((5272 . 5273) (#("  " 0 2 (fontified t)) . -5256) (5273 . 5274)) nil (25409 42477 28055 709000) 0 nil])
([nil nil ((5273 . 5276)) nil (25409 42477 28052 944000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -5275) (undo-tree-id251 . -1) 5276) nil (25409 42477 28050 620000) 0 nil])
([nil nil ((5275 . 5280)) nil (25409 42477 28046 41000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -5275) (undo-tree-id246 . -1) (#("a" 0 1 (fontified t)) . -5276) (undo-tree-id247 . -1) (#("s" 0 1 (fontified t)) . -5277) (undo-tree-id248 . -1) (#("e" 0 1 (fontified t face font-lock-keyword-face)) . -5278) (undo-tree-id249 . -1) (#(" " 0 1 (fontified t)) . -5279) (undo-tree-id250 . -1) 5280) nil (25409 42477 28041 733000) 0 nil])
([nil nil ((5256 . 5258)) nil (25409 42477 28026 314000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 5261) (#("(" 0 1 (fontified t)) . 5261) (undo-tree-id244 . 1) (undo-tree-id245 . -1) (#("t" 0 1 (fontified t)) . 5261) (#("c" 0 1 (fontified t)) . 5261) (#("e" 0 1 (fontified t)) . 5261) (#("p" 0 1 (fontified t)) . 5261) (#("s" 0 1 (fontified t)) . 5261) (#("n" 0 1 (fontified t)) . 5261) (#("i" 0 1 (fontified t)) . 5261) (#("." 0 1 (fontified t)) . 5261) (#("O" 0 1 (fontified t face font-lock-type-face)) . 5261) (#("I" 0 1 (fontified t face font-lock-type-face)) . 5261)) nil (25409 42477 28020 533000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -5275) (5275 . 5276) (#(")" 0 1 (fontified nil)) . -5275) (5275 . 5276) (5261 . 5276)) nil (25409 42477 28009 974000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -5262) (undo-tree-id240 . -1) (#("s" 0 1 (fontified t)) . -5263) (undo-tree-id241 . -1) (#("e" 0 1 (fontified t)) . -5264) (undo-tree-id242 . -1) (#(" " 0 1 (fontified t)) . -5265) (undo-tree-id243 . -1) 5266) nil (25409 42477 28004 113000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -5261) (undo-tree-id239 . -1) 5262) nil (25409 42477 27855 616000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -5289) (5289 . 5290) (#(")" 0 1 (fontified nil)) . -5289) (5289 . 5290) (5275 . 5290)) nil (25409 42477 27833 13000) 0 nil])
([nil nil ((5261 . 5270) (t 25409 42477 48130 928000)) nil (25409 42506 400966 594000) 0 nil])
([nil nil ((5264 . 5265)) nil (25409 42506 400963 709000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -5273) (undo-tree-id258 . -1) (#("." 0 1 (fontified t)) . -5274) (undo-tree-id259 . -1) (#("k" 0 1 (fontified t)) . -5275) (undo-tree-id260 . -1) (#("e" 0 1 (fontified t)) . -5276) (undo-tree-id261 . -1) (#("y" 0 1 (fontified t)) . -5277) (undo-tree-id262 . -1) (#("s" 0 1 (fontified t)) . -5278) (undo-tree-id263 . -1) (#("(" 0 1 (fontified t)) . -5279) (undo-tree-id264 . -1) (#(")" 0 1 (fontified t)) . -5280) (undo-tree-id265 . -1) (undo-tree-id266 . 1) (undo-tree-id267 . -1) 5281) nil (25409 42506 400957 307000) 0 nil])
([nil nil ((#("M" 0 1 (fontified t)) . -5271) (undo-tree-id256 . -1) (#("a" 0 1 (fontified t)) . -5272) (undo-tree-id257 . -1) 5273) nil (25409 42506 400930 46000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -5272) (5272 . 5273) (#(")" 0 1 (fontified nil)) . -5272) (5272 . 5273) (5271 . 5273) (t 25409 42506 412090 586000)) nil (25409 42508 635392 659000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -5382) (undo-tree-id272 . -1) 5383 (t 25409 42508 648087 746000)) nil (25409 43435 823160 571000) 0 nil])
([nil nil ((280 . 283)) nil (25409 43435 823158 487000) 0 nil])
([nil nil ((nil rear-nonsticky nil 329 . 330) (nil fontified nil 329 . 330) (nil fontified nil 320 . 329) (nil fontified nil 318 . 320) (nil fontified nil 311 . 318) (nil fontified nil 302 . 311) (nil fontified nil 291 . 302) (nil fontified nil 290 . 291) (nil fontified nil 283 . 290) (283 . 330)) nil (25409 43435 823157 425000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -303) (undo-tree-id269 . -1) (#("e" 0 1 (fontified t)) . -304) (undo-tree-id270 . -1) (#("t" 0 1 (fontified t)) . -305) (undo-tree-id271 . -1) 306) nil (25409 43435 823154 460000) 0 nil])
([nil nil ((303 . 305)) nil (25409 43435 823149 471000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -304) (undo-tree-id268 . -1) 305) nil (25409 43435 823148 28000) 0 nil])
([nil nil ((304 . 310)) nil (25409 43435 823136 107000) 0 nil])
([nil nil ((232 . 233)) nil (25409 43435 823131 799000) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -5332) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (#(">" 0 1 (fontified t)) . -5333) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (#(" " 0 1 (fontified t)) . -5334) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (#("I" 0 1 (fontified t face font-lock-type-face)) . -5335) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (#("O" 0 1 (fontified t face font-lock-type-face)) . -5336) (undo-tree-id293 . -1) (#("." 0 1 (fontified t)) . -5337) (undo-tree-id294 . -1) (#("i" 0 1 (fontified t)) . -5338) (undo-tree-id295 . -1) (#("n" 0 1 (fontified t)) . -5339) (undo-tree-id296 . -1) (#("s" 0 1 (fontified t)) . -5340) (undo-tree-id297 . -1) (#("p" 0 1 (fontified t)) . -5341) (undo-tree-id298 . -1) (#("e" 0 1 (fontified t)) . -5342) (undo-tree-id299 . -1) (#("c" 0 1 (fontified t)) . -5343) (undo-tree-id300 . -1) (#("t" 0 1 (fontified t)) . -5344) (undo-tree-id301 . -1) (#("(" 0 1 (fontified t)) . -5345) (undo-tree-id302 . -1) (#(")" 0 1 (fontified t)) . -5346) (undo-tree-id303 . -1) (undo-tree-id304 . 1) (undo-tree-id305 . -1) 5347 (t 25409 43435 826511 86000)) nil (25409 43505 423949 629000) 0 nil])
([nil nil ((#("|> Map.values()" 0 3 (fontified t) 3 6 (fontified t face font-lock-type-face) 6 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t)) . 5313) (undo-tree-id284 . -15)) nil (25409 43505 423848 727000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 5313) (#("	" 0 1 (fontified t)) . 5313) (#("
" 0 1 (fontified t)) . 5313) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1)) nil (25409 43505 423846 643000) 0 nil])
([nil nil ((#(" 
" 0 1 (fontified t) 1 2 (fontified t)) . 5313) (undo-tree-id275 . -2) (undo-tree-id276 . -2) (undo-tree-id277 . -2) (undo-tree-id278 . -1) (undo-tree-id279 . -2)) nil (25409 43505 423839 79000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 5313) (#(" " 0 1 (fontified t)) . 5313) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (#(" " 0 1 (fontified t)) . 5313) (#(" " 0 1 (fontified t)) . 5313) (#(" " 0 1 (fontified t)) . 5313) (#(" " 0 1 (fontified t)) . 5313) (#(" " 0 1 (fontified t)) . 5313) (#(" " 0 1 (fontified t)) . 5313) (#(" " 0 1 (fontified t)) . 5313) (#(" " 0 1 (fontified t)) . 5313)) nil (25409 43505 423735 61000) 0 nil])
([nil nil ((#(" # @config Application.get_env(:cabbot, :creditos)" 0 1 (fontified t) 1 3 (fontified t face font-lock-comment-delimiter-face) 3 10 (fontified t face font-lock-comment-face) 10 11 (fontified t face font-lock-comment-face) 11 22 (fontified t face font-lock-comment-face) 22 31 (fontified t face font-lock-comment-face) 31 38 (fontified t face font-lock-comment-face) 38 40 (fontified t face font-lock-comment-face) 40 49 (fontified t face font-lock-comment-face) 49 50 (fontified t face font-lock-comment-face)) . 231) (undo-tree-id310 . -3) (undo-tree-id311 . -2) (undo-tree-id312 . -50) (t 25409 43505 434290 688000)) nil (25409 43529 784977 731000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 231) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1)) nil (25409 43529 784965 278000) 0 nil])
([nil nil ((#("      
" 0 6 (fontified t) 6 7 (fontified t)) . 472) (undo-tree-id397 . -7) (undo-tree-id398 . -7) (undo-tree-id399 . -7) (undo-tree-id400 . -6) (t 25409 43529 808923 81000)) nil (25409 45337 764463 10000) 0 nil])
([nil nil ((526 . 528) (#("  " 0 2 (fontified t)) . 525) (undo-tree-id396 . -2) (525 . 528) (#("  " 0 2 (fontified nil)) . -521) (526 . 527)) nil (25409 45337 764452 317000) 0 nil])
([nil nil ((589 . 593) (#("    " 0 4 (fontified t)) . 588) (undo-tree-id394 . -4) (588 . 593) (#("    " 0 4 (fontified t)) . 587) (undo-tree-id395 . -4) (586 . 592)) nil (25409 45337 764446 314000) 0 nil])
([nil nil ((589 . 593) (#("    " 0 4 (fontified nil)) . 588) (588 . 592) (588 . 589)) nil (25409 45337 764439 329000) 0 nil])
([nil nil ((593 . 604)) nil (25409 45337 764436 413000) 0 nil])
([nil nil ((604 . 610)) nil (25409 45337 764434 659000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face font-lock-function-name-face)) . -413) (undo-tree-id388 . -1) (#("r" 0 1 (fontified t face font-lock-function-name-face)) . -414) (undo-tree-id389 . -1) (#("e" 0 1 (fontified t face font-lock-function-name-face)) . -415) (undo-tree-id390 . -1) (#("a" 0 1 (fontified t face font-lock-function-name-face)) . -416) (undo-tree-id391 . -1) (#("t" 0 1 (fontified t face font-lock-function-name-face)) . -417) (undo-tree-id392 . -1) (#("e" 0 1 (fontified t face font-lock-function-name-face)) . -418) (undo-tree-id393 . -1) 419) nil (25409 45337 764430 531000) 0 nil])
([nil nil ((413 . 417)) nil (25409 45337 764417 743000) 0 nil])
([nil nil ((417 . 423)) nil (25409 45337 764416 100000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t face font-lock-function-name-face)) . -409) (undo-tree-id385 . -1) (#("e" 0 1 (fontified t face font-lock-function-name-face)) . -410) (undo-tree-id386 . -1) (#("t" 0 1 (fontified t face font-lock-function-name-face)) . -411) (undo-tree-id387 . -1) 412) nil (25409 45337 764413 94000) 0 nil])
([nil nil ((409 . 414)) nil (25409 45337 764405 828000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t face font-lock-function-name-face)) . -409) (undo-tree-id380 . -1) (#("u" 0 1 (fontified t face font-lock-function-name-face)) . -410) (undo-tree-id381 . -1) (#("i" 0 1 (fontified t face font-lock-function-name-face)) . -411) (undo-tree-id382 . -1) (#("l" 0 1 (fontified t face font-lock-function-name-face)) . -412) (undo-tree-id383 . -1) (#("d" 0 1 (fontified t face font-lock-function-name-face)) . -413) (undo-tree-id384 . -1) 414) nil (25409 45337 764401 940000) 0 nil])
([nil nil ((409 . 412)) nil (25409 45337 764391 7000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -601) (undo-tree-id374 . -1) (#("r" 0 1 (fontified t)) . -602) (undo-tree-id375 . -1) (#("e" 0 1 (fontified t)) . -603) (undo-tree-id376 . -1) (#("a" 0 1 (fontified t)) . -604) (undo-tree-id377 . -1) (#("t" 0 1 (fontified t)) . -605) (undo-tree-id378 . -1) (#("e" 0 1 (fontified t)) . -606) (undo-tree-id379 . -1) 607) nil (25409 45337 764386 397000) 0 nil])
([nil nil ((601 . 605)) nil (25409 45337 764372 868000) 0 nil])
([nil nil ((605 . 611)) nil (25409 45337 764371 114000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -619) (619 . 620) (#(")" 0 1 (fontified nil)) . -619) (619 . 620) (618 . 620)) nil (25409 45337 764368 709000) 0 nil])
([nil nil ((#("get_ecto_query_params()" 0 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t)) . 597) (undo-tree-id368 . -23) (undo-tree-id369 . -23) (undo-tree-id370 . 1) (undo-tree-id371 . -23) (undo-tree-id372 . 2) (undo-tree-id373 . -22) 620) nil (25409 45337 764364 280000) 0 nil])
([nil nil ((687 . 693) (#("      " 0 6 (fontified nil)) . 686) (undo-tree-id367 . -6) (685 . 693)) nil (25409 45337 764352 695000) 0 nil])
([nil nil ((687 . 693) (#("      " 0 6 (fontified nil)) . 686) (686 . 692) (686 . 687)) nil (25409 45337 764348 15000) 0 nil])
([nil nil ((nil rear-nonsticky nil 715 . 716) (nil fontified nil 715 . 716) (nil fontified nil 714 . 715) (nil fontified nil 693 . 714) (693 . 716)) nil (25409 45337 764344 328000) 0 nil])
([nil nil ((716 . 723)) nil (25409 45337 764340 950000) 0 nil])
([nil nil ((723 . 726)) nil (25409 45337 764339 307000) 0 nil])
([nil nil ((#("O" 0 1 (fontified t face font-lock-type-face)) . -724) (undo-tree-id365 . -1) (#("I" 0 1 (fontified t face font-lock-type-face)) . -725) (undo-tree-id366 . -1) 726) nil (25409 45337 764336 741000) 0 nil])
([nil nil ((724 . 734)) nil (25409 45337 764331 280000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -737) (737 . 738) (#(")" 0 1 (fontified nil)) . -737) (737 . 738) (734 . 738)) nil (25409 45337 764328 724000) 0 nil])
([nil nil ((715 . 737)) nil (25409 45337 764325 367000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -736) (736 . 737) (#(")" 0 1 (fontified nil)) . -736) (736 . 737)) nil (25409 45337 764322 912000) 0 nil])
([nil nil ((715 . 725)) nil (25409 45337 764319 886000) 0 nil])
([nil nil ((747 . 748)) nil (25409 45337 764318 122000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -747) (undo-tree-id364 . -1) 748) nil (25409 45337 764315 977000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -443) (undo-tree-id343 . -1) (#("i" 0 1 (fontified t)) . -444) (undo-tree-id344 . -1) (#("t" 0 1 (fontified t)) . -445) (undo-tree-id345 . -1) (#("s" 0 1 (fontified t)) . -446) (undo-tree-id346 . -1) (#("_" 0 1 (fontified t)) . -447) (undo-tree-id347 . -1) (#("f" 0 1 (fontified t)) . -448) (undo-tree-id348 . -1) (#("u" 0 1 (fontified t)) . -449) (undo-tree-id349 . -1) (#("n" 0 1 (fontified t)) . -450) (undo-tree-id350 . -1) (#("c" 0 1 (fontified t)) . -451) (undo-tree-id351 . -1) (#("t" 0 1 (fontified t)) . -452) (undo-tree-id352 . -1) (#("i" 0 1 (fontified t)) . -453) (undo-tree-id353 . -1) (#("o" 0 1 (fontified t)) . -454) (undo-tree-id354 . -1) (#("n" 0 1 (fontified t)) . -455) (undo-tree-id355 . -1) (#("," 0 1 (fontified t)) . -456) (undo-tree-id356 . -1) (#(" " 0 1 (fontified t)) . -457) (undo-tree-id357 . -1) (#("p" 0 1 (fontified t)) . -458) (undo-tree-id358 . -1) (#("a" 0 1 (fontified t)) . -459) (undo-tree-id359 . -1) (#("r" 0 1 (fontified t)) . -460) (undo-tree-id360 . -1) (#("a" 0 1 (fontified t)) . -461) (undo-tree-id361 . -1) (#("m" 0 1 (fontified t)) . -462) (undo-tree-id362 . -1) (#("s" 0 1 (fontified t)) . -463) (undo-tree-id363 . -1) 464) nil (25409 45337 764303 822000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -438) (undo-tree-id338 . -1) (#(" " 0 1 (fontified t)) . -439) (undo-tree-id339 . -1) (#("c" 0 1 (fontified t)) . -440) (undo-tree-id340 . -1) (#("r" 0 1 (fontified t)) . -441) (undo-tree-id341 . -1) (#("e" 0 1 (fontified t)) . -442) (undo-tree-id342 . -1) 443) nil (25409 45337 764259 127000) 0 nil])
([nil nil ((434 . 435)) nil (25409 45337 764247 833000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -456) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (#(" " 0 1 (fontified t face font-lock-comment-delimiter-face)) . -457) (undo-tree-id336 . -1) (undo-tree-id337 . -1) 458) nil (25409 45337 764244 846000) 0 nil])
([nil nil ((456 . 467)) nil (25409 45337 764233 602000) 0 nil])
([nil nil ((467 . 471)) nil (25409 45337 764231 959000) 0 nil])
([nil nil ((471 . 473)) nil (25409 45337 764230 275000) 0 nil])
([nil nil ((471 . 472)) nil (25409 45337 764228 522000) 0 nil])
([nil nil ((#("[:ClientsQuota] => %ClientsQuota " 0 1 (fontified t) 1 14 (fontified t face elixir-atom-face) 14 15 (rear-nonsticky t fontified t) 15 19 (fontified t) 19 32 (fontified t face font-lock-type-face) 32 33 (fontified t)) . 474) (undo-tree-id332 . -33) (undo-tree-id333 . -33) 507) nil (25409 45337 764226 36000) 0 nil])
([nil nil ((475 . 476) (456 . 457) (475 . 481) (#("	" 0 1 (fontified nil)) . 474) (474 . 475) (473 . 475)) nil (25409 45337 764220 74000) 0 nil])
([nil nil ((nil rear-nonsticky nil 508 . 509) (nil fontified nil 508 . 509) (nil fontified nil 495 . 508) (nil fontified nil 491 . 495) (nil fontified nil 490 . 491) (nil fontified nil 477 . 490) (nil fontified nil 476 . 477) (476 . 509)) nil (25409 45337 764215 143000) 0 nil])
([nil nil ((508 . 509)) nil (25409 45337 764210 253000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -508) (undo-tree-id331 . -1) 509) nil (25409 45337 764208 28000) 0 nil])
([nil nil ((474 . 476)) nil (25409 45337 764204 160000) 0 nil])
([nil nil ((nil fontified nil 508 . 509) (nil fontified nil 495 . 508) (nil fontified nil 491 . 495) (nil fontified nil 490 . 491) (nil fontified nil 477 . 490) (nil fontified nil 476 . 477) (476 . 509)) nil (25409 45337 764201 334000) 0 nil])
([nil nil ((#("C" 0 1 (fontified t face elixir-atom-face)) . -478) (undo-tree-id324 . -1) (#("l" 0 1 (fontified t face elixir-atom-face)) . -479) (undo-tree-id325 . -1) (#("i" 0 1 (fontified t face elixir-atom-face)) . -480) (undo-tree-id326 . -1) (#("e" 0 1 (fontified t face elixir-atom-face)) . -481) (undo-tree-id327 . -1) (#("n" 0 1 (fontified t face elixir-atom-face)) . -482) (undo-tree-id328 . -1) (#("t" 0 1 (fontified t face elixir-atom-face)) . -483) (undo-tree-id329 . -1) (#("s" 0 1 (fontified t face elixir-atom-face)) . -484) (undo-tree-id330 . -1) 485) nil (25409 45337 764194 159000) 0 nil])
([nil nil ((#("%" 0 1 (fontified t face font-lock-type-face)) . -488) (undo-tree-id316 . -1) (#("C" 0 1 (fontified t face font-lock-type-face)) . -489) (undo-tree-id317 . -1) (#("l" 0 1 (fontified t face font-lock-type-face)) . -490) (undo-tree-id318 . -1) (#("i" 0 1 (fontified t face font-lock-type-face)) . -491) (undo-tree-id319 . -1) (#("e" 0 1 (fontified t face font-lock-type-face)) . -492) (undo-tree-id320 . -1) (#("n" 0 1 (fontified t face font-lock-type-face)) . -493) (undo-tree-id321 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -494) (undo-tree-id322 . -1) (#("s" 0 1 (fontified t face font-lock-type-face)) . -495) (undo-tree-id323 . -1) 496) nil (25409 45337 764175 58000) 0 nil])
([nil nil ((488 . 489)) nil (25409 45337 764156 379000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 613) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1)) nil (25409 45337 764148 802000) 0 nil])
([nil nil ((494 . 495) (t 25409 45337 776994 597000)) nil (25409 45346 666803 662000) 0 nil])
([nil nil ((494 . 495) (t 25409 45346 679256 293000)) nil (25409 49687 744558 817000) 0 nil])
([nil nil ((445 . 449) (#("    " 0 4 (fontified t)) . 444) (undo-tree-id415 . -4) (443 . 449)) nil (25409 49687 744555 431000) 0 nil])
([nil nil ((445 . 449) (#("    " 0 4 (fontified nil)) . 444) (444 . 448) (444 . 445)) nil (25409 49687 744549 981000) 0 nil])
([nil nil ((449 . 457)) nil (25409 49687 744546 484000) 0 nil])
([nil nil ((457 . 462)) nil (25409 49687 744544 350000) 0 nil])
([nil nil ((462 . 466)) nil (25409 49687 744542 306000) 0 nil])
([nil nil ((#("%{
      QueryStruct => %{
	[:Quota] => %Quota , 
	[:ClientsQuota] => %ClientsQuota 
      }
    }
" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 9 (fontified t) 9 20 (fontified t face font-lock-type-face) 20 25 (fontified t) 25 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 35 (fontified t face elixir-atom-face) 35 36 (rear-nonsticky t fontified t) 36 40 (fontified t) 40 41 (fontified t face font-lock-type-face) 41 46 (fontified t face font-lock-type-face) 46 47 (fontified t) 47 48 (fontified t) 48 49 (rear-nonsticky t fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 52 (fontified t) 52 65 (fontified t face elixir-atom-face) 65 66 (rear-nonsticky t fontified t) 66 70 (fontified t) 70 83 (fontified t face font-lock-type-face) 83 84 (rear-nonsticky t fontified t) 84 85 (fontified t) 85 91 (fontified t) 91 92 (fontified t) 92 93 (fontified t) 93 97 (fontified t) 97 98 (fontified t) 98 99 (fontified t)) . -476) (undo-tree-id408 . -99) (undo-tree-id409 . -99) (undo-tree-id410 . -3) (undo-tree-id411 . -92) (undo-tree-id412 . -51) (undo-tree-id413 . -28) (undo-tree-id414 . -99) 575) nil (25409 49687 744539 30000) 0 nil])
([nil nil ((471 . 473)) nil (25409 49687 744524 493000) 0 nil])
([nil nil ((#("]" 0 1 (fontified nil)) . -481) (481 . 482) (#("]" 0 1 (fontified nil)) . -481) (481 . 482) (473 . 482)) nil (25409 49687 744521 778000) 0 nil])
([nil nil ((481 . 484)) nil (25409 49687 744517 690000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t face font-lock-type-face)) . -481) (undo-tree-id405 . -1) (#("a" 0 1 (fontified t face font-lock-type-face)) . -482) (undo-tree-id406 . -1) (#("b" 0 1 (fontified t face font-lock-type-face)) . -483) (undo-tree-id407 . -1) 484) nil (25409 49687 744514 154000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified nil)) . -482) (482 . 483) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . -482) (482 . 483) (481 . 483) (#("\"" 0 1 (fontified nil syntax-table (15))) . -481) (481 . 482)) nil (25409 49687 744504 255000) 0 nil])
([nil nil ((482 . 492)) nil (25409 49687 744498 525000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 505) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1)) nil (25409 49687 744493 545000) 0 nil])
([nil nil ((708 . 709)) nil (25409 49687 744467 447000) 0 nil])
([nil nil ((473 . 474) (t 25409 49687 768508 558000)) nil (25409 49701 910051 397000) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -471) (undo-tree-id429 . -1) (#(">" 0 1 (fontified t)) . -472) (undo-tree-id430 . -1) (#(" " 0 1 (fontified t)) . -473) (undo-tree-id431 . -1) 474 (t 25409 49701 912418 209000)) nil (25409 49792 35138 322000) 0 nil])
([nil nil ((449 . 452)) nil (25409 49792 35134 14000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -450) (undo-tree-id427 . -1) (#("y" 0 1 (fontified t)) . -451) (undo-tree-id428 . -1) 452) nil (25409 49792 35132 461000) 0 nil])
([nil nil ((450 . 455)) nil (25409 49792 35130 247000) 0 nil])
([nil nil ((#("]" 0 1 (fontified nil)) . -499) (499 . 500) (#("]" 0 1 (fontified nil)) . -499) (499 . 500) (498 . 500)) nil (25409 49792 35128 745000) 0 nil])
([nil nil ((499 . 502)) nil (25409 49792 35126 841000) 0 nil])
([nil nil ((449 . 450)) nil (25409 49792 35125 619000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t face elixir-atom-face)) . -449) (undo-tree-id426 . -1) 450) nil (25409 49792 35124 196000) 0 nil])
([nil nil ((502 . 511)) nil (25409 49792 35122 102000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -504) (undo-tree-id419 . -1) (#("S" 0 1 (fontified t face font-lock-type-face)) . -505) (undo-tree-id420 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -506) (undo-tree-id421 . -1) (#("r" 0 1 (fontified t face font-lock-type-face)) . -507) (undo-tree-id422 . -1) (#("i" 0 1 (fontified t face font-lock-type-face)) . -508) (undo-tree-id423 . -1) (#("n" 0 1 (fontified t face font-lock-type-face)) . -509) (undo-tree-id424 . -1) (#("g" 0 1 (fontified t face font-lock-type-face)) . -510) (undo-tree-id425 . -1) 511) nil (25409 49792 35119 678000) 0 nil])
([nil nil ((504 . 518)) nil (25409 49792 35111 913000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 444) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1)) nil (25409 49792 35109 879000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . 472) (472 . 476) (472 . 473)) nil (25409 49792 35094 711000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 472) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (t 25409 49792 39964 363000)) nil (25409 49999 941153 961000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . 472) (472 . 476) (472 . 473)) nil (25409 49999 941124 677000) 0 nil])
([nil nil ((717 . 718) (t 25409 49999 963577 353000)) nil (25409 50035 66975 241000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -714) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (#("a" 0 1 (fontified t)) . -715) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (#("p" 0 1 (fontified t)) . -716) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (#("_" 0 1 (fontified t)) . -717) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (#("k" 0 1 (fontified t)) . -718) (undo-tree-id448 . -1) (#("e" 0 1 (fontified t)) . -719) (undo-tree-id449 . -1) (#("y" 0 1 (fontified t)) . -720) (undo-tree-id450 . -1) (#("s" 0 1 (fontified t)) . -721) (undo-tree-id451 . -1) (#(" " 0 1 (fontified t)) . -722) (undo-tree-id452 . -1) (#("=" 0 1 (fontified t)) . -723) (undo-tree-id453 . -1) (#(" " 0 1 (fontified t)) . -724) (undo-tree-id454 . -1) 725 (t 25409 50035 71585 17000)) nil (25409 50264 114658 32000) 0 nil])
([nil nil ((5501 . 5505) (t 25409 50264 128015 957000)) nil (25409 50455 466047 916000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5571 . 5572) (nil fontified nil 5571 . 5572) (nil fontified nil 5568 . 5571) (nil fontified nil 5566 . 5568) (nil fontified nil 5554 . 5566) (nil fontified nil 5548 . 5554) (nil fontified nil 5544 . 5548) (nil fontified nil 5542 . 5544) (nil fontified nil 5538 . 5542) (nil fontified nil 5536 . 5538) (nil fontified nil 5535 . 5536) (nil fontified nil 5533 . 5535) (nil fontified nil 5531 . 5533) (nil fontified nil 5530 . 5531) (nil fontified nil 5523 . 5530) (nil fontified nil 5521 . 5523) (nil fontified nil 5520 . 5521) (nil fontified nil 5511 . 5520) (nil fontified nil 5508 . 5511) (nil fontified nil 5505 . 5508) (5505 . 5572)) nil (25409 50455 466046 283000) 0 nil])
([nil nil ((5433 . 5434)) nil (25409 50455 466042 185000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t face font-lock-comment-face)) . -5537) (undo-tree-id456 . -1) 5538) nil (25409 50455 466040 522000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t face font-lock-comment-face)) . -5542) (undo-tree-id455 . -1) 5543) nil (25409 50455 466035 864000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t face font-lock-comment-face)) . -5389) (undo-tree-id457 . -1) 5390 (t 25409 50455 472755 240000)) nil (25409 50473 772792 237000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -5389) (undo-tree-id458 . -1) (#(" " 0 1 (fontified t)) . -5390) (undo-tree-id459 . -1) 5391 (t 25409 50473 788839 478000)) nil (25409 50489 953626 235000) 0 nil])
([nil nil ((5389 . 5392) (t 25409 50489 964915 553000)) nil (25409 50509 872539 388000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 591) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (t 25409 50509 897011 389000)) nil (25409 50958 209306 755000) 0 nil])
([nil nil ((#("    
" 0 4 (fontified t) 4 5 (fontified t)) . 591) (undo-tree-id485 . -4) (undo-tree-id486 . -5) (undo-tree-id487 . -5) (undo-tree-id488 . -5)) nil (25409 50958 209304 141000) 0 nil])
([nil nil ((#("    
" 0 4 (fontified t) 4 5 (fontified t)) . 591) (undo-tree-id482 . -5) (undo-tree-id483 . -5) (undo-tree-id484 . -5)) nil (25409 50958 209300 904000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . 591) (591 . 595) (591 . 592)) nil (25409 50958 209297 989000) 0 nil])
([nil nil ((#("
      get_ecto_query_params(quota_map |> Map.keys())
      |> IO.inspect()
" 0 1 (fontified t) 1 7 (fontified t) 7 28 (fontified t) 28 29 (fontified t) 29 42 (fontified t) 42 45 (fontified t face font-lock-type-face) 45 50 (fontified t) 50 51 (fontified t) 51 52 (fontified t) 52 53 (rear-nonsticky t fontified t) 53 54 (fontified t) 54 63 (fontified t) 63 65 (fontified t face font-lock-type-face) 65 73 (fontified t) 73 74 (fontified t) 74 75 (fontified t) 75 76 (fontified t)) . -675) (undo-tree-id470 . -7) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -54) (undo-tree-id474 . -54) (undo-tree-id475 . -76) (undo-tree-id476 . -76) (undo-tree-id477 . -7) (undo-tree-id478 . -7) (undo-tree-id479 . -76) (undo-tree-id480 . -76) (undo-tree-id481 . -76) 751) nil (25409 50958 209296 266000) 0 nil])
([nil nil ((403 . 404)) nil (25409 50958 209288 361000) 0 nil])
([nil nil ((445 . 446)) nil (25409 50958 209287 690000) 0 nil])
([nil nil ((465 . 466)) nil (25409 50958 209287 49000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 475) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1)) nil (25409 50958 209285 987000) 0 nil])
([nil nil ((475 . 476)) nil (25409 50958 209283 562000) 0 nil])
([nil nil ((523 . 524)) nil (25409 50958 209282 781000) 0 nil])
([nil nil ((#("      
" 0 7 (fontified t)) . 679) (undo-tree-id464 . -7) (undo-tree-id465 . -7) (undo-tree-id466 . -7)) nil (25409 50958 209281 458000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1057) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1)) nil (25409 50958 209243 507000) 0 nil])
([nil nil ((1535 . 1556) (t 25409 50958 223622 161000)) nil (25409 51146 430309 961000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -1557) (1557 . 1558) (#(")" 0 1 (fontified nil)) . -1557) (1557 . 1558) (1556 . 1558)) nil (25409 51146 430304 982000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -1567) (undo-tree-id504 . -1) 1568 (t 25409 51146 444889 890000)) nil (25409 51249 783849 814000) 0 nil])
([nil nil ((#("|> IO.inspect()" 0 3 (fontified t) 3 5 (fontified t face font-lock-type-face) 5 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t)) . 1543) (undo-tree-id497 . -15) (undo-tree-id498 . -15) (undo-tree-id499 . 1) (undo-tree-id500 . -15) (undo-tree-id501 . 2) (undo-tree-id502 . -14) (undo-tree-id503 . -15) 1558) nil (25409 51249 783845 305000) 0 nil])
([nil nil ((1585 . 1586) (#("        " 0 8 (fontified nil)) . -1552) (1592 . 1593)) nil (25409 51249 783834 224000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1600 . 1601) (nil fontified nil 1600 . 1601) (nil fontified nil 1599 . 1600) (nil fontified nil 1591 . 1599) (nil fontified nil 1589 . 1591) (nil fontified nil 1586 . 1589) (1586 . 1601)) nil (25409 51249 783831 169000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1543) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1)) nil (25409 51249 783826 99000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1543) (#(" " 0 1 (fontified t)) . 1543) (#(" " 0 1 (fontified t)) . 1543) (#(" " 0 1 (fontified t)) . 1543) (#(" " 0 1 (fontified t)) . 1543) (#(" " 0 1 (fontified t)) . 1543) (#(" " 0 1 (fontified t)) . 1543) (#(" " 0 1 (fontified t)) . 1543)) nil (25409 51249 783801 864000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -1601) (undo-tree-id505 . -1) 1602 (t 25409 51249 805611 974000)) nil (25409 51445 186665 929000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -1065) (undo-tree-id507 . -1) 1066 (t 25409 51445 200319 670000)) nil (25409 51452 512764 323000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -1121) (undo-tree-id506 . -1) 1122) nil (25409 51452 512750 427000) 0 nil])
([nil nil ((#("	|> IO.inspect()" 0 1 (fontified t) 1 4 (fontified t) 4 6 (fontified t face font-lock-type-face) 6 14 (fontified t) 14 15 (fontified t) 15 16 (rear-nonsticky t fontified t)) . 1574) (undo-tree-id511 . -1) (undo-tree-id512 . -16) (t 25409 51452 524479 166000)) nil (25409 51458 930200 928000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1574) (#(" " 0 1 (fontified t)) . 1574) (#(" " 0 1 (fontified t)) . 1574) (#(" " 0 1 (fontified t)) . 1574) (#(" " 0 1 (fontified t)) . 1574) (#(" " 0 1 (fontified t)) . 1574) (#(" " 0 1 (fontified t)) . 1574) (#(" " 0 1 (fontified t)) . 1574) (#("
" 0 1 (fontified t)) . 1574) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1)) nil (25409 51458 930193 635000) 0 nil])
([nil nil ((1573 . 1575) (t 25409 51458 936617 758000)) nil (25409 51767 337952 953000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -1589) (1589 . 1590) (#(")" 0 1 (fontified nil)) . -1589) (1589 . 1590) (1575 . 1590)) nil (25409 51767 337948 74000) 0 nil])
([nil nil ((1066 . 1067)) nil (25409 51767 337942 994000) 0 nil])
([nil nil ((1123 . 1124)) nil (25409 51767 337935 490000) 0 nil])
([nil nil ((#("	|> IO.inspect()" 0 4 (fontified t) 4 6 (fontified t face font-lock-type-face) 6 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t)) . 1576) (t 25409 51767 350339 337000)) nil (25409 52387 457984 721000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1576) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1)) nil (25409 52387 457981 735000) 0 nil])
([nil nil ((#("        # 	|> dbg()" 0 8 (fontified t) 8 10 (fontified t face font-lock-comment-delimiter-face) 10 19 (fontified t face font-lock-comment-face)) . 1621)) nil (25409 52387 457972 588000) 0 nil])
([nil nil ((1183 . 1184) (#(" " 0 1 (fontified t)) . -1122) (1183 . 1184)) nil (25409 52387 457970 3000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1202 . 1203) (nil fontified nil 1194 . 1203) (nil fontified nil 1192 . 1194) (nil fontified nil 1184 . 1192) (1184 . 1203)) nil (25409 52387 457966 527000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1065) (undo-tree-id514 . -1) (#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -1066) (undo-tree-id515 . -1) 1067) nil (25409 52387 457961 948000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -1120) (undo-tree-id513 . -1) 1121) nil (25409 52387 457954 494000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t)) . 1181) (#(" " 0 1 (fontified t)) . 1181) (#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 1181) (#(" " 0 1 (fontified t)) . 1181) (#(" " 0 1 (fontified t)) . 1181) (#(" " 0 1 (fontified t)) . 1181) (#(" " 0 1 (fontified t)) . 1181) (#(" " 0 1 (fontified t)) . 1181) (#(" " 0 1 (fontified t)) . 1181) (#(" " 0 1 (fontified t)) . 1181) (#(" " 0 1 (fontified t)) . 1181)) nil (25409 52387 457934 326000) 0 nil])
([nil nil ((1181 . 1188)) nil (25409 52387 457922 785000) 0 nil])
([nil nil ((#("process_quota_map(quota_plan_list, loan_code_field)" 0 51 (fontified t)) . 2473) (undo-tree-id537 . -51) (undo-tree-id538 . -51) (undo-tree-id539 . 1) (undo-tree-id540 . -51) (undo-tree-id541 . 34) (undo-tree-id542 . -18) 2524 (t 25409 52387 470616 567000)) nil (25409 52471 367965 737000) 0 nil])
([nil nil ((2545 . 2549)) nil (25409 52471 367956 550000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2599 . 2600) (nil fontified nil 2549 . 2600) (2549 . 2600)) nil (25409 52471 367954 506000) 0 nil])
([nil nil ((#("+" 0 1 (fontified t)) . -2474) (undo-tree-id535 . -1) (#("+" 0 1 (fontified t)) . -2475) (undo-tree-id536 . -1) 2476) nil (25409 52471 367950 909000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2468) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1)) nil (25409 52471 367944 457000) 0 nil])
([nil nil ((#("     
" 0 6 (fontified t)) . 2468) (undo-tree-id526 . -6) (undo-tree-id527 . -6) (undo-tree-id528 . -6) (undo-tree-id529 . -4) (undo-tree-id530 . -6)) nil (25409 52471 931048 76000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2468) (#(" " 0 1 (fontified t)) . 2468)) nil (25409 52478 782214 499000) 0 nil] [nil nil ((#("
" 0 1 (fontified t)) . -2467) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) 2468) ((2467 . 2468)) (25409 52471 367920 462000) 0 nil])
([nil nil ((#("process_concept_quota_map(quota_concept_list, loan_code_field)" 0 56 (fontified t) 56 62 (fontified t)) . 2472) (undo-tree-id641 . -62) (undo-tree-id642 . -62) (undo-tree-id643 . 1) (undo-tree-id644 . -62) (undo-tree-id645 . 37) (undo-tree-id646 . -26) (undo-tree-id647 . -62) 2534 (t 25409 52478 807651 686000)) nil (25409 53948 859962 66000) 0 nil])
nil
([nil nil ((2527 . 2531)) nil (25409 53948 859948 381000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2592 . 2593) (nil fontified nil 2587 . 2593) (nil fontified nil 2531 . 2587) (2531 . 2593)) nil (25409 53948 859946 186000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2468) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (#(" " 0 1 (fontified t)) . -2469) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (#(" " 0 1 (fontified t)) . -2470) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (#(" " 0 1 (fontified t)) . -2471) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (#(" " 0 1 (fontified t)) . -2472) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (#("+" 0 1 (fontified t)) . -2473) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (#("+" 0 1 (fontified t)) . -2474) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (#(" " 0 1 (fontified t)) . -2475) (undo-tree-id639 . -1) (undo-tree-id640 . -1) 2476) nil (25409 53948 859937 931000) 0 nil])
([nil nil ((2468 . 2472)) nil (25409 53948 859900 962000) 0 nil])
([nil nil ((2472 . 2474)) nil (25409 53948 859899 239000) 0 nil])
([nil nil ((2474 . 2479)) nil (25409 53948 859897 345000) 0 nil])
([nil nil ((2479 . 2481)) nil (25409 53948 859895 382000) 0 nil])
([nil nil ((2487 . 2491) (#("    " 0 4 (fontified t)) . 2486) (undo-tree-id616 . -4) (2486 . 2491) (#("    " 0 4 (fontified t)) . 2485) (undo-tree-id617 . -4) (2485 . 2490) (#("    " 0 4 (fontified t)) . 2484) (undo-tree-id618 . -4) (2484 . 2489) (#("    " 0 4 (fontified t)) . 2483) (undo-tree-id619 . -4) (2483 . 2488) (#("    " 0 4 (fontified t)) . 2482) (undo-tree-id620 . -4) (2481 . 2487)) nil (25409 53948 859890 793000) 0 nil])
([nil nil ((#("    fg
    fg
" 0 6 (fontified t) 6 7 (fontified t) 7 13 (fontified t) 13 14 (fontified t)) . -2468) (undo-tree-id601 . -14) (undo-tree-id602 . -14) (undo-tree-id603 . -14) (undo-tree-id604 . -14) (undo-tree-id605 . -7) (undo-tree-id606 . -7) (undo-tree-id607 . 8) (undo-tree-id608 . -6) (undo-tree-id609 . 1) (undo-tree-id610 . -7) (undo-tree-id611 . -13) (undo-tree-id612 . -14) (undo-tree-id613 . -14) (undo-tree-id614 . -14) (undo-tree-id615 . -14) 2482) nil (25409 53948 859875 454000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2468) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . 1) (undo-tree-id595 . 1) (undo-tree-id596 . 1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1)) nil (25409 53948 859848 73000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2468) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . 1) (undo-tree-id584 . 1) (undo-tree-id585 . 1) (undo-tree-id586 . 1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1)) nil (25409 53948 859829 288000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2468) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . 1) (undo-tree-id572 . 1) (undo-tree-id573 . 1) (undo-tree-id574 . 1) (undo-tree-id575 . 1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1)) nil (25409 53948 859809 631000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2468) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . 1) (undo-tree-id559 . 1) (undo-tree-id560 . 1) (undo-tree-id561 . 1) (undo-tree-id562 . 1) (undo-tree-id563 . 1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1)) nil (25409 53948 859784 655000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2468) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . 1) (undo-tree-id547 . 1) (undo-tree-id548 . 1) (undo-tree-id549 . 1) (undo-tree-id550 . 1) (undo-tree-id551 . 1) (undo-tree-id552 . 1) (undo-tree-id553 . -1) (undo-tree-id554 . -1)) nil (25409 53948 859756 252000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face font-lock-string-face)) . -1608) (undo-tree-id648 . -1) (#("h" 0 1 (fontified t face font-lock-string-face)) . -1609) (undo-tree-id649 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -1610) (undo-tree-id650 . -1) (#("w" 0 1 (fontified t face font-lock-string-face)) . -1611) (undo-tree-id651 . -1) 1612 (t 25409 53948 870647 296000)) nil (25410 9306 878907 219000) 0 nil])
([nil nil ((1608 . 1613)) nil (25410 9306 878878 736000) 0 nil])
([nil nil ((#("Q" 0 1 (fontified t face font-lock-type-face)) . -1578) (undo-tree-id652 . -1) (#("u" 0 1 (fontified t face font-lock-type-face)) . -1579) (undo-tree-id653 . -1) (#("o" 0 1 (fontified t face font-lock-type-face)) . -1580) (undo-tree-id654 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -1581) (undo-tree-id655 . -1) (#("a" 0 1 (fontified t face font-lock-type-face)) . -1582) (undo-tree-id656 . -1) 1583 (t 25410 9306 904092 422000)) nil (25410 10583 675505 458000) 0 nil])
([nil nil ((1578 . 1585)) nil (25410 10583 675487 450000) 0 nil])
([nil nil ((#("C" 0 1 (fontified t face font-lock-type-face)) . -1578) (undo-tree-id657 . -1) (#("r" 0 1 (fontified t face font-lock-type-face)) . -1579) (undo-tree-id658 . -1) (#("e" 0 1 (fontified t face font-lock-type-face)) . -1580) (undo-tree-id659 . -1) (#("d" 0 1 (fontified t face font-lock-type-face)) . -1581) (undo-tree-id660 . -1) (#("i" 0 1 (fontified t face font-lock-type-face)) . -1582) (undo-tree-id661 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -1583) (undo-tree-id662 . -1) (#("s" 0 1 (fontified t face font-lock-type-face)) . -1584) (undo-tree-id663 . -1) 1585 (t 25410 10583 682006 932000)) nil (25410 10668 517896 15000) 0 nil])
([nil nil ((1578 . 1583)) nil (25410 10668 517877 862000) 0 nil])
([nil nil ((646 . 651) (t 25410 10668 519847 73000)) nil (25410 10723 205654 247000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -665) (665 . 666) (#(")" 0 1 (fontified nil)) . -665) (665 . 666) (651 . 666)) nil (25410 10723 205644 234000) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -1208) (undo-tree-id664 . -1) (#(">" 0 1 (fontified t)) . -1209) (undo-tree-id665 . -1) (#(" " 0 1 (fontified t)) . -1210) (undo-tree-id666 . -1) (#("d" 0 1 (fontified t)) . -1211) (undo-tree-id667 . -1) (#("b" 0 1 (fontified t)) . -1212) (undo-tree-id668 . -1) (#("g" 0 1 (fontified t)) . -1213) (undo-tree-id669 . -1) (#("(" 0 1 (fontified t)) . -1214) (undo-tree-id670 . -1) (#(")" 0 1 (rear-nonsticky t fontified t)) . -1215) (undo-tree-id671 . -1) (undo-tree-id672 . 1) (undo-tree-id673 . -1) 1216 (t 25410 10723 223226 322000)) nil (25410 17723 778088 370000) 0 nil])
([nil nil ((1625 . 1631) (t 25410 17723 804207 696000)) nil (25410 18623 173522 842000) 0 nil])
([nil nil ((#("q" 0 1 (fontified t face elixir-atom-face)) . -1639) (undo-tree-id674 . -1) 1640 (t 25410 18623 177547 817000)) nil (25410 18627 431304 411000) 0 nil])
([nil nil ((1639 . 1640)) nil (25410 18627 431288 452000) 0 nil])
([nil nil ((1652 . 1654) (t 25410 18627 481539 250000)) nil (25410 18745 979464 338000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1696 . 1697) (nil fontified nil 1690 . 1697) (nil fontified nil 1685 . 1690) (nil fontified nil 1684 . 1685) (nil fontified nil 1682 . 1684) (nil fontified nil 1681 . 1682) (nil fontified nil 1665 . 1681) (nil fontified nil 1664 . 1665) (nil fontified nil 1654 . 1664) (1654 . 1697)) nil (25410 18745 979460 781000) 0 nil])
([nil nil ((1663 . 1668)) nil (25410 18745 979454 840000) 0 nil])
([nil nil ((183 . 185) (#("  " 0 2 (fontified nil)) . 182) (182 . 184) (182 . 183)) nil (25410 18745 979452 566000) 0 nil])
([nil nil ((70 . 72) (#("  " 0 2 (fontified nil)) . 69) (69 . 71) (69 . 70)) nil (25410 18745 979448 418000) 0 nil])
([nil nil ((69 . 82)) nil (25410 18745 979444 782000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -71) (undo-tree-id675 . -1) (#("s" 0 1 (fontified t)) . -72) (undo-tree-id676 . -1) (#("e" 0 1 (fontified t face font-lock-keyword-face)) . -73) (undo-tree-id677 . -1) (#(" " 0 1 (fontified t)) . -74) (undo-tree-id678 . -1) (#("P" 0 1 (fontified t face font-lock-type-face)) . -75) (undo-tree-id679 . -1) (#("h" 0 1 (fontified t face font-lock-type-face)) . -76) (undo-tree-id680 . -1) (#("o" 0 1 (fontified t face font-lock-type-face)) . -77) (undo-tree-id681 . -1) (#("e" 0 1 (fontified t face font-lock-type-face)) . -78) (undo-tree-id682 . -1) (#("n" 0 1 (fontified t face font-lock-type-face)) . -79) (undo-tree-id683 . -1) (#("i" 0 1 (fontified t face font-lock-type-face)) . -80) (undo-tree-id684 . -1) (#("x" 0 1 (fontified t face font-lock-type-face)) . -81) (undo-tree-id685 . -1) 82) nil (25410 18745 979437 368000) 0 nil])
([nil nil ((71 . 82)) nil (25410 18745 979398 74000) 0 nil])
([nil nil ((82 . 90)) nil (25410 18745 979390 991000) 0 nil])
([nil nil ((1684 . 1693) (t 25410 18746 5613 104000)) nil (25410 19730 637085 726000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -1692) (undo-tree-id686 . -1) 1693) nil (25410 19730 637081 198000) 0 nil])
([nil nil ((1692 . 1697)) nil (25410 19730 637067 181000) 0 nil])
([nil nil ((90 . 102)) nil (25410 19730 637061 280000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -90) (undo-tree-id687 . -1) (#("r" 0 1 (fontified t)) . -91) (undo-tree-id688 . -1) (#("e" 0 1 (fontified t)) . -92) (undo-tree-id689 . -1) (#("n" 0 1 (fontified t)) . -93) (undo-tree-id690 . -1) (#("d" 0 1 (fontified t)) . -94) (undo-tree-id691 . -1) (#("e" 0 1 (fontified t)) . -95) (undo-tree-id692 . -1) (#("r" 0 1 (fontified t)) . -96) (undo-tree-id693 . -1) (#("_" 0 1 (fontified t)) . -97) (undo-tree-id694 . -1) (#("m" 0 1 (fontified t)) . -98) (undo-tree-id695 . -1) (#("a" 0 1 (fontified t)) . -99) (undo-tree-id696 . -1) (#("n" 0 1 (fontified t)) . -100) (undo-tree-id697 . -1) (#("y" 0 1 (fontified t)) . -101) (undo-tree-id698 . -1) 102 (t 25410 19730 654694 829000)) nil (25410 19746 603799 271000) 0 nil])
([nil nil ((#("import Phoenix.View" 0 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 14 (fontified t face font-lock-type-face) 14 19 (fontified t face font-lock-type-face)) . 71) (undo-tree-id699 . -19) (t 25410 19746 610995 762000)) nil (25410 19752 146650 261000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face font-lock-string-face)) . -1628) (undo-tree-id702 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -1629) (undo-tree-id703 . -1) (#("d" 0 1 (fontified t face font-lock-string-face)) . -1630) (undo-tree-id704 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -1631) (undo-tree-id705 . -1) (#("x" 0 1 (fontified t face font-lock-string-face)) . -1632) (undo-tree-id706 . -1) (#("_" 0 1 (fontified t face font-lock-string-face)) . -1633) (undo-tree-id707 . -1) (#("q" 0 1 (fontified t face font-lock-string-face)) . -1634) (undo-tree-id708 . -1) (#("u" 0 1 (fontified t face font-lock-string-face)) . -1635) (undo-tree-id709 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -1636) (undo-tree-id710 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -1637) (undo-tree-id711 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -1638) (undo-tree-id712 . -1) 1639 (t 25410 19752 175135 629000)) nil (25410 52431 531263 593000) 0 nil])
([nil nil ((1628 . 1632)) nil (25410 52431 531251 931000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t)) . -1654) (undo-tree-id700 . -1) (undo-tree-id701 . -1) 1655) nil (25410 52431 531250 258000) 0 nil])
([nil nil ((1654 . 1655)) nil (25410 52431 531237 804000) 0 nil])
([nil nil ((1655 . 1663)) nil (25410 52431 531236 412000) 0 nil])
([nil nil ((1662 . 1663)) nil (25410 52431 531231 983000) 0 nil])
([nil nil ((1632 . 1633) (t 25410 52431 576745 106000)) nil (25410 52714 132173 196000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t face font-lock-string-face)) . -1632) (undo-tree-id713 . -1) 1633 (t 25410 52714 160631 187000)) nil (25410 52720 573789 526000) 0 nil])
([nil nil ((#("Q" 0 1 (fontified t face elixir-atom-face)) . -1640) (undo-tree-id714 . -1) 1641 (t 25410 52720 588717 721000)) nil (25410 52723 277603 32000) 0 nil])
([nil nil ((1640 . 1641)) nil (25410 52723 277580 530000) 0 nil])
([nil nil ((#("#  def get_ecto_query_params(map_keys) do
#    key = map_keys
#    |>hd
#    @config[\"TableNames\"][key|>Atom.to_string]
#      end
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 3 (fontified t face font-lock-comment-delimiter-face) 3 6 (fontified t face font-lock-comment-face) 6 7 (fontified t face font-lock-comment-face) 7 10 (fontified t face font-lock-comment-face) 10 21 (fontified t face font-lock-comment-face) 21 28 (fontified t face font-lock-comment-face) 28 30 (fontified t face font-lock-comment-face) 30 37 (fontified t face font-lock-comment-face) 37 39 (fontified t face font-lock-comment-face) 39 41 (fontified t face font-lock-comment-face) 41 42 (fontified t face font-lock-comment-face) 42 43 (fontified t face font-lock-comment-delimiter-face) 43 47 (fontified t face font-lock-comment-delimiter-face) 47 50 (fontified t face font-lock-comment-face) 50 61 (fontified t face font-lock-comment-face) 61 62 (fontified t face font-lock-comment-face) 62 63 (fontified t face font-lock-comment-delimiter-face) 63 67 (fontified t face font-lock-comment-delimiter-face) 67 71 (fontified t face font-lock-comment-face) 71 72 (fontified t face font-lock-comment-face) 72 73 (fontified t face font-lock-comment-delimiter-face) 73 77 (fontified t face font-lock-comment-delimiter-face) 77 84 (fontified t face font-lock-comment-face) 84 85 (fontified t face font-lock-comment-face) 85 86 (syntax-table (15) fontified t face font-lock-comment-face) 86 96 (fontified t face font-lock-comment-face) 96 97 (syntax-table (15) fontified t face font-lock-comment-face) 97 98 (fontified t face font-lock-comment-face) 98 104 (fontified t face font-lock-comment-face) 104 108 (fontified t face font-lock-comment-face) 108 118 (fontified t face font-lock-comment-face) 118 119 (fontified t face font-lock-comment-face) 119 120 (fontified t face font-lock-comment-face) 120 121 (fontified t face font-lock-comment-delimiter-face) 121 125 (fontified t face font-lock-comment-delimiter-face) 125 127 (fontified t face font-lock-comment-delimiter-face) 127 130 (fontified t face font-lock-comment-face) 130 131 (fontified t face font-lock-comment-face)) . -411) (undo-tree-id724 . -42) (undo-tree-id725 . -42) (undo-tree-id726 . -120) (undo-tree-id727 . -120) (undo-tree-id728 . -131) (undo-tree-id729 . -131) (undo-tree-id730 . -62) (undo-tree-id731 . -62) (undo-tree-id732 . -72) (undo-tree-id733 . -72) (undo-tree-id734 . -131) (undo-tree-id735 . -131) (undo-tree-id736 . -131) (undo-tree-id737 . -131) 542 (t 25410 52723 304754 267000)) nil (25410 59401 266910 881000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 410) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1)) nil (25410 59401 266899 500000) 0 nil])
([nil nil ((#("  
" 0 2 (fontified t) 2 3 (fontified t)) . 410) (undo-tree-id715 . -3) (undo-tree-id716 . -3) (undo-tree-id717 . -3) (undo-tree-id718 . -3)) nil (25410 59401 266892 267000) 0 nil])
([nil nil ((469 . 473) (#("    " 0 4 (fontified nil)) . 468) (468 . 472) (468 . 469) (t 25410 59401 272262 101000)) nil (25410 59511 64130 749000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 468) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . 1) (undo-tree-id747 . -1)) nil (25410 59511 64125 119000) 0 nil])
([nil nil ((#("    
" 0 4 (fontified t) 4 5 (fontified t)) . 468) (undo-tree-id738 . -5) (undo-tree-id739 . -5) (undo-tree-id740 . -5) (undo-tree-id741 . 5) (undo-tree-id742 . -5)) nil (25410 59511 64109 119000) 0 nil])
([nil nil ((571 . 572) (t 25410 59511 95334 887000)) nil (25410 60899 574737 306000) 0 nil])
([nil nil ((627 . 628)) nil (25410 60899 574736 104000) 0 nil])
([nil nil ((681 . 682)) nil (25410 60899 574735 292000) 0 nil])
([nil nil ((726 . 727)) nil (25410 60899 574734 681000) 0 nil])
([nil nil ((752 . 753)) nil (25410 60899 574734 50000) 0 nil])
([nil nil ((784 . 785)) nil (25410 60899 574733 168000) 0 nil])
([nil nil ((806 . 807)) nil (25410 60899 574732 277000) 0 nil])
([nil nil ((829 . 835) (#("      " 0 6 (fontified nil)) . 828) (undo-tree-id751 . -6) (828 . 835) (#("      " 0 6 (fontified nil)) . 827) (undo-tree-id752 . -6) (827 . 834) (#("      " 0 5 (fontified nil) 5 6 (fontified nil)) . 826) (undo-tree-id753 . -6) (832 . 833) (#("  " 0 2 (fontified t)) . -832) (#("      " 0 6 (fontified nil face font-lock-comment-face)) . 825) (825 . 831) (825 . 826)) nil (25410 60899 574730 303000) 0 nil])
([nil nil ((826 . 833)) nil (25410 60899 574723 440000) 0 nil])
([nil nil ((nil rear-nonsticky nil 880 . 881) (nil fontified nil 873 . 881) (nil fontified nil 870 . 873) (nil fontified nil 852 . 870) (nil fontified nil 839 . 852) (nil fontified nil 837 . 839) (nil fontified nil 833 . 837) (833 . 881)) nil (25410 60899 574722 548000) 0 nil])
([nil nil ((#("," 0 1 (fontified t rear-nonsticky t)) . -880) (undo-tree-id750 . -1) 881) nil (25410 60899 574720 424000) 0 nil])
([nil nil ((880 . 883)) nil (25410 60899 574718 801000) 0 nil])
([nil nil ((883 . 884) (#(" " 0 1 (fontified nil)) . -832) (undo-tree-id749 . -1) (883 . 884)) nil (25410 60899 574717 940000) 0 nil])
([nil nil ((887 . 888)) nil (25410 60899 574716 96000) 0 nil])
([nil nil ((899 . 900)) nil (25410 60899 574715 445000) 0 nil])
([nil nil ((932 . 933)) nil (25410 60899 574714 824000) 0 nil])
([nil nil ((1019 . 1020)) nil (25410 60899 574714 273000) 0 nil])
([nil nil ((1075 . 1076)) nil (25410 60899 574713 622000) 0 nil])
([nil nil ((882 . 884)) nil (25410 60899 574712 730000) 0 nil])
([nil nil ((882 . 884)) nil (25410 60899 574711 949000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1130 . 1131) (nil fontified nil 1130 . 1131) (nil fontified nil 1128 . 1130) (nil fontified nil 1126 . 1128) (nil fontified nil 1123 . 1126) (nil fontified nil 1115 . 1123) (nil fontified nil 1113 . 1115) (nil fontified nil 1112 . 1113) (nil fontified nil 1106 . 1112) (nil fontified nil 1097 . 1106) (nil fontified nil 1096 . 1097) (nil fontified nil 1093 . 1096) (nil fontified nil 1091 . 1093) (nil fontified nil 1090 . 1091) (nil fontified nil 1089 . 1090) (nil fontified nil 1084 . 1089) (nil fontified nil 1080 . 1084) (nil fontified nil 1079 . 1080) (nil fontified nil 1078 . 1079) (nil fontified nil 1077 . 1078) (nil fontified nil 1074 . 1077) (nil fontified nil 1073 . 1074) (nil fontified nil 1067 . 1073) (nil fontified nil 1059 . 1067) (nil fontified nil 1058 . 1059) (nil fontified nil 1048 . 1058) (nil fontified nil 1033 . 1048) (nil fontified nil 1032 . 1033) (nil fontified nil 1023 . 1032) (nil fontified nil 1018 . 1023) (nil fontified nil 1009 . 1018) (nil fontified nil 1001 . 1009) (nil fontified nil 990 . 1001) (nil fontified nil 988 . 990) (nil fontified nil 987 . 988) (nil fontified nil 964 . 987) (nil fontified nil 951 . 964) (nil fontified nil 949 . 951) (nil fontified nil 946 . 949) (nil fontified nil 945 . 946) (nil fontified nil 935 . 945) (nil fontified nil 934 . 935) (nil fontified nil 933 . 934) (nil fontified nil 924 . 933) (nil fontified nil 921 . 924) (nil fontified nil 903 . 921) (nil fontified nil 890 . 903) (nil fontified nil 888 . 890) (nil fontified nil 884 . 888) (884 . 1131)) nil (25410 60899 574709 374000) 0 nil])
([nil nil ((#("	with [:ClientsQuota] <- quota_map |> Map.keys()," 0 1 (fontified t) 1 5 (fontified t face font-lock-keyword-face) 5 7 (fontified t) 7 20 (fontified t face elixir-atom-face) 20 38 (fontified t) 38 41 (fontified t face font-lock-type-face) 41 49 (fontified t)) . 883) (undo-tree-id748 . -1)) nil (25410 60899 574701 329000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 884)) nil (25410 60899 574691 19000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 937)) nil (25410 60899 574690 348000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 981)) nil (25410 60899 574689 697000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 1006)) nil (25410 60899 574688 996000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 1037)) nil (25410 60899 574688 224000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 1058)) nil (25410 60899 574686 591000) 0 nil])
([nil nil ((966 . 971)) nil (25410 60899 574682 453000) 0 nil])
([nil nil ((#("	
" 0 1 (fontified t) 1 2 (fontified t)) . 1082) (undo-tree-id764 . -2) (undo-tree-id765 . -2) (undo-tree-id766 . -1) (undo-tree-id767 . -2) (undo-tree-id768 . -1) (t 25410 60899 577868 441000)) nil (25410 60962 563616 713000) 0 nil])
([nil nil ((#("	
" 0 1 (fontified t) 1 2 (fontified t)) . 1082) (undo-tree-id761 . -2) (undo-tree-id762 . -2) (undo-tree-id763 . -2)) nil (25410 60962 563612 886000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1082) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1)) nil (25410 60962 563609 790000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1082) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1)) nil (25410 60962 563574 214000) 0 nil])
([nil nil ((1356 . 1362) (1348 . 1352) (#("      " 0 6 (fontified nil)) . 1348) (1357 . 1358)) nil (25410 60962 563561 941000) 0 nil])
([nil nil ((1360 . 1361) (#(")" 0 1 (fontified nil)) . -1360) (1360 . 1361)) nil (25410 60962 563559 727000) 0 nil])
([nil nil ((1360 . 1363)) nil (25410 60962 563555 88000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -1360) (undo-tree-id769 . -1) (#("n" 0 1 (fontified t)) . -1361) (undo-tree-id770 . -1) (#("d" 0 1 (fontified t face font-lock-keyword-face)) . -1362) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (#(")" 0 1 (fontified t)) . -1363) (undo-tree-id773 . -1) (undo-tree-id774 . 1) (undo-tree-id775 . -1) 1364 (t 25410 60962 606219 715000)) nil (25410 60985 28353 879000) 0 nil])
([nil nil ((#("           {:ok, %ClientsQuota{} = clients_quota} <-" 0 1 (fontified t) 1 11 (fontified t) 11 12 (fontified t) 12 15 (fontified t face elixir-atom-face) 15 17 (fontified t) 17 30 (fontified t face font-lock-type-face) 30 52 (fontified t)) . 884) (t 25410 60985 46346 289000)) nil (25410 61023 596181 482000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -1024) (undo-tree-id776 . -1) (undo-tree-id777 . 1) (undo-tree-id778 . -1) (#(" " 0 1 (fontified t)) . -1025) (undo-tree-id779 . -1) (#("d" 0 1 (fontified t)) . -1026) (undo-tree-id780 . -1) (#("o" 0 1 (fontified t face font-lock-keyword-face)) . -1027) (undo-tree-id781 . -1) 1028) nil (25410 61023 596177 134000) 0 nil])
([nil nil ((1024 . 1025) (t 25410 61023 614565 525000)) nil (25410 61040 295882 350000) 0 nil])
([nil nil ((1024 . 1025) (#(")" 0 1 (fontified nil)) . -1024) (1024 . 1025)) nil (25410 61040 295873 122000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 883) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (t 25410 61040 322661 130000)) nil (25410 61450 950076 917000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 883) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1)) nil (25410 61450 950074 201000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1025) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1)) nil (25410 61450 950071 767000) 0 nil])
([nil nil ((#("process_quota_map(quota_plan_list, loan_code_field)" 0 50 (fontified t) 50 51 (rear-nonsticky t fontified t)) . 2643) (undo-tree-id790 . -51) (undo-tree-id791 . -51) (undo-tree-id792 . 1) (undo-tree-id793 . -51) (undo-tree-id794 . 34) (undo-tree-id795 . -18) (undo-tree-id796 . -51) 2694) nil (25410 61450 950068 721000) 0 nil])
([nil nil ((2709 . 2713)) nil (25410 61450 950061 577000) 0 nil])
([nil nil ((nil fontified nil 2763 . 2764) (nil fontified nil 2713 . 2763) (2713 . 2764)) nil (25410 61450 950060 264000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2643) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (#("+" 0 1 (fontified t)) . -2644) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (#("+" 0 1 (fontified t)) . -2645) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (#(" " 0 1 (fontified t)) . -2646) (undo-tree-id788 . -1) (undo-tree-id789 . -1) 2647) nil (25410 61450 950055 645000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -912) (undo-tree-id806 . -1) (#("a" 0 1 (fontified t)) . -913) (undo-tree-id807 . -1) (#("n" 0 1 (fontified t)) . -914) (undo-tree-id808 . -1) (#("y" 0 1 (fontified t)) . -915) (undo-tree-id809 . -1) (#("_" 0 1 (fontified t)) . -916) (undo-tree-id810 . -1) 917 (t 25410 61450 966860 851000)) nil (25410 61637 989120 877000) 0 nil])
([nil nil ((6273 . 6278) (t 25410 61638 11437 347000)) nil (25410 63785 216592 740000) 0 nil])
([nil nil ((6278 . 6281)) nil (25410 63785 216591 618000) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -6278) (undo-tree-id814 . -1) (#(">" 0 1 (fontified t)) . -6279) (undo-tree-id815 . -1) (#(" " 0 1 (fontified t)) . -6280) (undo-tree-id816 . -1) 6281) nil (25410 63785 216590 336000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified nil)) . -6278) (6278 . 6279) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . -6278) (6278 . 6279) (6277 . 6279) (#("\"" 0 1 (fontified nil syntax-table (15))) . -6277) (6273 . 6278)) nil (25410 63785 216586 218000) 0 nil])
([nil nil ((6278 . 6288)) nil (25410 63785 216584 605000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 6294) (#(" " 0 1 (fontified t)) . 6294) (#(" " 0 1 (fontified t)) . 6294) (#(" " 0 1 (fontified t)) . 6294) (#("
" 0 1 (fontified t)) . 6294) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1)) nil (25410 63785 216582 441000) 0 nil])
([nil nil ((6347 . 6348)) nil (25410 63785 216569 778000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6358 . 6359) (nil fontified nil 6348 . 6359) (6348 . 6359)) nil (25410 63785 216566 201000) 0 nil])
([nil nil ((6389 . 6394) (t 25410 63785 221939 841000)) nil (25410 63825 544915 263000) 0 nil])
([nil nil ((6394 . 6405)) nil (25410 63825 544912 909000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -6404) (undo-tree-id818 . -1) 6405) nil (25410 63825 544910 454000) 0 nil])
([nil nil ((6404 . 6407)) nil (25410 63825 544905 856000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -6406) (undo-tree-id817 . -1) 6407) nil (25410 63825 544902 49000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -6408) (6408 . 6409) (#(")" 0 1 (fontified nil)) . -6408) (6408 . 6409) (6406 . 6409)) nil (25410 63825 544879 737000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face font-lock-comment-face)) . -5501) (undo-tree-id821 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -5502) (undo-tree-id822 . -1) (#("c" 0 1 (face font-lock-comment-face fontified t)) . -5503) (undo-tree-id823 . -1) 5504 (t 25410 63825 573267 501000)) nil (25410 64293 424492 605000) 0 nil])
([nil nil ((5501 . 5513)) nil (25410 64293 424483 769000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -5477) (undo-tree-id819 . -1) (#(" " 0 1 (fontified t face font-lock-comment-delimiter-face)) . -5478) (undo-tree-id820 . -1) 5479) nil (25410 64293 424479 20000) 0 nil])
([nil nil ((5477 . 5478)) nil (25410 64293 424453 102000) 0 nil])
([nil nil ((5461 . 5462) (t 25410 64293 450457 230000)) nil (25410 65313 183839 348000) 0 nil])
([nil nil ((#("N" 0 1 (fontified t face font-lock-builtin-face)) . -5440) (undo-tree-id824 . -1) 5441) nil (25410 65313 183834 589000) 0 nil])
([nil nil ((5440 . 5441)) nil (25410 65313 183812 497000) 0 nil])
([nil nil ((#("<> \"00:00:00 Z\"" 0 3 (fontified t) 3 4 (syntax-table (15) fontified t face font-lock-string-face) 4 14 (fontified t face font-lock-string-face) 14 15 (syntax-table (15) fontified t face font-lock-string-face)) . 6283) (undo-tree-id829 . -15) (undo-tree-id830 . -15) (undo-tree-id831 . -15) 6298 (t 25410 65313 237054 381000)) nil (25410 65383 954144 963000) 0 nil])
([nil nil ((6283 . 6287) (#(" " 0 1 (fontified t)) . 6282) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (6283 . 6284)) nil (25410 65383 954136 737000) 0 nil])
([nil nil ((6287 . 6295)) nil (25410 65383 954128 732000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -6294) (undo-tree-id825 . -1) 6295) nil (25410 65383 954124 964000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -6301) (6301 . 6302) (#(")" 0 1 (fontified nil)) . -6301) (6301 . 6302) (6294 . 6302)) nil (25410 65383 954103 303000) 0 nil])
([nil nil ((#("|> Map.update!(\"quota_delayed_days\", fn _x -> _x |> String.to_integer() end)" 0 3 (fontified t) 3 6 (fontified t face font-lock-type-face) 6 15 (fontified t) 15 16 (syntax-table (15) fontified t face font-lock-string-face) 16 18 (fontified t face font-lock-string-face) 18 34 (fontified t face font-lock-string-face) 34 35 (syntax-table (15) fontified t face font-lock-string-face) 35 37 (fontified t) 37 39 (fontified t face font-lock-keyword-face) 39 40 (fontified t) 40 42 (fontified t face font-lock-comment-face) 42 46 (fontified t) 46 48 (fontified t face font-lock-comment-face) 48 52 (fontified t) 52 58 (fontified t face font-lock-type-face) 58 69 (fontified t) 69 70 (fontified t) 70 72 (fontified t) 72 75 (fontified t face font-lock-keyword-face) 75 76 (fontified t)) . 5479) (undo-tree-id833 . -76) (undo-tree-id834 . -76) (undo-tree-id835 . 1) (undo-tree-id836 . -76) (undo-tree-id837 . 62) (undo-tree-id838 . -15) 5555 (t 25410 65383 971807 993000)) nil (25410 65455 65330 435000) 0 nil])
([nil nil ((3974 . 3982)) nil (25410 65455 65317 570000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4057 . 4058) (nil fontified nil 4057 . 4058) (nil fontified nil 4054 . 4057) (nil fontified nil 4052 . 4054) (nil fontified nil 4051 . 4052) (nil fontified nil 4040 . 4051) (nil fontified nil 4034 . 4040) (nil fontified nil 4030 . 4034) (nil fontified nil 4028 . 4030) (nil fontified nil 4024 . 4028) (nil fontified nil 4022 . 4024) (nil fontified nil 4021 . 4022) (nil fontified nil 4019 . 4021) (nil fontified nil 4017 . 4019) (nil fontified nil 4016 . 4017) (nil fontified nil 4000 . 4016) (nil fontified nil 3998 . 4000) (nil fontified nil 3997 . 3998) (nil fontified nil 3988 . 3997) (nil fontified nil 3985 . 3988) (nil fontified nil 3982 . 3985) (3982 . 4058)) nil (25410 65455 65313 352000) 0 nil])
([nil nil ((3967 . 3968)) nil (25410 65455 65302 402000) 0 nil])
([nil nil ((#("N" 0 1 (fontified t face font-lock-builtin-face)) . -3946) (undo-tree-id832 . -1) 3947) nil (25410 65455 65298 43000) 0 nil])
([nil nil ((3946 . 3947)) nil (25410 65455 65276 532000) 0 nil])
([nil nil ((6504 . 6509) (t 25410 65455 118364 937000)) nil (25411 994 619243 759000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -6523) (6523 . 6524) (#(")" 0 1 (fontified nil)) . -6523) (6523 . 6524) (6509 . 6524)) nil (25411 994 619233 500000) 0 nil])
([nil nil ((6661 . 6662) (t 25411 994 635815 217000)) nil (25411 1061 694029 604000) 0 nil])
([nil nil ((#("!" 0 1 (fontified t)) . -6661) (undo-tree-id839 . -1) 6662 (t 25411 1061 713021 746000)) nil (25411 1066 989642 786000) 0 nil])
([nil nil ((#("process_concept_quota_map(quota_concept_list, loan_code_field)" 0 56 (fontified t) 56 61 (fontified t) 61 62 (rear-nonsticky t fontified t)) . 2638) (undo-tree-id848 . -62) (undo-tree-id849 . -62) (undo-tree-id850 . 1) (undo-tree-id851 . -62) (undo-tree-id852 . 37) (undo-tree-id853 . -26) 2700 (t 25411 1067 9116 225000)) nil (25411 2042 710603 776000) 0 nil])
([nil nil ((2693 . 2697)) nil (25411 2042 710586 774000) 0 nil])
([nil nil ((nil fontified nil 2758 . 2759) (nil fontified nil 2753 . 2758) (nil fontified nil 2697 . 2753) (2697 . 2759)) nil (25411 2042 710583 368000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2638) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (#("+" 0 1 (fontified t)) . -2639) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (#("+" 0 1 (fontified t)) . -2640) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (#(" " 0 1 (fontified t)) . -2641) (undo-tree-id846 . -1) (undo-tree-id847 . -1) 2642) nil (25411 2042 710572 167000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -6761) (6761 . 6762) (#(")" 0 1 (fontified nil)) . -6761) (6761 . 6762) (6747 . 6762) (t 25411 2042 728238 281000)) nil (25411 2447 587022 466000) 0 nil])
([nil nil ((1003 . 1012) (t 25411 2447 593817 273000)) nil (25411 3710 533740 350000) 0 nil])
([nil nil ((1012 . 1015)) nil (25411 3710 533739 478000) 0 nil])
([nil nil ((1015 . 1025)) nil (25411 3710 533738 667000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -1021) (undo-tree-id854 . -1) (#("p" 0 1 (fontified t)) . -1022) (undo-tree-id855 . -1) (#("c" 0 1 (fontified t)) . -1023) (undo-tree-id856 . -1) (#("t" 0 1 (fontified t)) . -1024) (undo-tree-id857 . -1) 1025) nil (25411 3710 533736 843000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -1026) (1026 . 1027) (#(")" 0 1 (fontified nil)) . -1026) (1026 . 1027) (1021 . 1027)) nil (25411 3710 533720 883000) 0 nil])
([nil nil ((1003 . 1012) (t 25411 3710 540535 485000)) nil (25411 3826 44833 683000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -1025) (1025 . 1026) (#(")" 0 1 (fontified nil)) . -1025) (1025 . 1026) (1012 . 1026)) nil (25411 3826 44827 952000) 0 nil])
([nil nil ((1025 . 1028)) nil (25411 3826 44818 274000) 0 nil])
([nil nil ((912 . 917) (t 25411 3826 74043 152000)) nil (25411 4582 72737 747000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -912) (undo-tree-id858 . -1) (#("a" 0 1 (fontified t)) . -913) (undo-tree-id859 . -1) (#("n" 0 1 (fontified t)) . -914) (undo-tree-id860 . -1) (#("y" 0 1 (fontified t)) . -915) (undo-tree-id861 . -1) (#("_" 0 1 (fontified t)) . -916) (undo-tree-id862 . -1) 917 (t 25411 4582 102325 365000)) nil (25411 4618 763024 473000) 0 nil])
([nil nil ((1011 . 1012) (t 25411 4618 782791 721000)) nil (25411 4873 402864 89000) 0 nil])
([nil nil ((1038 . 1039)) nil (25411 4873 402859 851000) 0 nil])
([nil nil ((#("quota_map
               |> Map.values()
               |> hd" 0 10 (fontified t) 10 18 (fontified t) 18 24 (fontified t) 24 25 (fontified t) 25 28 (fontified t) 28 29 (fontified t face font-lock-type-face) 29 30 (fontified t face font-lock-type-face) 30 31 (fontified t face font-lock-type-face) 31 35 (fontified t) 35 40 (fontified t) 40 41 (fontified t) 41 43 (fontified t) 43 46 (fontified t) 46 47 (fontified t) 47 56 (fontified t) 56 61 (fontified t)) . 942) (undo-tree-id890 . -10) (undo-tree-id891 . -10) (undo-tree-id892 . -41) (undo-tree-id893 . -41) (undo-tree-id894 . -61) (undo-tree-id895 . -41) (undo-tree-id896 . -61) (undo-tree-id897 . -41) (undo-tree-id898 . -61) 1003 (t 25411 4873 422107 539000)) nil (25411 5582 221803 325000) 0 nil])
([nil nil ((884 . 885) (#("        " 0 2 (fontified nil) 2 8 (fontified nil)) . 883) (undo-tree-id886 . -8) (undo-tree-id887 . -8) (#("     " 0 5 (fontified t)) . -891) (undo-tree-id888 . -5) (undo-tree-id889 . -5) (896 . 897)) nil (25411 5582 221785 852000) 0 nil])
([nil nil ((883 . 885)) nil (25411 5582 221775 823000) 0 nil])
([nil nil ((886 . 895)) nil (25411 5582 221773 940000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t)) . -895) (undo-tree-id885 . -1) 896) nil (25411 5582 221771 696000) 0 nil])
([nil nil ((895 . 900)) nil (25411 5582 221767 979000) 0 nil])
([nil nil ((884 . 885) (#("	" 0 1 (fontified nil)) . 883) (883 . 884) (#("  " 0 2 (fontified t)) . 883) (undo-tree-id883 . -2) (undo-tree-id884 . -2) (885 . 886)) nil (25411 5582 221765 83000) 0 nil])
([nil nil ((885 . 891)) nil (25411 5582 221758 351000) 0 nil])
([nil nil ((nil rear-nonsticky nil 951 . 952) (nil fontified nil 947 . 952) (nil fontified nil 938 . 947) (nil fontified nil 937 . 938) (nil fontified nil 934 . 937) (nil fontified nil 932 . 934) (nil fontified nil 931 . 932) (nil fontified nil 926 . 931) (nil fontified nil 922 . 926) (nil fontified nil 921 . 922) (nil fontified nil 920 . 921) (nil fontified nil 919 . 920) (nil fontified nil 916 . 919) (nil fontified nil 915 . 916) (nil fontified nil 909 . 915) (nil fontified nil 901 . 909) (nil fontified nil 891 . 901) (891 . 952)) nil (25411 5582 221754 513000) 0 nil])
([nil nil ((952 . 960)) nil (25411 5582 221745 777000) 0 nil])
([nil nil ((975 . 978)) nil (25411 5582 221744 94000) 0 nil])
([nil nil ((976 . 977)) nil (25411 5582 221742 381000) 0 nil])
([nil nil ((975 . 976)) nil (25411 5582 221740 237000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -977) (undo-tree-id882 . -1) 978) nil (25411 5582 221736 469000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 960) (undo-tree-id863 . 1) (#(" " 0 1 (fontified t)) . 960) (undo-tree-id864 . 1) (#(" " 0 1 (fontified t)) . 960) (undo-tree-id865 . 1) (#(" " 0 1 (fontified t)) . 960) (undo-tree-id866 . 1) (#(" " 0 1 (fontified t)) . 960) (undo-tree-id867 . 1) (#(" " 0 1 (fontified t)) . 960) (undo-tree-id868 . 1) (#(" " 0 1 (fontified t)) . 960) (undo-tree-id869 . 1) (#(" " 0 1 (fontified t)) . 960) (undo-tree-id870 . 1) (#(" " 0 1 (fontified t)) . 960) (undo-tree-id871 . 1) (#(" " 0 1 (fontified t)) . 960) (undo-tree-id872 . 1) (#(" " 0 1 (fontified t)) . 960) (undo-tree-id873 . 1) (#(" " 0 1 (fontified t)) . 960) (undo-tree-id874 . 1) (#(" " 0 1 (fontified t)) . 960) (undo-tree-id875 . 1) (#(" " 0 1 (fontified t)) . 960) (undo-tree-id876 . 1) (#("
" 0 1 (fontified t)) . 960) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . 1) (undo-tree-id881 . -1)) nil (25411 5582 221721 301000) 0 nil])
([nil nil ((#("|> IO.inspect()" 0 3 (fontified t) 3 5 (face font-lock-type-face fontified t) 5 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t)) . 6355) (t 25411 5582 251739 639000)) nil (25411 5697 186761 548000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 6355) (#(" " 0 1 (fontified t)) . 6355) (#(" " 0 1 (fontified t)) . 6355) (#(" " 0 1 (fontified t)) . 6355) (#("
" 0 1 (fontified t)) . 6355) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1)) nil (25411 5697 186756 819000) 0 nil])
([nil nil ((#("|> IO.inspect()" 0 3 (fontified t) 3 5 (fontified t face font-lock-type-face) 5 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t)) . 6455) (undo-tree-id905 . -15) (undo-tree-id906 . -15) (t 25411 5697 213329 160000)) nil (25411 5704 644278 311000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 6455) (#(" " 0 1 (fontified t)) . 6455) (#(" " 0 1 (fontified t)) . 6455) (#(" " 0 1 (fontified t)) . 6455) (#("
" 0 1 (fontified t)) . 6455) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1)) nil (25411 5704 644265 56000) 0 nil])
([nil nil ((#("|> IO.inspect()" 0 3 (fontified t) 3 5 (fontified t face font-lock-type-face) 5 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t)) . 6528) (undo-tree-id910 . -15) (t 25411 5704 665432 340000)) nil (25411 5710 48343 872000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 6528) (#(" " 0 1 (fontified t)) . 6528) (#(" " 0 1 (fontified t)) . 6528) (#(" " 0 1 (fontified t)) . 6528) (#("
" 0 1 (fontified t)) . 6528) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1)) nil (25411 5710 48333 1000) 0 nil])
([nil nil ((6762 . 6769) (t 25411 5710 69507 175000)) nil (25411 6088 927836 25000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified nil)) . -6776) (6776 . 6777) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . -6776) (6776 . 6777) (6775 . 6777) (#("\"" 0 1 (fontified nil syntax-table (15))) . -6775) (6769 . 6776)) nil (25411 6088 927833 430000) 0 nil])
([nil nil ((6776 . 6786)) nil (25411 6088 927828 10000) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -6769) (undo-tree-id913 . -1) (#(">" 0 1 (fontified t)) . -6770) (undo-tree-id914 . -1) (#(" " 0 1 (fontified t)) . -6771) (undo-tree-id915 . -1) 6772 (t 25411 6088 932993 383000)) nil (25411 6290 963675 865000) 0 nil])
([nil nil ((#("<> \"00:00:00 Z\"" 0 3 (fontified t) 3 4 (fontified t syntax-table (15) face font-lock-string-face) 4 14 (fontified t face font-lock-string-face) 14 15 (fontified t syntax-table (15) face font-lock-string-face)) . 6769) (undo-tree-id984 . -15)) nil (25411 6299 248703 571000) 0 nil] [nil nil ((#("<> \"00:00:00 Z\"" 0 3 (fontified t) 3 4 (fontified t syntax-table (15) face font-lock-string-face) 4 14 (fontified t face font-lock-string-face) 14 15 (fontified t syntax-table (15) face font-lock-string-face)) . 6769)) ((6769 . 6784)) (25411 6290 411578 694000) 0 nil])
([nil nil ((883 . 888) (t 25411 6299 278039 785000)) nil (25411 30304 184964 454000) 0 nil])
([nil nil ((6384 . 6389)) ((#("v <> " 0 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . 6384) (undo-tree-id982 . -5) (undo-tree-id983 . -5)) (25411 6283 990388 972000) 0 nil])
([nil nil ((884 . 885) (#("	" 0 1 (fontified nil)) . 883) (883 . 884) (#("     " 0 5 (fontified t)) . 883) (undo-tree-id1000 . -5) (undo-tree-id1001 . -5) (888 . 889)) nil (25411 30304 184963 222000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6403 . 6404) (6389 . 6404)) ((#("<> \"00:00:00 Z\"" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil syntax-table (15) face font-lock-string-face) 4 5 (fontified nil face font-lock-string-face) 5 6 (fontified nil face font-lock-string-face) 6 7 (fontified nil face font-lock-string-face) 7 8 (fontified nil face font-lock-string-face) 8 9 (fontified nil face font-lock-string-face) 9 10 (fontified nil face font-lock-string-face) 10 11 (fontified nil face font-lock-string-face) 11 12 (fontified nil face font-lock-string-face) 12 13 (fontified nil face font-lock-string-face) 13 14 (fontified nil face font-lock-string-face) 14 15 (fontified nil rear-nonsticky nil syntax-table (15) face font-lock-string-face)) . 6389) (nil rear-nonsticky t 6403 . 6404)) (25411 6278 12611 205000) 0 nil])
([nil nil ((884 . 885) (#("	" 0 1 (fontified nil)) . 883) (883 . 884) (883 . 884)) nil (25411 30304 184960 727000) 0 nil])
([nil nil ((#("<" 0 1 (fontified t)) . 6386)) ((6386 . 6387)) (25411 6277 689435 964000) 0 nil] [nil nil ((6404 . 6408)) ((#(" |> " 0 4 (fontified t)) . 6404)) (25411 6176 862058 720000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -883) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . 1) (undo-tree-id998 . -1) (#("	" 0 1 (fontified t)) . -884) (undo-tree-id999 . -1) 885) nil (25411 30304 184959 164000) 0 nil])
([nil nil ((6386 . 6387)) ((#("|" 0 1 (fontified t)) . 6386)) (25411 6275 423580 741000) 0 nil])
([nil nil ((#("<" 0 1 (fontified t)) . -6389) (undo-tree-id916 . -1) (#(">" 0 1 (fontified t)) . -6390) (undo-tree-id917 . -1) (#(" " 0 1 (fontified t)) . -6391) (undo-tree-id918 . -1) 6392 (t 25411 6155 655860 596000)) ((6389 . 6392) (t 25411 6169 451651 17000)) (25411 6169 422501 372000) 0 nil])
([nil nil ((883 . 888)) nil (25411 30304 184953 753000) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -6386) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (#(">" 0 1 (fontified t)) . -6387) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (#(" " 0 1 (fontified t)) . -6388) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) 6389) ((6386 . 6389)) (25411 6275 210275 360000) 0 nil])
nil
([nil nil ((884 . 885) (#("	" 0 1 (fontified nil)) . 883) (883 . 884) (#("     " 0 5 (fontified t)) . 883) (undo-tree-id991 . -5) (undo-tree-id992 . -5) (888 . 889)) nil (25411 30304 184952 701000) 0 nil])
([nil nil ((6401 . 6405) (t 25411 6200 803203 911000)) ((#(" |> " 0 1 (fontified t) 1 4 (fontified t)) . 6401)) (25411 6274 959649 467000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t)) . -884) (undo-tree-id990 . -1) 885) nil (25411 30304 184949 885000) 0 nil])
([nil nil ((6390 . 6391) (t 25411 6206 283129 787000)) ((#(" " 0 1 (fontified t face font-lock-string-face)) . 6390) (t 25411 6237 322731 539000)) (25411 6274 787830 261000) 0 nil])
([nil nil ((884 . 890)) nil (25411 30304 184948 51000) 0 nil])
([nil nil ((#("<" 0 1 (fontified t)) . -6386) (undo-tree-id948 . -1) (#(">" 0 1 (fontified t)) . -6387) (undo-tree-id949 . -1) (#(" " 0 1 (fontified t)) . -6388) (undo-tree-id950 . -1) (#("\"" 0 1 (fontified t syntax-table (15) face font-lock-string-face)) . -6389) (undo-tree-id951 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -6390) (undo-tree-id952 . -1) (#("0" 0 1 (fontified t face font-lock-string-face)) . -6391) (undo-tree-id953 . -1) (#("0" 0 1 (fontified t face font-lock-string-face)) . -6392) (undo-tree-id954 . -1) (#(":" 0 1 (fontified t face font-lock-string-face)) . -6393) (undo-tree-id955 . -1) (#("0" 0 1 (fontified t face font-lock-string-face)) . -6394) (undo-tree-id956 . -1) (#("0" 0 1 (fontified t face font-lock-string-face)) . -6395) (undo-tree-id957 . -1) (#(":" 0 1 (fontified t face font-lock-string-face)) . -6396) (undo-tree-id958 . -1) (#("0" 0 1 (fontified t face font-lock-string-face)) . -6397) (undo-tree-id959 . -1) (#("0" 0 1 (fontified t face font-lock-string-face)) . -6398) (undo-tree-id960 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -6399) (undo-tree-id961 . -1) (#("Z" 0 1 (fontified t face font-lock-string-face)) . -6400) (undo-tree-id962 . -1) (#("\"" 0 1 (fontified t rear-nonsticky t syntax-table (15) face font-lock-string-face)) . -6401) (undo-tree-id963 . -1) (#(" " 0 1 (fontified t)) . -6402) (undo-tree-id964 . -1) 6403 (t 25411 6237 322731 539000)) ((6386 . 6403)) (25411 6274 194141 730000) 0 nil])
([nil nil ((nil rear-nonsticky nil 995 . 996) (nil fontified nil 890 . 996) (890 . 996)) nil (25411 30304 184947 39000) 0 nil])
nil
([nil nil ((#("d" 0 1 (fontified t)) . -902) (undo-tree-id985 . -1) (#("a" 0 1 (fontified t)) . -903) (undo-tree-id986 . -1) (#("t" 0 1 (fontified t)) . -904) (undo-tree-id987 . -1) (#("a" 0 1 (fontified t)) . -905) (undo-tree-id988 . -1) (#("2" 0 1 (fontified t)) . -906) (undo-tree-id989 . -1) 907) nil (25411 30304 184944 213000) 0 nil])
([nil nil ((902 . 911)) nil (25411 30304 184926 698000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t)) . -1001) (undo-tree-id1006 . -1) 1002 (t 25411 30304 202011 89000)) nil (25411 30326 755455 368000) 0 nil])
([nil nil ((1019 . 1020) (#(")" 0 1 (fontified nil)) . -1019) (1019 . 1020) (1001 . 1020)) nil (25411 30326 755450 308000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -1017) (undo-tree-id1005 . -1) 1018) nil (25411 30326 755446 470000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -1018) (undo-tree-id1002 . -1) (undo-tree-id1003 . 1) (undo-tree-id1004 . -1) 1019) nil (25411 30326 755439 606000) 0 nil])
([nil nil ((1018 . 1027)) nil (25411 30326 755417 391000) 0 nil])
([nil nil ((519 . 520)) nil (25411 30326 755409 806000) 0 nil])
([nil nil ((1001 . 1002) (#(")" 0 1 (fontified nil)) . -1001) (1001 . 1002) (t 25411 30326 777575 62000)) nil (25411 30356 859233 235000) 0 nil])
([nil nil ((885 . 886) (t 25411 30356 866130 14000)) nil (25411 30432 363964 350000) 0 nil])
([nil nil ((1005 . 1006) (#("      " 0 6 (fontified t)) . 1005) (#("	" 0 1 (fontified nil face font-lock-comment-face)) . 1004) (1004 . 1005) (1004 . 1005)) nil (25411 30432 363962 918000) 0 nil])
([nil nil ((1005 . 1006)) nil (25411 30432 363961 776000) 0 nil])
([nil nil ((1040 . 1041) (#("      " 0 6 (fontified nil)) . -1030) (undo-tree-id1013 . -6) (1045 . 1046)) nil (25411 30432 363960 744000) 0 nil])
([nil nil ((1041 . 1043)) nil (25411 30432 363959 52000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -1041) (undo-tree-id1011 . -1) (#("c" 0 1 (fontified t)) . -1042) (undo-tree-id1012 . -1) 1043) nil (25411 30432 363957 991000) 0 nil])
([nil nil ((1041 . 1042)) nil (25411 30432 363955 988000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -1041) (undo-tree-id1010 . -1) 1042) nil (25411 30432 363954 966000) 0 nil])
([nil nil ((1041 . 1043)) nil (25411 30432 363953 574000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -1041) (undo-tree-id1008 . -1) (#("v" 0 1 (fontified t)) . -1042) (undo-tree-id1009 . -1) 1043) nil (25411 30432 363952 433000) 0 nil])
([nil nil ((1041 . 1053)) nil (25411 30432 363949 879000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -1052) (undo-tree-id1007 . -1) 1053) nil (25411 30432 363948 497000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -1055) (1055 . 1056) (#(")" 0 1 (fontified nil)) . -1055) (1055 . 1056) (1052 . 1056)) nil (25411 30432 363935 299000) 0 nil])
([nil nil ((#("]" 0 1 (fontified nil)) . -1040) (1040 . 1041) (#("]" 0 1 (fontified nil)) . -1040) (1040 . 1041) (1039 . 1041) (t 25411 30432 381650 708000)) nil (25411 30456 493191 396000) 0 nil])
([nil nil ((1040 . 1053)) nil (25411 30456 493182 31000) 0 nil])
([nil nil ((#("quota_map[:ClientsQuota]
	|> IO.inspect()
        " 0 3 (fontified t) 3 9 (fontified t) 9 10 (fontified t) 10 23 (fontified t face elixir-atom-face) 23 24 (fontified t) 24 25 (fontified t) 25 29 (fontified t) 29 31 (fontified t face font-lock-type-face) 31 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 50 (fontified t)) . -1030) (undo-tree-id1017 . -42) (undo-tree-id1018 . -42) (undo-tree-id1019 . -25) (undo-tree-id1020 . -25) (undo-tree-id1021 . -50) (undo-tree-id1022 . -42) (undo-tree-id1023 . -50) 1080 (t 25411 30456 524333 160000)) nil (25411 30555 318458 786000) 0 nil])
([nil nil ((#("       " 0 6 (fontified t) 6 7 (fontified t)) . -1030) (#("	" 0 1 (fontified nil)) . 1029) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (1030 . 1031)) nil (25411 30555 318452 225000) 0 nil])
([nil nil ((1030 . 1045)) nil (25411 30555 318440 884000) 0 nil])
([nil nil ((1030 . 1031) (#("	" 0 1 (fontified nil face font-lock-comment-face)) . 1029) (1029 . 1030) (1029 . 1030)) nil (25411 30555 318439 392000) 0 nil])
([nil nil ((1031 . 1043)) nil (25411 30555 318437 789000) 0 nil])
([nil nil ((1043 . 1047)) nil (25411 30555 318433 411000) 0 nil])
([nil nil ((1030 . 1031) (t 25411 30555 334775 954000)) nil (25411 30642 816098 262000) 0 nil])
([nil nil ((1049 . 1050)) nil (25411 30642 816097 401000) 0 nil])
([nil nil ((1081 . 1082)) nil (25411 30642 816096 780000) 0 nil])
([nil nil ((1102 . 1103)) nil (25411 30642 816096 48000) 0 nil])
([nil nil ((1104 . 1105)) nil (25411 30642 816094 646000) 0 nil])
([nil nil ((1215 . 1216)) nil (25411 30642 816090 249000) 0 nil])
([nil nil ((#("#      new_data2 = quota_map |> Enum.map(fn x -> x[:Quota] |> Map.new(fn {k,v} -> {k |> String.to_atom(),v}  end) end)

#	IO.inspect(new_data2)
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 7 (fontified t face font-lock-comment-delimiter-face) 7 16 (fontified t face font-lock-comment-face) 16 32 (fontified t face font-lock-comment-face) 32 36 (fontified t face font-lock-comment-face) 36 41 (fontified t face font-lock-comment-face) 41 43 (fontified t face font-lock-comment-face) 43 51 (fontified t face font-lock-comment-face) 51 57 (fontified t face font-lock-comment-face) 57 62 (fontified t face font-lock-comment-face) 62 65 (fontified t face font-lock-comment-face) 65 70 (fontified t face font-lock-comment-face) 70 72 (fontified t face font-lock-comment-face) 72 88 (fontified t face font-lock-comment-face) 88 94 (fontified t face font-lock-comment-face) 94 109 (fontified t face font-lock-comment-face) 109 112 (fontified t face font-lock-comment-face) 112 114 (fontified t face font-lock-comment-face) 114 116 (fontified t face font-lock-comment-face) 116 117 (rear-nonsticky t fontified t face font-lock-comment-face) 117 118 (fontified t face font-lock-comment-face) 118 119 (fontified t face font-lock-comment-face) 119 120 (fontified t) 120 121 (fontified t face font-lock-comment-delimiter-face) 121 122 (fontified t face font-lock-comment-face) 122 124 (fontified t face font-lock-comment-face) 124 132 (fontified t face font-lock-comment-face) 132 142 (fontified t face font-lock-comment-face) 142 143 (fontified t face font-lock-comment-face) 143 144 (fontified t face font-lock-comment-face)) . 885) (undo-tree-id1035 . -144) (undo-tree-id1036 . -144) (undo-tree-id1037 . -144) (undo-tree-id1038 . -144) (undo-tree-id1039 . -144) (undo-tree-id1040 . -120) (undo-tree-id1041 . -120) (undo-tree-id1042 . -119) (undo-tree-id1043 . -119) (undo-tree-id1044 . -7) (undo-tree-id1045 . -144) (undo-tree-id1046 . -144) (undo-tree-id1047 . -144) (undo-tree-id1048 . -144) 1029 (t 25411 30642 834833 474000)) nil (25411 30729 776497 32000) 0 nil])
([nil nil ((833 . 839) (#("      " 0 6 (fontified nil)) . 832) (undo-tree-id1034 . -6) (832 . 839) (807 . 813) (825 . 826)) nil (25411 30729 776469 514000) 0 nil])
([nil nil ((nil rear-nonsticky nil 982 . 983) (nil fontified nil 982 . 983) (nil fontified nil 981 . 982) (nil fontified nil 971 . 981) (nil fontified nil 963 . 971) (nil fontified nil 961 . 963) (nil fontified nil 960 . 961) (nil fontified nil 959 . 960) (nil fontified nil 958 . 959) (nil fontified nil 957 . 958) (nil fontified nil 956 . 957) (nil fontified nil 955 . 956) (nil fontified nil 953 . 955) (nil fontified nil 951 . 953) (nil fontified nil 948 . 951) (nil fontified nil 933 . 948) (nil fontified nil 927 . 933) (nil fontified nil 911 . 927) (nil fontified nil 909 . 911) (nil fontified nil 904 . 909) (nil fontified nil 901 . 904) (nil fontified nil 896 . 901) (nil fontified nil 890 . 896) (nil fontified nil 882 . 890) (nil fontified nil 880 . 882) (nil fontified nil 875 . 880) (nil fontified nil 871 . 875) (nil fontified nil 855 . 871) (nil fontified nil 846 . 855) (nil fontified nil 840 . 846) (nil fontified nil 839 . 840) (839 . 983)) nil (25411 30729 776460 287000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -959) (undo-tree-id1033 . -1) 960) nil (25411 30729 776444 860000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -837) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (#(" " 0 1 (fontified t)) . -838) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -839) (undo-tree-id1032 . -1) 840) nil (25411 30729 776437 988000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -835) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (#(" " 0 1 (fontified t)) . -836) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) 837) nil (25411 30729 776420 177000) 0 nil])
([nil nil ((861 . 867) (#(" " 0 1 (fontified nil)) . 860) (undo-tree-id1058 . -1) (#("  " 0 2 (fontified nil)) . -839) (863 . 864) (t 25411 30729 795506 954000)) nil (25411 30768 779147 632000) 0 nil])
([nil nil ((867 . 879)) nil (25411 30768 779142 573000) 0 nil])
([nil nil ((879 . 880)) nil (25411 30768 779140 750000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -879) (undo-tree-id1057 . -1) 880) nil (25411 30768 779138 25000) 0 nil])
([nil nil ((887 . 888) (#(" " 0 1 (fontified nil)) . 886) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (#("            " 0 12 (fontified t)) . -867) (899 . 900)) nil (25411 30768 779133 86000) 0 nil])
([nil nil ((888 . 889) (#("	" 0 1 (fontified nil)) . 887) (undo-tree-id1054 . -1) (888 . 889)) nil (25411 30768 779124 591000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 887) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . 1) (undo-tree-id1053 . -1)) nil (25411 30768 779113 982000) 0 nil])
([nil nil (("
" . -7637) ("      
" . -7050) (undo-tree-id1061 . -6) (undo-tree-id1062 . -6) (5828 . 5984) (#("	  |> Map.update!(\"payment_date\", fn _x -> ~U[1970-01-01 00:00:00Z] end)
          
	  |> Map.update!(\"quota_sec\", fn x -> x |> String.to_integer() end)
	  
" 6 9 (face font-lock-type-face) 18 19 (syntax-table (15) face font-lock-string-face) 19 31 (face font-lock-string-face) 31 32 (syntax-table (15) face font-lock-string-face) 34 36 (face font-lock-keyword-face) 37 39 (face font-lock-comment-face) 43 45 (face font-lock-builtin-face) 46 66 (face font-lock-string-face) 68 71 (face font-lock-keyword-face) 90 93 (face font-lock-type-face) 102 103 (syntax-table (15) face font-lock-string-face) 103 105 (face font-lock-string-face) 105 112 (face font-lock-string-face) 112 113 (syntax-table (15) face font-lock-string-face) 115 117 (face font-lock-keyword-face) 128 134 (face font-lock-type-face) 148 151 (face font-lock-keyword-face) 151 152 (rear-nonsticky t)) . -5828) (undo-tree-id1063 . -83) (4406 . 4407) (2973 . 3102) (#("    process_quota_map(quota_plan_list, loan_code_field) ++ process_concept_quota_map(quota_concept_list, loan_code_field)
" 54 55 (rear-nonsticky t) 120 121 (rear-nonsticky t)) . -2973) (undo-tree-id1064 . -4) (undo-tree-id1065 . -59) (2068 . 2140) (#("        # |> Phoenix.View.render_many(\"index_quota.json\", Quota: quota)
" 8 10 (face font-lock-comment-delimiter-face) 10 13 (face font-lock-comment-face) 13 20 (face font-lock-comment-face) 20 25 (face font-lock-comment-face) 25 37 (face font-lock-comment-face) 37 38 (face font-lock-comment-face) 38 39 (face font-lock-comment-face syntax-table (15)) 39 55 (face font-lock-comment-face) 55 56 (face font-lock-comment-face syntax-table (15)) 56 58 (face font-lock-comment-face) 58 59 (face font-lock-comment-face) 59 64 (face font-lock-comment-face) 64 70 (face font-lock-comment-face) 70 71 (rear-nonsticky t face font-lock-comment-face) 71 72 (face font-lock-comment-face)) . -2067) (1102 . 1640) (#("

#	       quota_map
#               |> Map.values()
#               |> hd#
#	       |> Creditos.create_clients_quota(
               
	      # |> Enum.into(%{})
	      # |> IO.inspect()
#             ) 
#      conn
#        |> put_status(:created)
#        |> put_resp_header(\"location\", Routes.quota_path(conn, :show, clients_quota))
#               |> put_view(CabbotWeb.ClientsQuotaView)
#               |> render(\"show.json\", clients_quota: clients_quota)
	       
	   end
	     
" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t face font-lock-comment-delimiter-face) 3 20 (fontified t face font-lock-comment-face) 20 21 (fontified t face font-lock-comment-face) 21 22 (fontified t face font-lock-comment-delimiter-face) 22 37 (fontified t face font-lock-comment-delimiter-face) 37 40 (fontified t face font-lock-comment-face) 40 41 (fontified t face font-lock-comment-face) 41 42 (fontified t face font-lock-comment-face) 42 43 (fontified t face font-lock-comment-face) 43 47 (fontified t face font-lock-comment-face) 47 52 (fontified t face font-lock-comment-face) 52 53 (fontified t face font-lock-comment-face) 53 54 (fontified t face font-lock-comment-delimiter-face) 54 56 (fontified t face font-lock-comment-delimiter-face) 56 59 (fontified t face font-lock-comment-delimiter-face) 59 60 (fontified t face font-lock-comment-delimiter-face) 60 69 (fontified t face font-lock-comment-delimiter-face) 69 73 (fontified t face font-lock-comment-face) 73 74 (rear-nonsticky t fontified t face font-lock-comment-face) 74 75 (fontified t face font-lock-comment-face) 75 76 (fontified t face font-lock-comment-face) 76 77 (fontified t face font-lock-comment-delimiter-face) 77 84 (fontified t face font-lock-comment-face) 84 88 (fontified t face font-lock-comment-face) 88 96 (fontified t face font-lock-comment-face) 96 105 (fontified t face font-lock-comment-face) 105 110 (fontified t face font-lock-comment-face) 110 118 (fontified t face font-lock-comment-face) 118 119 (fontified t face font-lock-comment-face) 119 134 (fontified t) 134 135 (fontified t) 135 142 (fontified t) 142 144 (fontified t face font-lock-comment-delimiter-face) 144 147 (fontified t face font-lock-comment-face) 147 151 (fontified t face font-lock-comment-face) 151 156 (fontified t face font-lock-comment-face) 156 158 (fontified t face font-lock-comment-face) 158 160 (fontified t face font-lock-comment-face) 160 161 (fontified t face font-lock-comment-face) 161 162 (fontified t face font-lock-comment-face) 162 169 (fontified t) 169 171 (fontified t face font-lock-comment-delimiter-face) 171 174 (fontified t face font-lock-comment-face) 174 176 (fontified t face font-lock-comment-face) 176 184 (fontified t face font-lock-comment-face) 184 185 (fontified t face font-lock-comment-face) 185 186 (fontified t face font-lock-comment-face) 186 187 (fontified t face font-lock-comment-face) 187 188 (fontified t face font-lock-comment-delimiter-face) 188 190 (fontified t face font-lock-comment-delimiter-face) 190 198 (fontified t face font-lock-comment-delimiter-face) 198 201 (fontified t face font-lock-comment-delimiter-face) 201 202 (fontified t face font-lock-comment-face) 202 203 (fontified t face font-lock-comment-face) 203 204 (rear-nonsticky t fontified t face font-lock-comment-face) 204 211 (fontified t face font-lock-comment-delimiter-face) 211 212 (fontified t face font-lock-comment-face) 212 215 (fontified t face font-lock-comment-face) 215 216 (fontified t face font-lock-comment-face) 216 217 (fontified t face font-lock-comment-delimiter-face) 217 223 (fontified t face font-lock-comment-delimiter-face) 223 225 (fontified t face font-lock-comment-delimiter-face) 225 227 (fontified t face font-lock-comment-face) 227 239 (fontified t face font-lock-comment-face) 239 247 (fontified t face font-lock-comment-face) 247 249 (fontified t face font-lock-comment-face) 249 250 (fontified t face font-lock-comment-delimiter-face) 250 258 (fontified t face font-lock-comment-delimiter-face) 258 262 (fontified t face font-lock-comment-face) 262 273 (fontified t face font-lock-comment-face) 273 277 (fontified t face font-lock-comment-face) 277 278 (syntax-table (15) fontified t face font-lock-comment-face) 278 286 (fontified t face font-lock-comment-face) 286 287 (syntax-table (15) fontified t face font-lock-comment-face) 287 289 (fontified t face font-lock-comment-face) 289 292 (fontified t face font-lock-comment-face) 292 295 (fontified t face font-lock-comment-face) 295 296 (fontified t face font-lock-comment-face) 296 298 (fontified t face font-lock-comment-face) 298 299 (fontified t face font-lock-comment-face) 299 303 (fontified t face font-lock-comment-face) 303 304 (fontified t face font-lock-comment-face) 304 306 (fontified t face font-lock-comment-face) 306 309 (fontified t face font-lock-comment-face) 309 311 (fontified t face font-lock-comment-face) 311 313 (fontified t face font-lock-comment-face) 313 317 (fontified t face font-lock-comment-face) 317 318 (fontified t face font-lock-comment-face) 318 321 (fontified t face font-lock-comment-face) 321 322 (fontified t face font-lock-comment-face) 322 336 (fontified t face font-lock-comment-face) 336 337 (fontified t face font-lock-comment-delimiter-face) 337 345 (fontified t face font-lock-comment-delimiter-face) 345 347 (fontified t face font-lock-comment-delimiter-face) 347 352 (fontified t face font-lock-comment-delimiter-face) 352 355 (fontified t face font-lock-comment-face) 355 356 (fontified t face font-lock-comment-face) 356 363 (fontified t face font-lock-comment-face) 363 364 (fontified t face font-lock-comment-face) 364 368 (fontified t face font-lock-comment-face) 368 371 (fontified t face font-lock-comment-face) 371 375 (fontified t face font-lock-comment-face) 375 390 (fontified t face font-lock-comment-face) 390 392 (fontified t face font-lock-comment-face) 392 393 (fontified t face font-lock-comment-delimiter-face) 393 401 (fontified t face font-lock-comment-delimiter-face) 401 408 (fontified t face font-lock-comment-delimiter-face) 408 417 (fontified t face font-lock-comment-face) 417 418 (face font-lock-comment-face fontified t) 418 419 (syntax-table (15) face font-lock-comment-face fontified t) 419 423 (face font-lock-comment-face fontified t) 423 426 (face font-lock-comment-face fontified t) 426 428 (face font-lock-comment-face fontified t) 428 429 (syntax-table (15) face font-lock-comment-face fontified t) 429 431 (face font-lock-comment-face fontified t) 431 442 (face font-lock-comment-face fontified t) 442 445 (face font-lock-comment-face fontified t) 445 448 (face font-lock-comment-face fontified t) 448 455 (face font-lock-comment-face fontified t) 455 460 (face font-lock-comment-face fontified t) 460 461 (face font-lock-comment-face fontified t) 474 477 (face font-lock-keyword-face)) . -1102) (undo-tree-id1066 . -392) (undo-tree-id1067 . -104) (undo-tree-id1068 . -134) (undo-tree-id1069 . -1) (undo-tree-id1070 . -53) (undo-tree-id1071 . -53) (undo-tree-id1072 . -2) (undo-tree-id1073 . -2) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -21) (undo-tree-id1078 . -21) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (1016 . 1044) (862 . 1015) (#("      new_data2 = quota_map
      |> Enum.map(fn x ->
	x[:Quota] |> Map.new(fn {k,v} -> {k |> String.to_atom(),v}  end) end)

	IO.inspect(new_data2)
" 0 2 (fontified t) 2 6 (fontified t) 6 15 (fontified t face font-lock-variable-name-face) 15 27 (fontified t) 27 28 (fontified t) 28 37 (fontified t) 37 41 (fontified t face font-lock-type-face) 41 46 (fontified t) 46 48 (fontified t face font-lock-keyword-face) 48 53 (fontified t) 53 54 (fontified t) 54 55 (fontified t) 55 57 (fontified t) 57 63 (fontified t face elixir-atom-face) 63 68 (fontified t) 68 71 (fontified t face font-lock-type-face) 71 76 (fontified t) 76 78 (fontified t face font-lock-keyword-face) 78 94 (fontified t) 94 100 (fontified t face font-lock-type-face) 100 115 (fontified t) 115 118 (fontified t face font-lock-keyword-face) 118 120 (fontified t) 120 122 (fontified t face font-lock-keyword-face) 122 123 (rear-nonsticky t fontified t face font-lock-keyword-face) 123 124 (fontified t) 124 125 (fontified t) 125 126 (fontified t) 126 127 (fontified t) 127 129 (fontified t face font-lock-type-face) 129 137 (fontified t) 137 147 (fontified t) 147 148 (fontified t) 148 149 (rear-nonsticky t fontified t)) . -862) (undo-tree-id1081 . -2) (undo-tree-id1082 . -149) (undo-tree-id1083 . -149) (undo-tree-id1084 . -54) (undo-tree-id1085 . -125) (undo-tree-id1086 . -126) (undo-tree-id1087 . -126) (undo-tree-id1088 . -125) (undo-tree-id1089 . -125) (undo-tree-id1090 . -54) (undo-tree-id1091 . -54) (undo-tree-id1092 . -28) (undo-tree-id1093 . -28) (undo-tree-id1094 . -53) (undo-tree-id1095 . 95) (undo-tree-id1096 . -54) (undo-tree-id1097 . -54) (undo-tree-id1098 . -65) (undo-tree-id1099 . -65) (undo-tree-id1100 . -65) (undo-tree-id1101 . -65) (undo-tree-id1102 . -65) (565 . 836) (#("#      with [:ClientsQuota] <- quota_map |> Map.keys(),
#           {:ok, %ClientsQuota{} = clients_quota} <-
#             Creditos.create_clients_quota(
#               quota_map
#               |> Map.values()
#               |> hd
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 7 (fontified t face font-lock-comment-delimiter-face) 7 11 (fontified t face font-lock-comment-face) 11 13 (fontified t face font-lock-comment-face) 13 26 (fontified t face font-lock-comment-face) 26 44 (fontified t face font-lock-comment-face) 44 47 (fontified t face font-lock-comment-face) 47 56 (fontified t face font-lock-comment-face) 56 57 (fontified t face font-lock-comment-delimiter-face) 57 58 (fontified t face font-lock-comment-delimiter-face) 58 68 (fontified t face font-lock-comment-delimiter-face) 68 69 (fontified t face font-lock-comment-face) 69 72 (fontified t face font-lock-comment-face) 72 74 (fontified t face font-lock-comment-face) 74 87 (fontified t face font-lock-comment-face) 87 110 (fontified t face font-lock-comment-face) 110 111 (fontified t face font-lock-comment-delimiter-face) 111 113 (fontified t face font-lock-comment-delimiter-face) 113 124 (fontified t face font-lock-comment-delimiter-face) 124 132 (fontified t face font-lock-comment-face) 132 141 (fontified t face font-lock-comment-face) 141 146 (fontified t face font-lock-comment-face) 146 155 (fontified t face font-lock-comment-face) 155 156 (fontified t face font-lock-comment-delimiter-face) 156 171 (fontified t face font-lock-comment-delimiter-face) 171 181 (fontified t face font-lock-comment-face) 181 182 (fontified t face font-lock-comment-delimiter-face) 182 190 (fontified t face font-lock-comment-delimiter-face) 190 196 (fontified t face font-lock-comment-delimiter-face) 196 197 (fontified t face font-lock-comment-delimiter-face) 197 200 (fontified t face font-lock-comment-face) 200 201 (fontified t face font-lock-comment-face) 201 202 (fontified t face font-lock-comment-face) 202 203 (fontified t face font-lock-comment-face) 203 207 (fontified t face font-lock-comment-face) 207 212 (fontified t face font-lock-comment-face) 212 213 (fontified t face font-lock-comment-face) 213 214 (fontified t face font-lock-comment-delimiter-face) 214 216 (fontified t face font-lock-comment-delimiter-face) 216 219 (fontified t face font-lock-comment-delimiter-face) 219 220 (fontified t face font-lock-comment-delimiter-face) 220 229 (fontified t face font-lock-comment-delimiter-face) 229 235 (fontified t face font-lock-comment-face)) . -565) (undo-tree-id1103 . -56) (undo-tree-id1104 . -7) (undo-tree-id1105 . -110) (undo-tree-id1106 . -65) (undo-tree-id1107 . -181) (undo-tree-id1108 . -181) (undo-tree-id1109 . -56) (undo-tree-id1110 . -56) (undo-tree-id1111 . -155) (undo-tree-id1112 . -155) (undo-tree-id1113 . -213) (undo-tree-id1114 . -213) (undo-tree-id1115 . -110) (undo-tree-id1116 . -110) (undo-tree-id1117 . -235) (undo-tree-id1118 . -235) (508 . 533) (#("#    |> IO.inspect()
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 5 (fontified t face font-lock-comment-delimiter-face) 5 8 (fontified t face font-lock-comment-face) 8 10 (fontified t face font-lock-comment-face) 10 18 (fontified t face font-lock-comment-face) 18 19 (fontified t face font-lock-comment-face) 19 20 (fontified t face font-lock-comment-face) 20 21 (fontified t face font-lock-comment-face)) . -508) (undo-tree-id1119 . -21) (undo-tree-id1120 . -21) (#("  
" 0 2 (fontified t) 2 3 (fontified t)) . -402) (undo-tree-id1121 . -3) (undo-tree-id1122 . -3) (#("  
" 0 3 (fontified t)) . -183) (69 . 70) (#("  
  
" 0 2 (fontified t) 2 3 (fontified t) 3 6 (fontified t)) . -69) (t 25411 30768 839737 129000)) nil (25411 30843 160033 674000) 0 nil])
([nil nil ((1013 . 1014) (#("  " 0 2 (fontified nil)) . -1008) (1014 . 1015)) nil (25411 30843 159916 163000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -1028) (1028 . 1029) (#(")" 0 1 (fontified nil)) . -1028) (1028 . 1029) (1014 . 1029)) nil (25411 30843 159914 751000) 0 nil])
([nil nil ((#("new_data2 =" 0 9 (fontified t face font-lock-variable-name-face) 9 11 (fontified t)) . 868) (undo-tree-id1060 . -11)) nil (25411 30843 159912 847000) 0 nil])
([nil nil ((#("      IO.inspect(new_data2)" 0 6 (fontified t) 6 8 (fontified t face font-lock-type-face) 8 27 (fontified t)) . 1020) (undo-tree-id1059 . -27)) nil (25411 30843 159908 129000) 0 nil])
([nil nil ((928 . 935) (t 25411 30843 165888 521000)) nil (25411 30867 971239 387000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -512) (undo-tree-id1123 . -1) 513 (t 25411 30868 32201 880000)) nil (25411 30913 777826 530000) 0 nil])
([nil nil ((#("process_quota_map(quota_plan_list, loan_code_field)" 0 51 (fontified t)) . 2961) (undo-tree-id1129 . -51) (undo-tree-id1130 . -51) (undo-tree-id1131 . 1) (undo-tree-id1132 . -51) (undo-tree-id1133 . 34) (undo-tree-id1134 . -18) 3012 (t 25411 30913 797338 178000)) nil (25411 30959 146645 664000) 0 nil])
([nil nil ((3033 . 3037)) nil (25411 30959 146635 616000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3087 . 3088) (nil fontified nil 3037 . 3088) (3037 . 3088)) nil (25411 30959 146634 664000) 0 nil])
([nil nil ((#("+" 0 1 (fontified t)) . -2962) (undo-tree-id1127 . -1) (#("+" 0 1 (fontified t)) . -2963) (undo-tree-id1128 . -1) 2964) nil (25411 30959 146632 921000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2962) (#(" " 0 1 (fontified t)) . 2962) (#(" " 0 1 (fontified t)) . 2962) (#(" " 0 1 (fontified t)) . 2962) (#("
" 0 1 (fontified t)) . 2962) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1)) nil (25411 30959 146627 210000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2961) (#(" " 0 1 (fontified t)) . 2961) (#(" " 0 1 (fontified t)) . 2961)) nil (25411 30959 146608 226000) 0 nil])
([nil nil ((944 . 947) (#("	" 0 1 (fontified nil)) . 943) (undo-tree-id1135 . -1) (#("  " 0 2 (fontified nil)) . -944) (undo-tree-id1136 . -2) (943 . 947) (#("	" 0 1 (fontified nil)) . 942) (undo-tree-id1137 . -1) (#("  " 0 2 (fontified nil)) . -943) (undo-tree-id1138 . -2) (942 . 946) (#(" " 0 1 (fontified nil)) . 941) (undo-tree-id1139 . -1) (#("  " 0 2 (fontified nil)) . -922) (944 . 945) (t 25411 30959 186726 184000)) nil (25411 31035 133793 335000) 0 nil])
([nil nil ((946 . 947)) nil (25411 31035 133709 42000) 0 nil])
([nil nil ((#("]" 0 1 (fontified nil)) . -944) (944 . 945) (#("]" 0 1 (fontified nil)) . -944) (944 . 945) (941 . 945)) nil (25411 31035 133706 377000) 0 nil])
([nil nil ((944 . 957)) nil (25411 31035 133702 671000) 0 nil])
([nil nil ((958 . 962)) nil (25411 31035 133700 537000) 0 nil])
([nil nil ((962 . 963) (#(")" 0 1 (fontified nil face font-lock-keyword-face)) . -962) (962 . 963)) nil (25411 31035 133696 910000) 0 nil])
([nil nil ((973 . 975) (#(")" 0 1 (fontified nil)) . -973) (959 . 974)) nil (25411 31035 133687 293000) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -1051) (undo-tree-id1140 . -1) (#(">" 0 1 (fontified t)) . -1052) (undo-tree-id1141 . -1) (#(" " 0 1 (fontified t)) . -1053) (undo-tree-id1142 . -1) (#("I" 0 1 (fontified t face font-lock-type-face)) . -1054) (undo-tree-id1143 . -1) (#("O" 0 1 (fontified t face font-lock-type-face)) . -1055) (undo-tree-id1144 . -1) (#("." 0 1 (fontified t)) . -1056) (undo-tree-id1145 . -1) (#("i" 0 1 (fontified t)) . -1057) (undo-tree-id1146 . -1) (#("n" 0 1 (fontified t)) . -1058) (undo-tree-id1147 . -1) (#("s" 0 1 (fontified t)) . -1059) (undo-tree-id1148 . -1) (#("p" 0 1 (fontified t)) . -1060) (undo-tree-id1149 . -1) (#("e" 0 1 (fontified t)) . -1061) (undo-tree-id1150 . -1) (#("c" 0 1 (fontified t)) . -1062) (undo-tree-id1151 . -1) (#("t" 0 1 (fontified t)) . -1063) (undo-tree-id1152 . -1) (#("(" 0 1 (fontified t)) . -1064) (undo-tree-id1153 . -1) (#(")" 0 1 (fontified t)) . -1065) (undo-tree-id1154 . -1) (undo-tree-id1155 . 1) (undo-tree-id1156 . -1) 1066 (t 25411 31035 190683 867000)) nil (25411 31043 952002 81000) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -959) (undo-tree-id1195 . -1) (#(">" 0 1 (fontified t)) . -960) (undo-tree-id1196 . -1) (#(" " 0 1 (fontified t)) . -961) (undo-tree-id1197 . -1) (#("I" 0 1 (fontified t face font-lock-type-face)) . -962) (undo-tree-id1198 . -1) (#("O" 0 1 (fontified t face font-lock-type-face)) . -963) (undo-tree-id1199 . -1) (#("." 0 1 (fontified t)) . -964) (undo-tree-id1200 . -1) (#("i" 0 1 (fontified t)) . -965) (undo-tree-id1201 . -1) (#("n" 0 1 (fontified t)) . -966) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (#("s" 0 1 (fontified t)) . -967) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (#("p" 0 1 (fontified t)) . -968) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (#("e" 0 1 (fontified t)) . -969) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (#("c" 0 1 (fontified t)) . -970) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (#("t" 0 1 (fontified t)) . -971) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (#("(" 0 1 (fontified t)) . -972) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . 1) (undo-tree-id1223 . -1) (#(")" 0 1 (fontified t)) . -973) (undo-tree-id1224 . -1) (undo-tree-id1225 . 1) (undo-tree-id1226 . -1) (#(" " 0 1 (fontified t)) . -974) (undo-tree-id1227 . -1) 975 (t 25411 31043 982235 193000)) nil (25411 31081 671404 191000) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -939) (undo-tree-id1157 . -1) (#(">" 0 1 (fontified t)) . -940) (undo-tree-id1158 . -1) (#(" " 0 1 (fontified t)) . -941) (undo-tree-id1159 . -1) (#("x" 0 1 (fontified t)) . -942) (undo-tree-id1160 . -1) (#("[" 0 1 (fontified t)) . -943) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . 1) (undo-tree-id1164 . -1) (#(":" 0 1 (fontified t face elixir-atom-face)) . -944) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (#("C" 0 1 (fontified t face elixir-atom-face)) . -945) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (#("l" 0 1 (fontified t face elixir-atom-face)) . -946) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (#("i" 0 1 (fontified t face elixir-atom-face)) . -947) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (#("e" 0 1 (fontified t face elixir-atom-face)) . -948) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (#("n" 0 1 (fontified t face elixir-atom-face)) . -949) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (#("t" 0 1 (fontified t face elixir-atom-face)) . -950) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (#("s" 0 1 (fontified t face elixir-atom-face)) . -951) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (#("Q" 0 1 (fontified t face elixir-atom-face)) . -952) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (#("u" 0 1 (fontified t face elixir-atom-face)) . -953) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (#("o" 0 1 (fontified t face elixir-atom-face)) . -954) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (#("t" 0 1 (fontified t face elixir-atom-face)) . -955) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (#("a" 0 1 (fontified t face elixir-atom-face)) . -956) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (#("]" 0 1 (fontified t)) . -957) (undo-tree-id1191 . -1) (undo-tree-id1192 . 1) (undo-tree-id1193 . -1) (#(" " 0 1 (fontified t)) . -958) (undo-tree-id1194 . -1) 959) nil (25411 31081 671333 473000) 0 nil])
([nil nil ((943 . 945)) nil (25411 31081 671250 442000) 0 nil])
([nil nil ((959 . 960) (#(")" 0 1 (fontified nil)) . -959) (945 . 960)) nil (25411 31081 671242 36000) 0 nil])
([nil nil ((1025 . 1026) (t 25411 31081 732340 730000)) nil (25411 31093 27178 879000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -902) (undo-tree-id1228 . -1) (#("a" 0 1 (fontified t)) . -903) (undo-tree-id1229 . -1) (#("p" 0 1 (fontified t)) . -904) (undo-tree-id1230 . -1) 905 (t 25411 31093 87779 615000)) nil (25411 31527 294228 517000) 0 nil])
([nil nil ((902 . 908)) nil (25411 31527 294158 24000) 0 nil])
([nil nil ((#("      
        quota_map
        |> Enum.filter(fn x ->
        x[:ClientsQuota] end)
	|> IO.inspect()
" 0 6 (fontified t) 6 7 (fontified t) 7 25 (fontified t) 25 29 (fontified t) 29 36 (fontified t) 36 40 (fontified t face font-lock-type-face) 40 48 (fontified t) 48 50 (fontified t face font-lock-keyword-face) 50 56 (fontified t) 56 66 (fontified t) 66 79 (fontified t face elixir-atom-face) 79 81 (fontified t) 81 84 (fontified t face font-lock-keyword-face) 84 85 (fontified t) 85 86 (fontified t) 86 90 (fontified t) 90 92 (fontified t face font-lock-type-face) 92 100 (fontified t) 100 101 (fontified t) 101 102 (fontified t) 102 103 (fontified t)) . -861) (undo-tree-id1288 . -103) (undo-tree-id1289 . -103) (undo-tree-id1290 . -56) (undo-tree-id1291 . -56) (undo-tree-id1292 . -7) (undo-tree-id1293 . -7) (undo-tree-id1294 . -25) (undo-tree-id1295 . -25) (undo-tree-id1296 . -103) (undo-tree-id1297 . -103) (undo-tree-id1298 . -86) (undo-tree-id1299 . -86) (undo-tree-id1300 . -103) 964 (t 25411 31527 330495 399000)) nil (25411 31926 992787 327000) 0 nil])
([nil nil ((#("
	 # Map.new(fn {k, v} -> {k |> String.to_atom(), v} end)
     # end)
	
" 0 1 (fontified t) 1 3 (fontified t) 3 5 (fontified t face font-lock-comment-delimiter-face) 5 8 (fontified t face font-lock-comment-face) 8 13 (fontified t face font-lock-comment-face) 13 15 (fontified t face font-lock-comment-face) 15 32 (fontified t face font-lock-comment-face) 32 38 (fontified t face font-lock-comment-face) 38 53 (fontified t face font-lock-comment-face) 53 56 (fontified t face font-lock-comment-face) 56 57 (fontified t face font-lock-comment-face) 57 58 (fontified t face font-lock-comment-face) 58 63 (fontified t) 63 65 (fontified t face font-lock-comment-delimiter-face) 65 68 (fontified t face font-lock-comment-face) 68 69 (fontified t face font-lock-comment-face) 69 70 (fontified t face font-lock-comment-face) 70 71 (fontified t) 71 72 (fontified t)) . -862) (undo-tree-id1281 . -70) (undo-tree-id1282 . -70) (undo-tree-id1283 . -72) (undo-tree-id1284 . -72) (undo-tree-id1285 . -72) (undo-tree-id1286 . -72) (undo-tree-id1287 . -72) 934) nil (25411 31926 992764 354000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 861) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1)) nil (25411 31926 992751 360000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 861) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1)) nil (25411 31926 992740 540000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 861) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1)) nil (25411 31926 992732 275000) 0 nil])
([nil nil ((#("
      with [:ClientsQuota] <- quota_map |> Map.keys() do
        # 	       quota_map
        #               |> Map.values()
        #               |> hd#
        # 	       |> Creditos.create_clients_quota(

        # |> Enum.into(%{})
        # |> IO.inspect()
        #             ) 
" 0 1 (fontified t) 1 5 (fontified t) 5 7 (fontified t) 7 11 (fontified t face font-lock-keyword-face) 11 13 (fontified t) 13 26 (fontified t face elixir-atom-face) 26 44 (fontified t) 44 47 (fontified t face font-lock-type-face) 47 55 (fontified t) 55 57 (fontified t face font-lock-keyword-face) 57 58 (fontified t) 58 66 (fontified t) 66 68 (fontified t face font-lock-comment-delimiter-face) 68 86 (fontified t face font-lock-comment-face) 86 94 (fontified t) 94 110 (fontified t face font-lock-comment-delimiter-face) 110 126 (fontified t face font-lock-comment-face) 126 134 (fontified t) 134 150 (fontified t face font-lock-comment-delimiter-face) 150 157 (fontified t face font-lock-comment-face) 157 165 (fontified t) 165 167 (fontified t face font-lock-comment-delimiter-face) 167 209 (fontified t face font-lock-comment-face) 209 218 (fontified t) 218 220 (fontified t face font-lock-comment-delimiter-face) 220 238 (fontified t face font-lock-comment-face) 238 246 (fontified t) 246 248 (fontified t face font-lock-comment-delimiter-face) 248 264 (fontified t face font-lock-comment-face) 264 272 (fontified t) 272 286 (fontified t face font-lock-comment-delimiter-face) 286 289 (fontified t face font-lock-comment-face)) . -861) (undo-tree-id1238 . -58) (undo-tree-id1239 . -58) (undo-tree-id1240 . -58) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -126) (undo-tree-id1244 . -126) (undo-tree-id1245 . -157) (undo-tree-id1246 . -157) (undo-tree-id1247 . -58) (undo-tree-id1248 . -58) (undo-tree-id1249 . -289) (undo-tree-id1250 . -289) (undo-tree-id1251 . -289) (undo-tree-id1252 . -209) (undo-tree-id1253 . -209) (undo-tree-id1254 . -58) (undo-tree-id1255 . -58) (undo-tree-id1256 . -210) (undo-tree-id1257 . -210) (undo-tree-id1258 . -238) (undo-tree-id1259 . -238) (undo-tree-id1260 . -58) (undo-tree-id1261 . -264) (undo-tree-id1262 . -264) (undo-tree-id1263 . -289) (undo-tree-id1264 . -86) (undo-tree-id1265 . -86) (undo-tree-id1266 . -289) (undo-tree-id1267 . -289) 1150) nil (25411 31926 992720 453000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -570) (undo-tree-id1237 . -1) 571) nil (25411 31926 992671 953000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -631) (undo-tree-id1236 . -1) 632) nil (25411 31926 992667 655000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -690) (undo-tree-id1235 . -1) 691) nil (25411 31926 992663 427000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -740) (undo-tree-id1234 . -1) 741) nil (25411 31926 992656 264000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -771) (undo-tree-id1233 . -1) 772) nil (25411 31926 992651 826000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -808) (undo-tree-id1232 . -1) 809) nil (25411 31926 992646 5000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -835) (undo-tree-id1231 . -1) 836) nil (25411 31926 992635 525000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -512) (undo-tree-id1304 . -1) (#(" " 0 1 (fontified t)) . -513) (undo-tree-id1305 . -1) (#(" " 0 1 (fontified t)) . -514) (undo-tree-id1306 . -1) (#(" " 0 1 (fontified t)) . -515) (undo-tree-id1307 . -1) (#("|" 0 1 (fontified t)) . -516) (undo-tree-id1308 . -1) (#(">" 0 1 (fontified t)) . -517) (undo-tree-id1309 . -1) (#(" " 0 1 (fontified t)) . -518) (undo-tree-id1310 . -1) (#("I" 0 1 (fontified t face font-lock-type-face)) . -519) (undo-tree-id1311 . -1) (#("O" 0 1 (fontified t face font-lock-type-face)) . -520) (undo-tree-id1312 . -1) (#("." 0 1 (fontified t)) . -521) (undo-tree-id1313 . -1) (#("i" 0 1 (fontified t)) . -522) (undo-tree-id1314 . -1) (#("n" 0 1 (fontified t)) . -523) (undo-tree-id1315 . -1) (#("s" 0 1 (fontified t)) . -524) (undo-tree-id1316 . -1) (#("p" 0 1 (fontified t)) . -525) (undo-tree-id1317 . -1) (#("e" 0 1 (fontified t)) . -526) (undo-tree-id1318 . -1) (#("c" 0 1 (fontified t)) . -527) (undo-tree-id1319 . -1) (#("t" 0 1 (fontified t)) . -528) (undo-tree-id1320 . -1) (#("(" 0 1 (fontified t)) . -529) (undo-tree-id1321 . -1) (#(")" 0 1 (fontified t)) . -530) (undo-tree-id1322 . -1) (undo-tree-id1323 . 1) (undo-tree-id1324 . -1) 531 (t 25411 31927 13722 287000)) nil (25411 31945 80737 458000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 512) (#(" " 0 1 (fontified t)) . 512) (#(" " 0 1 (fontified t)) . 512) (#(" " 0 1 (fontified t)) . 512) (#("
" 0 1 (fontified t)) . 512) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1)) nil (25411 31945 80685 622000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 838) (t 25411 31945 113464 432000)) nil (25411 35157 990579 810000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 857)) nil (25411 35157 990576 804000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 897)) nil (25411 35157 990574 79000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 991)) nil (25411 35157 990570 722000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 1054)) nil (25411 35157 990562 496000) 0 nil])
([nil nil ((830 . 831) (t 25411 35158 23491 749000)) nil (25411 35529 161284 676000) 0 nil])
([nil nil ((850 . 851)) nil (25411 35529 161283 925000) 0 nil])
([nil nil ((891 . 892)) nil (25411 35529 161283 284000) 0 nil])
([nil nil ((987 . 988)) nil (25411 35529 161282 702000) 0 nil])
([nil nil ((1051 . 1052)) nil (25411 35529 161282 131000) 0 nil])
([nil nil ((830 . 835) (#("		   " 0 5 (fontified t)) . 829) (undo-tree-id1327 . -5) (828 . 835)) nil (25411 35529 161281 79000) 0 nil])
([nil nil ((835 . 840)) nil (25411 35529 161279 436000) 0 nil])
([nil nil ((835 . 843)) nil (25411 35529 161278 755000) 0 nil])
([nil nil ((835 . 847)) nil (25411 35529 161277 883000) 0 nil])
([nil nil ((#("clients_quota" 0 13 (fontified t)) . 847) (undo-tree-id1325 . -13) (undo-tree-id1326 . -13) 860) nil (25411 35529 161276 180000) 0 nil])
([nil nil ((nil rear-nonsticky nil 858 . 859) (nil fontified nil 846 . 859) (846 . 859)) nil (25411 35529 161262 774000) 0 nil])
([nil nil ((859 . 867) (t 25411 35529 178982 744000)) nil (25411 35574 31612 677000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -866) (undo-tree-id1328 . -1) 867) nil (25411 35574 31609 401000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -874) (874 . 875) (#(")" 0 1 (fontified nil)) . -874) (874 . 875) (866 . 875)) nil (25411 35574 31590 215000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -874) (undo-tree-id1360 . -1) (undo-tree-id1361 . 1) (undo-tree-id1362 . -1) 875 (t 25411 35574 68526 887000)) nil (25411 35642 266436 845000) 0 nil])
([nil nil ((#("(" 0 1 (fontified nil)) . -873) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (#(")" 0 1 (fontified t)) . 874) (undo-tree-id1359 . -1)) nil (25411 35642 266426 505000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -859) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (#("|" 0 1 (fontified t)) . -860) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (#(">" 0 1 (fontified t)) . -861) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (#(" " 0 1 (fontified t)) . -862) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (#("M" 0 1 (fontified t face font-lock-type-face)) . -863) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (#("a" 0 1 (fontified t face font-lock-type-face)) . -864) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (#("p" 0 1 (fontified t face font-lock-type-face)) . -865) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (#("." 0 1 (fontified t)) . -866) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (#("v" 0 1 (fontified t)) . -867) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (#("a" 0 1 (fontified t)) . -868) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (#("l" 0 1 (fontified t)) . -869) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (#("u" 0 1 (fontified t)) . -870) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (#("e" 0 1 (fontified t)) . -871) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (#("s" 0 1 (fontified t)) . -872) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) 873) nil (25411 35642 266411 416000) 0 nil])
([nil nil ((859 . 860) (#(")" 0 1 (fontified nil)) . -859) (859 . 860)) nil (25411 35642 266304 533000) 0 nil])
([nil nil ((403 . 405) (#("  " 0 2 (fontified t)) . 402) (undo-tree-id1408 . -2) (402 . 405) (#("  " 0 2 (fontified nil)) . 401) (401 . 403) (401 . 402) (t 25411 35642 302776 349000)) nil (25411 36547 486768 495000) 0 nil])
([nil nil ((403 . 405) (#("  " 0 2 (fontified nil)) . 402) (402 . 404) (402 . 403)) nil (25411 36547 486766 211000) 0 nil])
([nil nil ((405 . 422)) nil (25411 36547 486765 199000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t face font-lock-function-name-face)) . -420) (undo-tree-id1406 . -1) (#("r" 0 1 (fontified t face font-lock-function-name-face)) . -421) (undo-tree-id1407 . -1) 422) nil (25411 36547 486764 187000) 0 nil])
([nil nil ((420 . 422)) nil (25411 36547 486762 254000) 0 nil])
([nil nil ((422 . 426)) nil (25411 36547 486761 603000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t face font-lock-function-name-face)) . -409) (undo-tree-id1389 . -1) (#("u" 0 1 (fontified t face font-lock-function-name-face)) . -410) (undo-tree-id1390 . -1) (#("l" 0 1 (fontified t face font-lock-function-name-face)) . -411) (undo-tree-id1391 . -1) (#("t" 0 1 (fontified t face font-lock-function-name-face)) . -412) (undo-tree-id1392 . -1) (#("i" 0 1 (fontified t face font-lock-function-name-face)) . -413) (undo-tree-id1393 . -1) (#("_" 0 1 (fontified t face font-lock-function-name-face)) . -414) (undo-tree-id1394 . -1) (#("r" 0 1 (fontified t face font-lock-function-name-face)) . -415) (undo-tree-id1395 . -1) (#("e" 0 1 (fontified t face font-lock-function-name-face)) . -416) (undo-tree-id1396 . -1) (#("n" 0 1 (fontified t face font-lock-function-name-face)) . -417) (undo-tree-id1397 . -1) (#("d" 0 1 (fontified t face font-lock-function-name-face)) . -418) (undo-tree-id1398 . -1) (#("e" 0 1 (fontified t face font-lock-function-name-face)) . -419) (undo-tree-id1399 . -1) (#("r" 0 1 (fontified t face font-lock-function-name-face)) . -420) (undo-tree-id1400 . -1) (#("_" 0 1 (fontified t face font-lock-function-name-face)) . -421) (undo-tree-id1401 . -1) (#("c" 0 1 (fontified t face font-lock-function-name-face)) . -422) (undo-tree-id1402 . -1) (#("a" 0 1 (fontified t face font-lock-function-name-face)) . -423) (undo-tree-id1403 . -1) (#("l" 0 1 (fontified t face font-lock-function-name-face)) . -424) (undo-tree-id1404 . -1) (#("l" 0 1 (fontified t face font-lock-function-name-face)) . -425) (undo-tree-id1405 . -1) 426) nil (25411 36547 486757 725000) 0 nil])
([nil nil ((409 . 428)) nil (25411 36547 486744 661000) 0 nil])
([nil nil ((428 . 430)) nil (25411 36547 486744 20000) 0 nil])
([nil nil ((430 . 435)) nil (25411 36547 486743 379000) 0 nil])
([nil nil ((435 . 438)) nil (25411 36547 486742 818000) 0 nil])
([nil nil ((430 . 435)) nil (25411 36547 486742 177000) 0 nil])
([nil nil ((427 . 428)) nil (25411 36547 486741 556000) 0 nil])
([nil nil ((431 . 436)) nil (25411 36547 486740 904000) 0 nil])
([nil nil ((436 . 438)) nil (25411 36547 486740 353000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -437) (undo-tree-id1388 . -1) 438) nil (25411 36547 486739 301000) 0 nil])
([nil nil ((437 . 442)) nil (25411 36547 486737 979000) 0 nil])
([nil nil ((442 . 447)) nil (25411 36547 486737 328000) 0 nil])
([nil nil ((447 . 454)) nil (25411 36547 486736 727000) 0 nil])
([nil nil ((453 . 456)) nil (25411 36547 486736 75000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -449) (undo-tree-id1378 . -1) (#("e" 0 1 (fontified t)) . -450) (undo-tree-id1379 . -1) (#("w" 0 1 (fontified t)) . -451) (undo-tree-id1380 . -1) (#("(" 0 1 (fontified t)) . -452) (undo-tree-id1381 . -1) (#("f" 0 1 (fontified t)) . -453) (undo-tree-id1382 . -1) (#("n" 0 1 (fontified t face font-lock-keyword-face)) . -454) (undo-tree-id1383 . -1) (#(" " 0 1 (fontified t)) . -455) (undo-tree-id1384 . -1) (#(")" 0 1 (fontified t)) . -456) (undo-tree-id1385 . -1) (undo-tree-id1386 . 1) (undo-tree-id1387 . -1) 457) nil (25411 36547 486734 362000) 0 nil])
([nil nil ((449 . 456)) nil (25411 36547 486724 594000) 0 nil])
([nil nil ((#("process_concept_quota_map(quota_concept_list, loan_code_field)" 0 56 (fontified t) 56 62 (fontified t)) . 2578) (undo-tree-id1371 . -62) (undo-tree-id1372 . -62) (undo-tree-id1373 . 1) (undo-tree-id1374 . -62) (undo-tree-id1375 . 37) (undo-tree-id1376 . -26) (undo-tree-id1377 . -62) 2640) nil (25411 36547 486723 212000) 0 nil])
([nil nil ((2633 . 2637)) nil (25411 36547 486717 762000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2698 . 2699) (nil fontified nil 2693 . 2699) (nil fontified nil 2637 . 2693) (2637 . 2699)) nil (25411 36547 486716 600000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2578) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (#("+" 0 1 (fontified t)) . -2579) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (#("+" 0 1 (fontified t)) . -2580) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (#(" " 0 1 (fontified t)) . -2581) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) 2582) nil (25411 36547 486711 871000) 0 nil])
([nil nil ((#("		   IO.inspect(clients_quota)" 0 5 (fontified t) 5 7 (fontified t face font-lock-type-face) 7 15 (fontified t) 15 16 (fontified t) 16 28 (fontified t) 28 29 (rear-nonsticky t fontified t) 29 30 (fontified t)) . 901) (undo-tree-id1423 . -29) (undo-tree-id1424 . -16) (t 25411 36547 493538 67000)) nil (25411 36609 940504 744000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 901) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1)) nil (25411 36609 940495 807000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 901) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1)) nil (25411 36609 940486 510000) 0 nil])
([nil nil ((1426 . 1427)) nil (25411 36609 940456 905000) 0 nil])
([nil nil ((1440 . 1441)) nil (25411 36609 940454 861000) 0 nil])
([nil nil ((1473 . 1474)) nil (25411 36609 940452 888000) 0 nil])
([nil nil ((1552 . 1553)) nil (25411 36609 940450 33000) 0 nil])
([nil nil ((1594 . 1595)) nil (25411 36609 940443 210000) 0 nil])
([nil nil ((#("           with [:ClientsQuota] <- quota_map |> Map.keys(),
                 {:ok, %ClientsQuota{} = clients_quota} <-
                   Creditos.create_clients_quota(
                     quota_map
                     |> Map.values()
                     |> hd
                   ) do

#              conn
#                |> put_status(:created)
#                |> put_resp_header(\"location\", Routes.quota_path(conn, :show, clients_quota))
 #                      |> put_view(CabbotWeb.ClientsQuotaView)
 #                      |> render(\"show.json\", clients_quota: clients_quota)
      end
" 0 5 (fontified t) 5 11 (fontified t) 11 15 (fontified t face font-lock-keyword-face) 15 17 (fontified t) 17 30 (fontified t face elixir-atom-face) 30 48 (fontified t) 48 51 (fontified t face font-lock-type-face) 51 60 (fontified t) 60 66 (fontified t) 66 77 (fontified t) 77 78 (fontified t) 78 81 (fontified t face elixir-atom-face) 81 83 (fontified t) 83 96 (fontified t face font-lock-type-face) 96 119 (fontified t) 119 125 (fontified t) 125 138 (fontified t) 138 146 (fontified t face font-lock-type-face) 146 169 (fontified t) 169 175 (fontified t) 175 190 (fontified t) 190 200 (fontified t) 200 206 (fontified t) 206 221 (fontified t) 221 224 (fontified t) 224 227 (fontified t face font-lock-type-face) 227 237 (fontified t) 237 243 (fontified t) 243 258 (fontified t) 258 264 (fontified t) 264 270 (fontified t) 270 272 (fontified t) 272 277 (fontified t) 277 280 (fontified t) 280 283 (fontified t) 283 285 (fontified t) 285 287 (fontified t face font-lock-keyword-face) 287 288 (fontified t) 288 289 (fontified t) 289 290 (fontified t face font-lock-comment-delimiter-face) 290 298 (fontified t face font-lock-comment-delimiter-face) 298 304 (fontified t face font-lock-comment-delimiter-face) 304 309 (fontified t face font-lock-comment-face) 309 310 (fontified t face font-lock-comment-delimiter-face) 310 313 (fontified t face font-lock-comment-delimiter-face) 313 318 (fontified t face font-lock-comment-delimiter-face) 318 321 (fontified t face font-lock-comment-delimiter-face) 321 326 (fontified t face font-lock-comment-delimiter-face) 326 340 (fontified t face font-lock-comment-face) 340 348 (fontified t face font-lock-comment-face) 348 350 (fontified t face font-lock-comment-face) 350 351 (fontified t face font-lock-comment-delimiter-face) 351 359 (fontified t face font-lock-comment-delimiter-face) 359 367 (fontified t face font-lock-comment-delimiter-face) 367 378 (fontified t face font-lock-comment-face) 378 382 (fontified t face font-lock-comment-face) 382 386 (fontified t face font-lock-comment-face) 386 387 (syntax-table (15) fontified t face font-lock-comment-face) 387 395 (fontified t face font-lock-comment-face) 395 396 (syntax-table (15) fontified t face font-lock-comment-face) 396 398 (fontified t face font-lock-comment-face) 398 404 (fontified t face font-lock-comment-face) 404 411 (fontified t face font-lock-comment-face) 411 422 (fontified t face font-lock-comment-face) 422 426 (fontified t face font-lock-comment-face) 426 427 (fontified t face font-lock-comment-face) 427 445 (fontified t face font-lock-comment-face) 445 446 (fontified t) 446 454 (fontified t face font-lock-comment-delimiter-face) 454 469 (fontified t face font-lock-comment-delimiter-face) 469 470 (fontified t face font-lock-comment-face) 470 471 (fontified t face font-lock-comment-face) 471 481 (fontified t face font-lock-comment-face) 481 482 (fontified t face font-lock-comment-face) 482 484 (fontified t face font-lock-comment-face) 484 496 (fontified t face font-lock-comment-face) 496 498 (fontified t face font-lock-comment-face) 498 499 (fontified t face font-lock-comment-face) 499 500 (fontified t face font-lock-comment-face) 500 501 (fontified t face font-lock-comment-face) 501 507 (fontified t face font-lock-comment-face) 507 509 (fontified t face font-lock-comment-face) 509 510 (fontified t) 510 518 (fontified t face font-lock-comment-delimiter-face) 518 533 (fontified t face font-lock-comment-delimiter-face) 533 543 (fontified t face font-lock-comment-face) 543 544 (syntax-table (15) fontified t face font-lock-comment-face) 544 553 (fontified t face font-lock-comment-face) 553 554 (syntax-table (15) fontified t face font-lock-comment-face) 554 556 (fontified t face font-lock-comment-face) 556 558 (fontified t face font-lock-comment-face) 558 570 (fontified t face font-lock-comment-face) 570 586 (fontified t face font-lock-comment-face) 586 592 (fontified t) 592 595 (fontified t face font-lock-keyword-face) 595 596 (fontified t)) . 612) (undo-tree-id1428 . -289) (undo-tree-id1429 . -289) (undo-tree-id1430 . -309) (undo-tree-id1431 . -309) (undo-tree-id1432 . -596) (undo-tree-id1433 . -350) (undo-tree-id1434 . -350) (undo-tree-id1435 . -445) (undo-tree-id1436 . -445) (undo-tree-id1437 . -509) (undo-tree-id1438 . -509) (undo-tree-id1439 . -586) (undo-tree-id1440 . -586) (undo-tree-id1441 . -289) (undo-tree-id1442 . -596) (undo-tree-id1443 . -289) (undo-tree-id1444 . -264) (undo-tree-id1445 . -264) (undo-tree-id1446 . -289) (undo-tree-id1447 . -596) (undo-tree-id1448 . -596) (undo-tree-id1449 . -289) (undo-tree-id1450 . -289) (undo-tree-id1451 . -289) (undo-tree-id1452 . -200) (undo-tree-id1453 . -200) (undo-tree-id1454 . -237) (undo-tree-id1455 . -237) (undo-tree-id1456 . -288) (undo-tree-id1457 . -288) (undo-tree-id1458 . -289) (undo-tree-id1459 . -289) (undo-tree-id1460 . -60) (undo-tree-id1461 . -60) (undo-tree-id1462 . -119) (undo-tree-id1463 . -119) (undo-tree-id1464 . -596) 1208 (t 25411 36609 964268 884000)) nil (25411 36670 230019 413000) 0 nil])
([nil nil ((1128 . 1134) (#("	     " 0 6 (fontified t)) . 1127) (undo-tree-id1425 . -6) (1127 . 1134) (#("	     " 0 6 (fontified t)) . 1126) (undo-tree-id1426 . -6) (1126 . 1133) (#("	     " 0 6 (fontified t)) . 1125) (undo-tree-id1427 . -6) (1125 . 1132) (1117 . 1121) (#("      " 0 6 (fontified nil)) . 1117) (1126 . 1127)) nil (25411 36670 229955 966000) 0 nil])
([nil nil ((1127 . 1133) (#("	     " 0 6 (fontified nil)) . 1126) (1126 . 1132) (1126 . 1127)) nil (25411 36670 229932 192000) 0 nil])
([nil nil ((1126 . 1132) (#("	     " 0 6 (fontified nil)) . 1125) (1125 . 1131) (1125 . 1126)) nil (25411 36670 229926 431000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1727 . 1728) (nil fontified nil 1727 . 1728) (nil fontified nil 1724 . 1727) (nil fontified nil 1718 . 1724) (nil fontified nil 1702 . 1718) (nil fontified nil 1690 . 1702) (nil fontified nil 1688 . 1690) (nil fontified nil 1686 . 1688) (nil fontified nil 1685 . 1686) (nil fontified nil 1676 . 1685) (nil fontified nil 1675 . 1676) (nil fontified nil 1665 . 1675) (nil fontified nil 1650 . 1665) (nil fontified nil 1642 . 1650) (nil fontified nil 1641 . 1642) (nil fontified nil 1639 . 1641) (nil fontified nil 1633 . 1639) (nil fontified nil 1632 . 1633) (nil fontified nil 1631 . 1632) (nil fontified nil 1630 . 1631) (nil fontified nil 1628 . 1630) (nil fontified nil 1616 . 1628) (nil fontified nil 1614 . 1616) (nil fontified nil 1613 . 1614) (nil fontified nil 1603 . 1613) (nil fontified nil 1602 . 1603) (nil fontified nil 1601 . 1602) (nil fontified nil 1586 . 1601) (nil fontified nil 1578 . 1586) (nil fontified nil 1577 . 1578) (nil fontified nil 1559 . 1577) (nil fontified nil 1558 . 1559) (nil fontified nil 1554 . 1558) (nil fontified nil 1543 . 1554) (nil fontified nil 1536 . 1543) (nil fontified nil 1530 . 1536) (nil fontified nil 1528 . 1530) (nil fontified nil 1527 . 1528) (nil fontified nil 1519 . 1527) (nil fontified nil 1518 . 1519) (nil fontified nil 1514 . 1518) (nil fontified nil 1510 . 1514) (nil fontified nil 1499 . 1510) (nil fontified nil 1491 . 1499) (nil fontified nil 1483 . 1491) (nil fontified nil 1482 . 1483) (nil fontified nil 1480 . 1482) (nil fontified nil 1472 . 1480) (nil fontified nil 1458 . 1472) (nil fontified nil 1453 . 1458) (nil fontified nil 1450 . 1453) (nil fontified nil 1445 . 1450) (nil fontified nil 1442 . 1445) (nil fontified nil 1441 . 1442) (nil fontified nil 1436 . 1441) (nil fontified nil 1430 . 1436) (nil fontified nil 1422 . 1430) (nil fontified nil 1421 . 1422) (nil fontified nil 1420 . 1421) (nil fontified nil 1419 . 1420) (nil fontified nil 1417 . 1419) (nil fontified nil 1415 . 1417) (nil fontified nil 1412 . 1415) (nil fontified nil 1409 . 1412) (nil fontified nil 1404 . 1409) (nil fontified nil 1402 . 1404) (nil fontified nil 1396 . 1402) (nil fontified nil 1390 . 1396) (nil fontified nil 1375 . 1390) (nil fontified nil 1369 . 1375) (nil fontified nil 1359 . 1369) (nil fontified nil 1356 . 1359) (nil fontified nil 1353 . 1356) (nil fontified nil 1338 . 1353) (nil fontified nil 1332 . 1338) (nil fontified nil 1322 . 1332) (nil fontified nil 1307 . 1322) (nil fontified nil 1301 . 1307) (nil fontified nil 1278 . 1301) (nil fontified nil 1270 . 1278) (nil fontified nil 1257 . 1270) (nil fontified nil 1251 . 1257) (nil fontified nil 1228 . 1251) (nil fontified nil 1215 . 1228) (nil fontified nil 1213 . 1215) (nil fontified nil 1210 . 1213) (nil fontified nil 1209 . 1210) (nil fontified nil 1198 . 1209) (nil fontified nil 1192 . 1198) (nil fontified nil 1183 . 1192) (nil fontified nil 1180 . 1183) (nil fontified nil 1162 . 1180) (nil fontified nil 1149 . 1162) (nil fontified nil 1147 . 1149) (nil fontified nil 1143 . 1147) (nil fontified nil 1137 . 1143) (nil fontified nil 1132 . 1137) (1132 . 1728)) nil (25411 36670 229906 805000) 0 nil])
([nil nil ((829 . 836) (t 25411 36670 291269 970000)) nil (25411 36736 214595 319000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -849) (849 . 850) (#(")" 0 1 (fontified nil)) . -849) (849 . 850) (836 . 850)) nil (25411 36736 214585 320000) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -836) (undo-tree-id1465 . -1) (#(">" 0 1 (fontified t)) . -837) (undo-tree-id1466 . -1) 838 (t 25411 36736 234403 386000)) nil (25411 36758 510021 266000) 0 nil])
([nil nil ((847 . 852)) nil (25411 36758 510005 246000) 0 nil])
([nil nil ((578 . 583) (t 25411 36758 518158 827000)) nil (25411 36934 352707 309000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -597) (597 . 598) (#(")" 0 1 (fontified nil)) . -597) (597 . 598) (583 . 598)) nil (25411 36934 352697 570000) 0 nil])
([nil nil ((6691 . 6696) (t 25411 36934 376951 160000)) nil (25411 37223 307997 904000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -6710) (6710 . 6711) (#(")" 0 1 (fontified nil)) . -6710) (6710 . 6711) (6696 . 6711)) nil (25411 37223 307988 486000) 0 nil])
([nil nil ((#("I" 0 1 (fontified t face font-lock-type-face)) . -6699) (undo-tree-id1467 . -1) (#("O" 0 1 (fontified t face font-lock-type-face)) . -6700) (undo-tree-id1468 . -1) (#("." 0 1 (fontified t)) . -6701) (undo-tree-id1469 . -1) (#("i" 0 1 (fontified t)) . -6702) (undo-tree-id1470 . -1) (#("n" 0 1 (fontified t)) . -6703) (undo-tree-id1471 . -1) (#("s" 0 1 (fontified t)) . -6704) (undo-tree-id1472 . -1) (#("p" 0 1 (fontified t)) . -6705) (undo-tree-id1473 . -1) (#("e" 0 1 (fontified t)) . -6706) (undo-tree-id1474 . -1) (#("c" 0 1 (fontified t)) . -6707) (undo-tree-id1475 . -1) (#("t" 0 1 (fontified t)) . -6708) (undo-tree-id1476 . -1) (#("(" 0 1 (fontified t)) . -6709) (undo-tree-id1477 . -1) (#(")" 0 1 (fontified t)) . -6710) (undo-tree-id1478 . -1) (undo-tree-id1479 . 1) (undo-tree-id1480 . -1) 6711 (t 25411 37223 345021 700000)) nil (25411 37642 915233 865000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6747 . 6748) (nil fontified nil 6699 . 6748) (6699 . 6748)) nil (25411 37642 915213 556000) 0 nil])
([nil nil ((6748 . 6753)) nil (25411 37642 915212 224000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -6767) (6767 . 6768) (#(")" 0 1 (fontified nil)) . -6767) (6767 . 6768) (6753 . 6768)) nil (25411 37642 915207 475000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t face font-lock-function-name-face)) . 409) (#("l" 0 1 (fontified t face font-lock-function-name-face)) . 409) (#("a" 0 1 (fontified t face font-lock-function-name-face)) . 409) (#("c" 0 1 (fontified t face font-lock-function-name-face)) . 409) (t 25411 37888 586097 68000)) nil (25411 41209 102337 279000) 0 nil])
([nil nil ((409 . 414)) nil (25411 41209 102333 452000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face font-lock-function-name-face)) . -409) (undo-tree-id1490 . -1) (#("t" 0 1 (fontified t face font-lock-function-name-face)) . -410) (undo-tree-id1491 . -1) (#("a" 0 1 (fontified t face font-lock-function-name-face)) . -411) (undo-tree-id1492 . -1) (#("c" 0 1 (fontified t face font-lock-function-name-face)) . -412) (undo-tree-id1493 . -1) (#("k" 0 1 (fontified t face font-lock-function-name-face)) . -413) (undo-tree-id1494 . -1) (#("_" 0 1 (fontified t face font-lock-function-name-face)) . -414) (undo-tree-id1495 . -1) (#("m" 0 1 (fontified t face font-lock-function-name-face)) . -415) (undo-tree-id1496 . -1) (#("u" 0 1 (fontified t face font-lock-function-name-face)) . -416) (undo-tree-id1497 . -1) (#("l" 0 1 (fontified t face font-lock-function-name-face)) . -417) (undo-tree-id1498 . -1) (#("t" 0 1 (fontified t face font-lock-function-name-face)) . -418) (undo-tree-id1499 . -1) (#("i" 0 1 (fontified t face font-lock-function-name-face)) . -419) (undo-tree-id1500 . -1) (#("_" 0 1 (fontified t face font-lock-function-name-face)) . -420) (undo-tree-id1501 . -1) (#("r" 0 1 (fontified t face font-lock-function-name-face)) . -421) (undo-tree-id1502 . -1) (#("e" 0 1 (fontified t face font-lock-function-name-face)) . -422) (undo-tree-id1503 . -1) (#("n" 0 1 (fontified t face font-lock-function-name-face)) . -423) (undo-tree-id1504 . -1) (#("d" 0 1 (fontified t face font-lock-function-name-face)) . -424) (undo-tree-id1505 . -1) (#("e" 0 1 (fontified t face font-lock-function-name-face)) . -425) (undo-tree-id1506 . -1) (#("r" 0 1 (fontified t face font-lock-function-name-face)) . -426) (undo-tree-id1507 . -1) 427) nil (25411 41209 102324 676000) 0 nil])
([nil nil ((409 . 420)) nil (25411 41209 102285 925000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 451)) nil (25411 41209 102283 611000) 0 nil])
([nil nil ((866 . 873)) nil (25411 41209 102281 847000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face font-lock-comment-face)) . -1062) (undo-tree-id1486 . -1) (#("h" 0 1 (fontified t face font-lock-comment-face)) . -1063) (undo-tree-id1487 . -1) (#("o" 0 1 (fontified t face font-lock-comment-face)) . -1064) (undo-tree-id1488 . -1) (#("w" 0 1 (fontified t face font-lock-comment-face)) . -1065) (undo-tree-id1489 . -1) 1066) nil (25411 41209 102278 341000) 0 nil])
([nil nil ((1062 . 1067)) nil (25411 41209 102268 42000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face font-lock-comment-face)) . -1062) (undo-tree-id1481 . -1) (#("n" 0 1 (fontified t face font-lock-comment-face)) . -1063) (undo-tree-id1482 . -1) (#("d" 0 1 (fontified t face font-lock-comment-face)) . -1064) (undo-tree-id1483 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -1065) (undo-tree-id1484 . -1) (#("x" 0 1 (fontified t face font-lock-comment-face)) . -1066) (undo-tree-id1485 . -1) 1067) nil (25411 41209 102262 31000) 0 nil])
([nil nil ((1062 . 1066)) nil (25411 41209 102233 238000) 0 nil])
([nil nil ((#("        # |> Phoenix.View.render_many(\"index_quota.json\", Quota: quota)" 0 8 (fontified t) 8 10 (fontified t face font-lock-comment-delimiter-face) 10 38 (fontified t face font-lock-comment-face) 38 39 (syntax-table (15) fontified t face font-lock-comment-face) 39 55 (fontified t face font-lock-comment-face) 55 56 (syntax-table (15) fontified t face font-lock-comment-face) 56 62 (fontified t face font-lock-comment-face) 62 68 (fontified t face font-lock-comment-face) 68 71 (fontified t face font-lock-comment-face)) . 1089) (undo-tree-id1516 . -71) (t 25411 41209 164159 641000)) nil (25411 41215 222658 433000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1088) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1)) nil (25411 41215 222656 269000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1088) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1)) nil (25411 41215 222648 94000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -430) (undo-tree-id1593 . -1) 431 (t 25411 41215 231957 739000)) nil (25411 65392 842222 726000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 430) (#("(" 0 1 (fontified t)) . 430) (undo-tree-id1587 . -1) (undo-tree-id1588 . 1) (undo-tree-id1589 . -1) (#("e" 0 1 (fontified t)) . 430) (#("g" 0 1 (fontified t)) . 430) (#("r" 0 1 (fontified t)) . 430) (#("e" 0 1 (fontified t)) . 430) (#("m" 0 1 (fontified t)) . 430) (#("." 0 1 (fontified t)) . 430) (#("p" 0 1 (fontified t)) . 430) (#("a" 0 1 (fontified t)) . 430) (#("M" 0 1 (fontified t face font-lock-type-face)) . 430) (#(" " 0 1 (fontified t)) . 430) (#(">" 0 1 (fontified t)) . 430) (#("|" 0 1 (fontified t)) . 430) (#(" " 0 1 (fontified t)) . 430) (#(" " 0 1 (fontified t)) . 430) (#(" " 0 1 (fontified t)) . 430) (#(" " 0 1 (fontified t)) . 430) (#("
" 0 1 (fontified t)) . 430) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1)) nil (25411 65392 842212 96000) 0 nil])
([nil nil ((nil rear-nonsticky nil 643 . 644) (nil fontified nil 643 . 644) (nil fontified nil 636 . 643) (nil fontified nil 631 . 636) (nil fontified nil 630 . 631) (nil fontified nil 629 . 630) (nil fontified nil 628 . 629) (nil fontified nil 627 . 628) (nil fontified nil 623 . 627) (nil fontified nil 618 . 623) (nil fontified nil 617 . 618) (nil fontified nil 607 . 617) (nil fontified nil 599 . 607) (nil fontified nil 598 . 599) (nil fontified nil 597 . 598) (nil fontified nil 596 . 597) (nil fontified nil 577 . 596) (nil fontified nil 574 . 577) (nil fontified nil 573 . 574) (nil fontified nil 568 . 573) (nil fontified nil 567 . 568) (nil fontified nil 565 . 567) (nil fontified nil 557 . 565) (nil fontified nil 556 . 557) (nil fontified nil 546 . 556) (nil fontified nil 541 . 546) (nil fontified nil 523 . 541) (nil fontified nil 518 . 523) (nil fontified nil 517 . 518) (nil fontified nil 515 . 517) (nil fontified nil 514 . 515) (nil fontified nil 509 . 514) (nil fontified nil 506 . 509) (nil fontified nil 505 . 506) (nil fontified nil 491 . 505) (nil fontified nil 488 . 491) (nil fontified nil 486 . 488) (nil fontified nil 478 . 486) (nil fontified nil 477 . 478) (nil fontified nil 475 . 477) (nil fontified nil 468 . 475) (nil fontified nil 467 . 468) (nil fontified nil 458 . 467) (nil fontified nil 454 . 458) (nil fontified nil 453 . 454) (nil fontified nil 450 . 453) (nil fontified nil 445 . 450) (nil fontified nil 444 . 445) (nil fontified nil 440 . 444) (nil fontified nil 439 . 440) (nil fontified nil 433 . 439) (nil fontified nil 432 . 433) (nil fontified nil 431 . 432) (nil fontified nil 430 . 431) (430 . 644)) nil (25411 65392 842186 428000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -421) (undo-tree-id1586 . -1) 422) nil (25411 65392 842160 309000) 0 nil])
([nil nil ((421 . 429)) nil (25411 65392 842156 612000) 0 nil])
([nil nil ((429 . 438)) nil (25411 65392 842154 589000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -437) (undo-tree-id1585 . -1) 438) nil (25411 65392 842152 284000) 0 nil])
([nil nil ((437 . 440)) nil (25411 65392 842148 46000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -437) (undo-tree-id1582 . -1) (#("e" 0 1 (fontified t)) . -438) (undo-tree-id1583 . -1) (#("w" 0 1 (fontified t)) . -439) (undo-tree-id1584 . -1) 440) nil (25411 65392 842145 1000) 0 nil])
([nil nil ((437 . 440)) nil (25411 65392 842137 46000) 0 nil])
([nil nil ((#("I" 0 1 (fontified t face font-lock-type-face)) . -1061) (undo-tree-id1563 . -1) (#("O" 0 1 (fontified t face font-lock-type-face)) . -1062) (undo-tree-id1564 . -1) (#("." 0 1 (fontified t)) . -1063) (undo-tree-id1565 . -1) (#("i" 0 1 (fontified t)) . -1064) (undo-tree-id1566 . -1) (#("n" 0 1 (fontified t)) . -1065) (undo-tree-id1567 . -1) (#("s" 0 1 (fontified t)) . -1066) (undo-tree-id1568 . -1) (#("p" 0 1 (fontified t)) . -1067) (undo-tree-id1569 . -1) (#("e" 0 1 (fontified t)) . -1068) (undo-tree-id1570 . -1) (#("c" 0 1 (fontified t)) . -1069) (undo-tree-id1571 . -1) (#("t" 0 1 (fontified t)) . -1070) (undo-tree-id1572 . -1) (#("(" 0 1 (fontified t)) . -1071) (undo-tree-id1573 . -1) (#("q" 0 1 (fontified t)) . -1072) (undo-tree-id1574 . -1) (#("u" 0 1 (fontified t)) . -1073) (undo-tree-id1575 . -1) (#("o" 0 1 (fontified t)) . -1074) (undo-tree-id1576 . -1) (#("t" 0 1 (fontified t)) . -1075) (undo-tree-id1577 . -1) (#("a" 0 1 (fontified t)) . -1076) (undo-tree-id1578 . -1) (#(")" 0 1 (fontified t)) . -1077) (undo-tree-id1579 . -1) (undo-tree-id1580 . 1) (undo-tree-id1581 . -1) 1078) nil (25411 65392 842126 877000) 0 nil])
([nil nil ((1061 . 1074)) nil (25411 65392 842086 601000) 0 nil])
([nil nil ((421 . 433)) nil (25411 65392 842084 948000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified nil)) . -1086) (1086 . 1087) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . -1086) (1086 . 1087) (1085 . 1087) (#("\"" 0 1 (fontified nil syntax-table (15))) . -1085) (1085 . 1086)) nil (25411 65392 842082 13000) 0 nil])
([nil nil ((1086 . 1095)) nil (25411 65392 842077 845000) 0 nil])
([nil nil ((432 . 441)) nil (25411 65392 842076 112000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t syntax-table (15) face font-lock-comment-face)) . -656) (undo-tree-id1552 . -1) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -657) (undo-tree-id1553 . -1) (#("h" 0 1 (fontified t face font-lock-comment-face)) . -658) (undo-tree-id1554 . -1) (#("o" 0 1 (fontified t face font-lock-comment-face)) . -659) (undo-tree-id1555 . -1) (#("w" 0 1 (fontified t face font-lock-comment-face)) . -660) (undo-tree-id1556 . -1) (#("." 0 1 (fontified t face font-lock-comment-face)) . -661) (undo-tree-id1557 . -1) (#("j" 0 1 (fontified t face font-lock-comment-face)) . -662) (undo-tree-id1558 . -1) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -663) (undo-tree-id1559 . -1) (#("o" 0 1 (fontified t face font-lock-comment-face)) . -664) (undo-tree-id1560 . -1) (#("n" 0 1 (fontified t face font-lock-comment-face)) . -665) (undo-tree-id1561 . -1) (#("\"" 0 1 (syntax-table (15) fontified t face font-lock-comment-face)) . -666) (undo-tree-id1562 . -1) 667) nil (25411 65392 842069 950000) 0 nil])
([nil nil ((656 . 676)) nil (25411 65392 842031 338000) 0 nil])
([nil nil ((1114 . 1115)) nil (25411 65392 842029 675000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1133 . 1134) (nil fontified nil 1115 . 1134) (1115 . 1134)) nil (25411 65392 842027 541000) 0 nil])
([nil nil ((#("C" 0 1 (fontified t face font-lock-comment-face)) . -616) (undo-tree-id1533 . -1) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -617) (undo-tree-id1534 . -1) (#("b" 0 1 (fontified t face font-lock-comment-face)) . -618) (undo-tree-id1535 . -1) (#("b" 0 1 (fontified t face font-lock-comment-face)) . -619) (undo-tree-id1536 . -1) (#("o" 0 1 (fontified t face font-lock-comment-face)) . -620) (undo-tree-id1537 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -621) (undo-tree-id1538 . -1) (#("W" 0 1 (fontified t face font-lock-comment-face)) . -622) (undo-tree-id1539 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -623) (undo-tree-id1540 . -1) (#("b" 0 1 (fontified t face font-lock-comment-face)) . -624) (undo-tree-id1541 . -1) (#("." 0 1 (fontified t face font-lock-comment-face)) . -625) (undo-tree-id1542 . -1) (#("Q" 0 1 (fontified t face font-lock-comment-face)) . -626) (undo-tree-id1543 . -1) (#("u" 0 1 (fontified t face font-lock-comment-face)) . -627) (undo-tree-id1544 . -1) (#("o" 0 1 (fontified t face font-lock-comment-face)) . -628) (undo-tree-id1545 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -629) (undo-tree-id1546 . -1) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -630) (undo-tree-id1547 . -1) (#("V" 0 1 (fontified t face font-lock-comment-face)) . -631) (undo-tree-id1548 . -1) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -632) (undo-tree-id1549 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -633) (undo-tree-id1550 . -1) (#("w" 0 1 (fontified t face font-lock-comment-face)) . -634) (undo-tree-id1551 . -1) 635) nil (25411 65392 842017 672000) 0 nil])
([nil nil ((616 . 625)) nil (25411 65392 841975 984000) 0 nil])
([nil nil ((625 . 630)) nil (25411 65392 841974 271000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face font-lock-comment-face)) . -616) (undo-tree-id1523 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -617) (undo-tree-id1524 . -1) (#("r" 0 1 (fontified t face font-lock-comment-face)) . -618) (undo-tree-id1525 . -1) (#("u" 0 1 (fontified t face font-lock-comment-face)) . -619) (undo-tree-id1526 . -1) (#("c" 0 1 (fontified t face font-lock-comment-face)) . -620) (undo-tree-id1527 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -621) (undo-tree-id1528 . -1) (#("u" 0 1 (fontified t face font-lock-comment-face)) . -622) (undo-tree-id1529 . -1) (#("r" 0 1 (fontified t face font-lock-comment-face)) . -623) (undo-tree-id1530 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -624) (undo-tree-id1531 . -1) (#("_" 0 1 (fontified t face font-lock-comment-face)) . -625) (undo-tree-id1532 . -1) 626) nil (25411 65392 841968 180000) 0 nil])
([nil nil ((461 . 466)) nil (25411 65392 841947 281000) 0 nil])
([nil nil ((625 . 630)) nil (25411 65392 841945 537000) 0 nil])
([nil nil ((1110 . 1128)) nil (25411 65392 841943 884000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t face font-lock-comment-face)) . 561) (#("t" 0 1 (fontified t face font-lock-comment-face)) . 561) (#("a" 0 1 (fontified t face font-lock-comment-face)) . 561) (#("p" 0 1 (fontified t face font-lock-comment-face)) . 561) (#("_" 0 1 (fontified t face font-lock-comment-face)) . 561) (#("a" 0 1 (fontified t face font-lock-comment-face)) . 561) (#("t" 0 1 (fontified t face font-lock-comment-face)) . 561) (#("o" 0 1 (fontified t face font-lock-comment-face)) . 561) (#("u" 0 1 (fontified t face font-lock-comment-face)) . 561) (#("q" 0 1 (fontified t face font-lock-comment-face)) . 561) (#("." 0 1 (fontified t face font-lock-comment-face)) . 561) (#("s" 0 1 (fontified t face font-lock-comment-face)) . 561) (#("e" 0 1 (fontified t face font-lock-comment-face)) . 561) (#("t" 0 1 (fontified t face font-lock-comment-face)) . 561) (#("u" 0 1 (fontified t face font-lock-comment-face)) . 561) (#("o" 0 1 (fontified t face font-lock-comment-face)) . 561) (#("R" 0 1 (fontified t face font-lock-comment-face)) . 561)) nil (25411 65392 841936 971000) 0 nil])
([nil nil ((561 . 575)) nil (25411 65392 841928 315000) 0 nil])
([nil nil ((442 . 447)) nil (25411 65392 841926 592000) 0 nil])
([nil nil ((447 . 461)) nil (25411 65392 841924 879000) 0 nil])
([nil nil ((453 . 457) (#("              " 0 14 (fontified t)) . -447) (466 . 467)) nil (25411 65392 841922 544000) 0 nil])
([nil nil ((457 . 458)) nil (25411 65392 841919 839000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 457)) nil (25411 65392 841917 936000) 0 nil])
([nil nil ((467 . 472)) nil (25411 65392 841916 243000) 0 nil])
([nil nil ((482 . 487)) nil (25411 65392 841914 469000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 494)) nil (25411 65392 841912 626000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 507)) nil (25411 65392 841910 752000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 539)) nil (25411 65392 841908 929000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 614)) nil (25411 65392 841906 955000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 645)) nil (25411 65392 841904 791000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 699) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1)) nil (25411 65392 841900 964000) 0 nil])
([nil nil ((#("   
" 0 3 (fontified t) 3 4 (fontified t)) . 699) (undo-tree-id1517 . -4) (undo-tree-id1518 . -4) (undo-tree-id1519 . -4)) nil (25411 65392 841888 471000) 0 nil])
([nil nil ((1135 . 1140) (t 25411 65392 870502 50000)) nil (25411 65526 438743 607000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -1135) (undo-tree-id1604 . -1) (#("i" 0 1 (fontified t)) . -1136) (undo-tree-id1605 . -1) (#("e" 0 1 (fontified t)) . -1137) (undo-tree-id1606 . -1) (#("w" 0 1 (fontified t)) . -1138) (undo-tree-id1607 . -1) 1139) nil (25411 65526 438742 4000) 0 nil])
([nil nil ((1135 . 1140)) nil (25411 65526 438738 728000) 0 nil])
([nil nil ((1117 . 1126)) nil (25411 65526 438738 96000) 0 nil])
([nil nil ((1126 . 1136)) nil (25411 65526 438737 505000) 0 nil])
([nil nil ((1151 . 1159) (#("          " 0 10 (fontified t)) . -1126) (1160 . 1161)) nil (25411 65526 438736 353000) 0 nil])
([nil nil ((1144 . 1153)) nil (25411 65526 438735 441000) 0 nil])
([nil nil ((#("q" 0 1 (fontified t)) . -606) (undo-tree-id1599 . -1) (#("u" 0 1 (fontified t)) . -607) (undo-tree-id1600 . -1) (#("o" 0 1 (fontified t)) . -608) (undo-tree-id1601 . -1) (#("t" 0 1 (fontified t)) . -609) (undo-tree-id1602 . -1) (#("a" 0 1 (fontified t)) . -610) (undo-tree-id1603 . -1) 611) nil (25411 65526 438733 878000) 0 nil])
([nil nil ((606 . 615)) nil (25411 65526 438712 519000) 0 nil])
([nil nil ((#("q" 0 1 (fontified t)) . -696) (undo-tree-id1594 . -1) (#("u" 0 1 (fontified t)) . -697) (undo-tree-id1595 . -1) (#("o" 0 1 (fontified t)) . -698) (undo-tree-id1596 . -1) (#("t" 0 1 (fontified t)) . -699) (undo-tree-id1597 . -1) (#("a" 0 1 (fontified t)) . -700) (undo-tree-id1598 . -1) 701) nil (25411 65526 438710 615000) 0 nil])
([nil nil ((696 . 705)) nil (25411 65526 438696 549000) 0 nil])
([nil nil ((467 . 472)) nil (25411 65526 438695 867000) 0 nil])
([nil nil ((472 . 487)) nil (25411 65526 438695 126000) 0 nil])
([nil nil ((1187 . 1196)) nil (25411 65526 438693 974000) 0 nil])
([nil nil ((1196 . 1203)) nil (25411 65526 438690 157000) 0 nil])
([nil nil ((#("q" 0 1 (fontified t)) . -709) (undo-tree-id1608 . -1) (#("u" 0 1 (fontified t)) . -710) (undo-tree-id1609 . -1) (#("o" 0 1 (fontified t)) . -711) (undo-tree-id1610 . -1) (#("t" 0 1 (fontified t)) . -712) (undo-tree-id1611 . -1) (#("a" 0 1 (fontified t)) . -713) (undo-tree-id1612 . -1) (#(":" 0 1 (fontified t face elixir-atom-face)) . -714) (undo-tree-id1613 . -1) 715 (t 25411 65526 446976 939000)) nil (25412 2 959919 19000) 0 nil])
([nil nil ((709 . 723)) nil (25412 2 959887 199000) 0 nil])
([nil nil ((1141 . 1146) (t 25412 2 979021 497000)) nil (25412 57 169726 937000) 0 nil])
([nil nil ((1146 . 1155)) nil (25412 57 169724 613000) 0 nil])
([nil nil ((421 . 426)) nil (25412 57 169722 850000) 0 nil])
([nil nil ((426 . 432)) nil (25412 57 169720 906000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -426) (undo-tree-id1614 . -1) (#("b" 0 1 (fontified t)) . -427) (undo-tree-id1615 . -1) (#("j" 0 1 (fontified t)) . -428) (undo-tree-id1616 . -1) (#("e" 0 1 (fontified t)) . -429) (undo-tree-id1617 . -1) (#("c" 0 1 (fontified t)) . -430) (undo-tree-id1618 . -1) (#("t" 0 1 (fontified t)) . -431) (undo-tree-id1619 . -1) 432) nil (25412 57 169716 518000) 0 nil])
([nil nil ((426 . 433)) nil (25412 57 169687 614000) 0 nil])
([nil nil ((538 . 545)) nil (25412 57 169684 618000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 530) (#(" " 0 1 (fontified t)) . 530) (#(" " 0 1 (fontified t)) . 530) (#(" " 0 1 (fontified t)) . 530)) nil (25412 57 169676 52000) 0 nil])
([nil nil ((632 . 639) (t 25412 57 199214 273000)) nil (25412 74 115351 348000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -463) (undo-tree-id1634 . -1) 464 (t 25412 74 151274 548000)) nil (25412 126 890863 163000) 0 nil])
([nil nil ((463 . 464)) nil (25412 126 890858 905000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 464) (#(" " 0 1 (fontified t)) . 464) (#(" " 0 1 (fontified t)) . 464) (#(" " 0 1 (fontified t)) . 464) (#("
" 0 1 (fontified t)) . 464) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1)) nil (25412 126 890855 229000) 0 nil])
([nil nil ((433 . 438)) nil (25412 126 890847 124000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -468) (undo-tree-id1630 . -1) 469) nil (25412 126 890844 389000) 0 nil])
([nil nil ((468 . 469)) nil (25412 126 890839 821000) 0 nil])
([nil nil ((469 . 474)) nil (25412 126 890837 76000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -622) (undo-tree-id1620 . -1) (#("s" 0 1 (fontified t)) . -623) (undo-tree-id1621 . -1) (#("t" 0 1 (fontified t)) . -624) (undo-tree-id1622 . -1) (#("r" 0 1 (fontified t)) . -625) (undo-tree-id1623 . -1) (#("u" 0 1 (fontified t)) . -626) (undo-tree-id1624 . -1) (#("c" 0 1 (fontified t)) . -627) (undo-tree-id1625 . -1) (#("t" 0 1 (fontified t)) . -628) (undo-tree-id1626 . -1) (#("u" 0 1 (fontified t)) . -629) (undo-tree-id1627 . -1) (#("r" 0 1 (fontified t)) . -630) (undo-tree-id1628 . -1) (#("e" 0 1 (fontified t)) . -631) (undo-tree-id1629 . -1) 632) nil (25412 126 890827 28000) 0 nil])
([nil nil ((464 . 470) (t 25412 126 911922 281000)) nil (25412 291 445339 198000) 0 nil])
([nil nil ((624 . 630)) nil (25412 291 445330 813000) 0 nil])
([nil nil ((#("  def map_stacker(conn_struct,
    render_func_template,
    route_path,
    structure,
    structure_atom,
    view_name)
    do
        conn_struct
        |> put_status(:created)
        |> put_resp_header(\"location\", route_path(conn_struct, :show, structure))
        |> put_view(view_name)
        |> render(render_func_template, structure_atom structure)
    end
" 0 2 (fontified t) 2 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 17 (fontified t face font-lock-function-name-face) 17 30 (fontified t) 30 31 (fontified t) 31 56 (fontified t) 56 57 (fontified t) 57 72 (fontified t) 72 73 (fontified t) 73 77 (fontified t) 77 87 (fontified t) 87 88 (fontified t) 88 107 (fontified t) 107 108 (fontified t) 108 122 (fontified t) 122 123 (fontified t) 123 127 (fontified t) 127 129 (fontified t face font-lock-keyword-face) 129 130 (fontified t) 130 134 (fontified t) 134 135 (fontified t) 135 136 (fontified t) 136 138 (fontified t) 138 139 (fontified t) 139 150 (fontified t) 150 155 (fontified t) 155 158 (fontified t) 158 159 (fontified t) 159 163 (fontified t) 163 172 (fontified t) 172 173 (fontified t face elixir-atom-face) 173 180 (fontified t face elixir-atom-face) 180 182 (fontified t) 182 190 (fontified t) 190 192 (fontified t) 192 195 (fontified t) 195 209 (fontified t) 209 210 (fontified t syntax-table (15) face font-lock-string-face) 210 213 (fontified t face font-lock-string-face) 213 218 (fontified t face font-lock-string-face) 218 219 (fontified t syntax-table (15) face font-lock-string-face) 219 231 (fontified t) 231 245 (fontified t) 245 250 (fontified t face elixir-atom-face) 250 264 (fontified t) 264 272 (fontified t) 272 274 (fontified t) 274 275 (fontified t) 275 280 (fontified t) 280 281 (fontified t) 281 293 (fontified t) 293 294 (fontified t) 294 295 (fontified t) 295 303 (fontified t) 303 333 (fontified t) 333 334 (fontified t) 334 349 (fontified t) 349 360 (fontified t) 360 361 (rear-nonsticky t fontified t) 361 365 (fontified t) 365 368 (fontified t face font-lock-keyword-face) 368 369 (fontified t)) . 403) (undo-tree-id1638 . -369) (undo-tree-id1639 . -369) (undo-tree-id1640 . -31) (undo-tree-id1641 . -31) (undo-tree-id1642 . -134) (undo-tree-id1643 . -295) (undo-tree-id1644 . -295) (undo-tree-id1645 . -361) (undo-tree-id1646 . -361) (undo-tree-id1647 . -150) (undo-tree-id1648 . -150) (undo-tree-id1649 . -130) (undo-tree-id1650 . -130) (undo-tree-id1651 . -123) (undo-tree-id1652 . -123) (undo-tree-id1653 . -182) (undo-tree-id1654 . -182) (undo-tree-id1655 . -264) (undo-tree-id1656 . -264) (undo-tree-id1657 . -134) (undo-tree-id1658 . -284) (undo-tree-id1659 . -73) (undo-tree-id1660 . -73) (undo-tree-id1661 . -57) (undo-tree-id1662 . -57) (undo-tree-id1663 . -108) (undo-tree-id1664 . -108) (undo-tree-id1665 . -88) (undo-tree-id1666 . -88) (undo-tree-id1667 . -369) (undo-tree-id1668 . -369) (undo-tree-id1669 . -369) 772 (t 25412 291 474553 837000)) nil (25412 316 298806 347000) 0 nil])
([nil nil ((2372 . 2374) (#("  " 0 2 (fontified nil)) . 2371) (undo-tree-id1635 . -2) (2371 . 2374) (#("  " 0 2 (fontified nil)) . 2370) (undo-tree-id1636 . -2) (2370 . 2373) (#("  " 0 2 (fontified nil)) . 2369) (undo-tree-id1637 . -2) (2369 . 2372) (#("  " 0 2 (fontified nil face font-lock-comment-face)) . 2368) (2368 . 2370) (2368 . 2369)) nil (25412 316 298749 393000) 0 nil])
([nil nil ((2371 . 2373) (#("  " 0 2 (fontified nil)) . 2370) (2370 . 2372) (2370 . 2371)) nil (25412 316 298724 908000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2741 . 2742) (nil fontified nil 2741 . 2742) (nil fontified nil 2738 . 2741) (nil fontified nil 2734 . 2738) (nil fontified nil 2733 . 2734) (nil fontified nil 2722 . 2733) (nil fontified nil 2707 . 2722) (nil fontified nil 2706 . 2707) (nil fontified nil 2676 . 2706) (nil fontified nil 2668 . 2676) (nil fontified nil 2667 . 2668) (nil fontified nil 2666 . 2667) (nil fontified nil 2654 . 2666) (nil fontified nil 2653 . 2654) (nil fontified nil 2648 . 2653) (nil fontified nil 2647 . 2648) (nil fontified nil 2645 . 2647) (nil fontified nil 2637 . 2645) (nil fontified nil 2623 . 2637) (nil fontified nil 2618 . 2623) (nil fontified nil 2604 . 2618) (nil fontified nil 2592 . 2604) (nil fontified nil 2591 . 2592) (nil fontified nil 2586 . 2591) (nil fontified nil 2583 . 2586) (nil fontified nil 2582 . 2583) (nil fontified nil 2568 . 2582) (nil fontified nil 2565 . 2568) (nil fontified nil 2563 . 2565) (nil fontified nil 2555 . 2563) (nil fontified nil 2553 . 2555) (nil fontified nil 2546 . 2553) (nil fontified nil 2545 . 2546) (nil fontified nil 2536 . 2545) (nil fontified nil 2532 . 2536) (nil fontified nil 2531 . 2532) (nil fontified nil 2528 . 2531) (nil fontified nil 2523 . 2528) (nil fontified nil 2512 . 2523) (nil fontified nil 2511 . 2512) (nil fontified nil 2509 . 2511) (nil fontified nil 2508 . 2509) (nil fontified nil 2507 . 2508) (nil fontified nil 2503 . 2507) (nil fontified nil 2502 . 2503) (nil fontified nil 2500 . 2502) (nil fontified nil 2496 . 2500) (nil fontified nil 2495 . 2496) (nil fontified nil 2481 . 2495) (nil fontified nil 2480 . 2481) (nil fontified nil 2461 . 2480) (nil fontified nil 2460 . 2461) (nil fontified nil 2450 . 2460) (nil fontified nil 2446 . 2450) (nil fontified nil 2445 . 2446) (nil fontified nil 2430 . 2445) (nil fontified nil 2429 . 2430) (nil fontified nil 2404 . 2429) (nil fontified nil 2403 . 2404) (nil fontified nil 2390 . 2403) (nil fontified nil 2379 . 2390) (nil fontified nil 2378 . 2379) (nil fontified nil 2375 . 2378) (nil fontified nil 2373 . 2375) (2373 . 2742)) nil (25412 316 298708 779000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -2594) (undo-tree-id1683 . -1) (#("o" 0 1 (fontified t)) . -2595) (undo-tree-id1684 . -1) (#("u" 0 1 (fontified t)) . -2596) (undo-tree-id1685 . -1) (#("t" 0 1 (fontified t)) . -2597) (undo-tree-id1686 . -1) (#("e" 0 1 (fontified t)) . -2598) (undo-tree-id1687 . -1) (#("_" 0 1 (fontified t)) . -2599) (undo-tree-id1688 . -1) (#("p" 0 1 (fontified t)) . -2600) (undo-tree-id1689 . -1) (#("a" 0 1 (fontified t)) . -2601) (undo-tree-id1690 . -1) (#("t" 0 1 (fontified t)) . -2602) (undo-tree-id1691 . -1) (#("h" 0 1 (fontified t)) . -2603) (undo-tree-id1692 . -1) 2604 (t 25412 316 321361 223000)) nil (25412 372 930803 871000) 0 nil])
([nil nil ((2594 . 2610)) nil (25412 372 930704 569000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t face font-lock-type-face)) . -2599) (undo-tree-id1682 . -1) 2600) nil (25412 372 930702 275000) 0 nil])
([nil nil ((2599 . 2600)) nil (25412 372 930697 817000) 0 nil])
([nil nil ((#("q" 0 1 (fontified t)) . -2600) (undo-tree-id1676 . -1) (#("u" 0 1 (fontified t)) . -2601) (undo-tree-id1677 . -1) (#("o" 0 1 (fontified t)) . -2602) (undo-tree-id1678 . -1) (#("t" 0 1 (fontified t)) . -2603) (undo-tree-id1679 . -1) (#("a" 0 1 (fontified t)) . -2604) (undo-tree-id1680 . -1) (#("_" 0 1 (fontified t)) . -2605) (undo-tree-id1681 . -1) 2606) nil (25412 372 930692 267000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -2434) (undo-tree-id1670 . -1) (#("o" 0 1 (fontified t)) . -2435) (undo-tree-id1671 . -1) (#("u" 0 1 (fontified t)) . -2436) (undo-tree-id1672 . -1) (#("t" 0 1 (fontified t)) . -2437) (undo-tree-id1673 . -1) (#("e" 0 1 (fontified t)) . -2438) (undo-tree-id1674 . -1) (#("_" 0 1 (fontified t)) . -2439) (undo-tree-id1675 . -1) 2440) nil (25412 372 930667 542000) 0 nil])
([nil nil ((#("R" 0 1 (fontified t face font-lock-type-face)) . -836) (undo-tree-id1693 . -1) (#("o" 0 1 (fontified t face font-lock-type-face)) . -837) (undo-tree-id1694 . -1) (#("u" 0 1 (fontified t face font-lock-type-face)) . -838) (undo-tree-id1695 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -839) (undo-tree-id1696 . -1) (#("e" 0 1 (fontified t face font-lock-type-face)) . -840) (undo-tree-id1697 . -1) (#("s" 0 1 (fontified t face font-lock-type-face)) . -841) (undo-tree-id1698 . -1) (#("." 0 1 (fontified t)) . -842) (undo-tree-id1699 . -1) 843 (t 25412 372 950827 844000)) nil (25412 382 103388 14000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 836) (#(" " 0 1 (fontified t)) . 836) (#(" " 0 1 (fontified t)) . 836) (#(" " 0 1 (fontified t)) . 836) (#(" " 0 1 (fontified t)) . 836) (#(" " 0 1 (fontified t)) . 836) (#(" " 0 1 (fontified t)) . 836) (#("	" 0 1 (fontified t)) . 836) (#("
" 0 1 (fontified t)) . 836) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (#("," 0 1 (fontified t)) . 836) (#("h" 0 1 (fontified t)) . 836) (#("t" 0 1 (fontified t)) . 836) (#("a" 0 1 (fontified t)) . 836) (#("p" 0 1 (fontified t)) . 836) (#("_" 0 1 (fontified t face font-lock-comment-face)) . 836) (#("a" 0 1 (fontified t)) . 836) (#("t" 0 1 (fontified t)) . 836) (#("o" 0 1 (fontified t)) . 836) (#("u" 0 1 (fontified t)) . 836) (#("q" 0 1 (fontified t)) . 836) (t 25412 382 130439 990000)) nil (25412 401 465934 328000) 0 nil])
([nil nil ((2567 . 2573) (t 25412 401 529640 134000)) nil (25412 432 1640 991000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -2407) (undo-tree-id1735 . -1) (#("a" 0 1 (fontified t)) . -2408) (undo-tree-id1736 . -1) (#("t" 0 1 (fontified t)) . -2409) (undo-tree-id1737 . -1) (#("h" 0 1 (fontified t)) . -2410) (undo-tree-id1738 . -1) (#("," 0 1 (fontified t)) . -2411) (undo-tree-id1739 . -1) 2412) nil (25412 432 1636 723000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2407) (#(" " 0 1 (fontified t)) . 2407) (#(" " 0 1 (fontified t)) . 2407) (#(" " 0 1 (fontified t)) . 2407) (#("
" 0 1 (fontified t)) . 2407) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1)) nil (25412 432 1623 199000) 0 nil])
([nil nil ((#("def map_stacker(conn_struct,
    render_func_template,
    structure,
    structure_atom,
    view_name)
    do
        conn_struct
        |> put_status(:created)
        |> put_resp_header(\"location\", Route.quota_path(conn_struct, :show, structure))
        |> put_view(view_name)
        |> render(render_func_template, structure_atom structure)
    end
" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 15 (fontified t face font-lock-function-name-face) 15 28 (fontified t) 28 29 (fontified t) 29 54 (fontified t) 54 55 (fontified t) 55 59 (fontified t) 59 69 (fontified t) 69 70 (fontified t) 70 89 (fontified t) 89 90 (fontified t) 90 104 (fontified t) 104 105 (fontified t) 105 109 (fontified t) 109 111 (fontified t face font-lock-keyword-face) 111 112 (fontified t) 112 116 (fontified t) 116 117 (fontified t) 117 118 (fontified t) 118 120 (fontified t) 120 121 (fontified t) 121 132 (fontified t) 132 137 (fontified t) 137 140 (fontified t) 140 141 (fontified t) 141 145 (fontified t) 145 154 (fontified t) 154 155 (fontified t face elixir-atom-face) 155 162 (fontified t face elixir-atom-face) 162 164 (fontified t) 164 172 (fontified t) 172 174 (fontified t) 174 177 (fontified t) 177 191 (fontified t) 191 192 (syntax-table (15) fontified t face font-lock-string-face) 192 195 (fontified t face font-lock-string-face) 195 200 (fontified t face font-lock-string-face) 200 201 (syntax-table (15) fontified t face font-lock-string-face) 201 203 (fontified t) 203 208 (fontified t face font-lock-type-face) 208 219 (fontified t) 219 233 (fontified t) 233 238 (fontified t face elixir-atom-face) 238 252 (fontified t) 252 260 (fontified t) 260 262 (fontified t) 262 263 (fontified t) 263 268 (fontified t) 268 269 (fontified t) 269 281 (fontified t) 281 282 (fontified t) 282 283 (fontified t) 283 291 (fontified t) 291 321 (fontified t) 321 322 (fontified t) 322 337 (fontified t) 337 348 (fontified t) 348 349 (rear-nonsticky t fontified t) 349 353 (fontified t) 353 356 (fontified t face font-lock-keyword-face) 356 357 (rear-nonsticky t fontified t)) . 2348) (undo-tree-id1705 . -357) (undo-tree-id1706 . -357) (undo-tree-id1707 . -112) (undo-tree-id1708 . -112) (undo-tree-id1709 . -252) (undo-tree-id1710 . -252) (undo-tree-id1711 . -349) (undo-tree-id1712 . -349) (undo-tree-id1713 . -29) (undo-tree-id1714 . -29) (undo-tree-id1715 . -55) (undo-tree-id1716 . -55) (undo-tree-id1717 . -105) (undo-tree-id1718 . -105) (undo-tree-id1719 . -70) (undo-tree-id1720 . -70) (undo-tree-id1721 . -357) (undo-tree-id1722 . -357) (undo-tree-id1723 . -164) (undo-tree-id1724 . -164) (undo-tree-id1725 . -283) (undo-tree-id1726 . -283) (undo-tree-id1727 . -90) (undo-tree-id1728 . -90) (undo-tree-id1729 . -132) (undo-tree-id1730 . -132) (undo-tree-id1731 . -357) 2705) nil (25412 432 1610 906000) 0 nil])
([nil nil ((403 . 405) (#("  " 0 2 (fontified t)) . 402) (undo-tree-id1703 . -2) (undo-tree-id1704 . -2) (402 . 405) (#("  " 0 2 (fontified nil)) . 401) (401 . 403) (401 . 402)) nil (25412 432 1561 426000) 0 nil])
([nil nil ((nil fontified nil 761 . 762) (nil fontified nil 758 . 761) (nil fontified nil 754 . 758) (nil fontified nil 753 . 754) (nil fontified nil 742 . 753) (nil fontified nil 727 . 742) (nil fontified nil 726 . 727) (nil fontified nil 696 . 726) (nil fontified nil 688 . 696) (nil fontified nil 687 . 688) (nil fontified nil 686 . 687) (nil fontified nil 674 . 686) (nil fontified nil 673 . 674) (nil fontified nil 668 . 673) (nil fontified nil 667 . 668) (nil fontified nil 665 . 667) (nil fontified nil 657 . 665) (nil fontified nil 643 . 657) (nil fontified nil 638 . 643) (nil fontified nil 624 . 638) (nil fontified nil 613 . 624) (nil fontified nil 608 . 613) (nil fontified nil 606 . 608) (nil fontified nil 605 . 606) (nil fontified nil 600 . 605) (nil fontified nil 597 . 600) (nil fontified nil 596 . 597) (nil fontified nil 582 . 596) (nil fontified nil 579 . 582) (nil fontified nil 577 . 579) (nil fontified nil 569 . 577) (nil fontified nil 567 . 569) (nil fontified nil 560 . 567) (nil fontified nil 559 . 560) (nil fontified nil 550 . 559) (nil fontified nil 546 . 550) (nil fontified nil 545 . 546) (nil fontified nil 542 . 545) (nil fontified nil 537 . 542) (nil fontified nil 526 . 537) (nil fontified nil 525 . 526) (nil fontified nil 523 . 525) (nil fontified nil 522 . 523) (nil fontified nil 521 . 522) (nil fontified nil 517 . 521) (nil fontified nil 516 . 517) (nil fontified nil 514 . 516) (nil fontified nil 510 . 514) (nil fontified nil 509 . 510) (nil fontified nil 495 . 509) (nil fontified nil 494 . 495) (nil fontified nil 475 . 494) (nil fontified nil 474 . 475) (nil fontified nil 464 . 474) (nil fontified nil 460 . 464) (nil fontified nil 459 . 460) (nil fontified nil 434 . 459) (nil fontified nil 433 . 434) (nil fontified nil 420 . 433) (nil fontified nil 409 . 420) (nil fontified nil 408 . 409) (nil fontified nil 405 . 408) (405 . 762)) nil (25412 432 1529 247000) 0 nil])
([nil nil ((479 . 480) (t 25412 432 32434 734000)) nil (25412 469 71251 575000) 0 nil])
([nil nil ((729 . 730)) nil (25412 469 71243 531000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t face elixir-atom-face)) . -729) (undo-tree-id1741 . -1) 730 (t 25412 469 91051 542000)) nil (25412 496 487443 144000) 0 nil])
([nil nil ((743 . 744)) nil (25412 496 487437 514000) 0 nil])
([nil nil ((494 . 495)) nil (25412 496 487434 639000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -479) (undo-tree-id1740 . -1) 480) nil (25412 496 487427 25000) 0 nil])
([nil nil ((494 . 495) (t 25412 496 506082 230000)) nil (25412 505 347354 701000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t face elixir-atom-face)) . -493) (undo-tree-id1752 . -1) 494 (t 25412 505 381777 782000)) nil (25412 561 949678 927000) 0 nil])
([nil nil ((479 . 480)) nil (25412 561 949674 509000) 0 nil])
([nil nil ((730 . 731)) nil (25412 561 949672 385000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t face elixir-atom-face)) . -479) (undo-tree-id1751 . -1) 480) nil (25412 561 949670 181000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -729) (undo-tree-id1750 . -1) 730) nil (25412 561 949666 134000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t face elixir-atom-face)) . -743) (undo-tree-id1749 . -1) 744) nil (25412 561 949661 896000) 0 nil])
([nil nil ((743 . 751)) nil (25412 561 949658 99000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -759) (759 . 760) (#(")" 0 1 (fontified nil)) . -759) (759 . 760) (751 . 760)) nil (25412 561 949655 514000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -743) (undo-tree-id1748 . -1) 744) nil (25412 561 949651 537000) 0 nil])
([nil nil ((743 . 747)) nil (25412 561 949647 380000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -1233) (undo-tree-id1742 . -1) (#("q" 0 1 (fontified t face elixir-atom-face)) . -1234) (undo-tree-id1743 . -1) (#("u" 0 1 (fontified t face elixir-atom-face)) . -1235) (undo-tree-id1744 . -1) (#("o" 0 1 (fontified t face elixir-atom-face)) . -1236) (undo-tree-id1745 . -1) (#("t" 0 1 (fontified t face elixir-atom-face)) . -1237) (undo-tree-id1746 . -1) (#("a" 0 1 (fontified t face elixir-atom-face)) . -1238) (undo-tree-id1747 . -1) 1239) nil (25412 561 949642 771000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified nil)) . -1234) (1234 . 1235) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . -1234) (1234 . 1235) (1233 . 1235) (#("\"" 0 1 (fontified nil syntax-table (15))) . -1233) (1233 . 1234)) nil (25412 561 949611 83000) 0 nil])
([nil nil ((1234 . 1239)) nil (25412 561 949600 874000) 0 nil])
([nil nil ((#("  def map_stacker(conn_struct,
    render_func_template,
    structure,
    structure_atom ,
    view_name)
    do
        conn_struct
        |> put_status(:created)
        |> put_resp_header(\"location\", Route.quota_path(conn_struct, :show, structure))
        |> put_view(view_name)
        |> render(render_func_template, structure_atom |> String.to_atom() structure)
    end
" 0 2 (fontified t) 2 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 17 (fontified t face font-lock-function-name-face) 17 30 (fontified t) 30 31 (fontified t) 31 56 (fontified t) 56 57 (fontified t) 57 61 (fontified t) 61 71 (fontified t) 71 72 (fontified t) 72 76 (fontified t) 76 90 (fontified t) 90 91 (fontified t) 91 92 (fontified t) 92 93 (fontified t) 93 107 (fontified t) 107 108 (fontified t) 108 112 (fontified t) 112 114 (fontified t face font-lock-keyword-face) 114 115 (fontified t) 115 119 (fontified t) 119 120 (fontified t) 120 121 (fontified t) 121 123 (fontified t) 123 124 (fontified t) 124 135 (fontified t) 135 140 (fontified t) 140 143 (fontified t) 143 144 (fontified t) 144 148 (fontified t) 148 157 (fontified t) 157 158 (fontified t face elixir-atom-face) 158 165 (fontified t face elixir-atom-face) 165 167 (fontified t) 167 175 (fontified t) 175 177 (fontified t) 177 180 (fontified t) 180 194 (fontified t) 194 195 (syntax-table (15) fontified t face font-lock-string-face) 195 198 (fontified t face font-lock-string-face) 198 203 (fontified t face font-lock-string-face) 203 204 (syntax-table (15) fontified t face font-lock-string-face) 204 206 (fontified t) 206 211 (fontified t face font-lock-type-face) 211 222 (fontified t) 222 236 (fontified t) 236 241 (fontified t face elixir-atom-face) 241 255 (fontified t) 255 263 (fontified t) 263 265 (fontified t) 265 266 (fontified t) 266 271 (fontified t) 271 272 (fontified t) 272 284 (fontified t) 284 285 (fontified t) 285 286 (fontified t) 286 294 (fontified t) 294 324 (fontified t) 324 325 (fontified t) 325 326 (fontified t) 326 344 (fontified t) 344 350 (fontified t face font-lock-type-face) 350 358 (fontified t) 358 359 (fontified t) 359 360 (fontified t) 360 371 (fontified t) 371 372 (rear-nonsticky t fontified t) 372 376 (fontified t) 376 379 (fontified t face font-lock-keyword-face) 379 380 (rear-nonsticky t fontified t)) . -403) (undo-tree-id1753 . -380) (undo-tree-id1754 . -380) (undo-tree-id1755 . -72) (undo-tree-id1756 . -72) (undo-tree-id1757 . -380) (undo-tree-id1758 . -380) (undo-tree-id1759 . -372) (undo-tree-id1760 . -372) (undo-tree-id1761 . -93) (undo-tree-id1762 . -93) (undo-tree-id1763 . -57) (undo-tree-id1764 . -57) (undo-tree-id1765 . -255) (undo-tree-id1766 . -255) (undo-tree-id1767 . -167) (undo-tree-id1768 . -167) (undo-tree-id1769 . -135) (undo-tree-id1770 . -135) (undo-tree-id1771 . -286) (undo-tree-id1772 . -286) (undo-tree-id1773 . -108) (undo-tree-id1774 . -108) (undo-tree-id1775 . -115) (undo-tree-id1776 . -115) (undo-tree-id1777 . -31) (undo-tree-id1778 . -31) (undo-tree-id1779 . -2) (undo-tree-id1780 . -380) (undo-tree-id1781 . -380) 783 (t 25412 561 971938 84000)) nil (25412 589 570471 588000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 402) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (t 25412 589 599099 922000)) nil (25412 754 957751 52000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 402) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1)) nil (25412 754 957745 512000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 402) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1)) nil (25412 754 957742 356000) 0 nil])
([nil nil ((#("	     map_stacker(conn,
	       \"show.json\",
	       quota,
	       \"quota\",
	       CabbotWeb.QuotaView)
" 0 15 (fontified t) 15 17 (fontified t) 17 23 (fontified t) 23 24 (fontified t) 24 32 (fontified t) 32 33 (syntax-table (15) fontified t face font-lock-string-face) 33 34 (fontified t face font-lock-string-face) 34 37 (fontified t face font-lock-string-face) 37 42 (fontified t face font-lock-string-face) 42 43 (syntax-table (15) fontified t face font-lock-string-face) 43 44 (fontified t) 44 45 (fontified t) 45 53 (fontified t) 53 59 (fontified t) 59 60 (fontified t) 60 68 (fontified t) 68 69 (syntax-table (15) fontified t face font-lock-string-face) 69 74 (fontified t face font-lock-string-face) 74 75 (syntax-table (15) fontified t face font-lock-string-face) 75 76 (fontified t) 76 77 (fontified t) 77 85 (fontified t) 85 95 (fontified t face font-lock-type-face) 95 100 (fontified t face font-lock-type-face) 100 103 (fontified t face font-lock-type-face) 103 104 (rear-nonsticky t fontified t face font-lock-type-face) 104 105 (fontified t) 105 106 (fontified t)) . -782) (undo-tree-id1782 . -106) (undo-tree-id1783 . -106) (undo-tree-id1784 . -45) (undo-tree-id1785 . -45) (undo-tree-id1786 . -60) (undo-tree-id1787 . -60) (undo-tree-id1788 . -44) (undo-tree-id1789 . -106) (undo-tree-id1790 . -106) (undo-tree-id1791 . -77) (undo-tree-id1792 . -77) (undo-tree-id1793 . -106) 888) nil (25412 754 957734 391000) 0 nil])
([nil nil ((1642 . 1646) (#("    " 0 4 (fontified t)) . 1641) (undo-tree-id1812 . -4) (1641 . 1646) (#("    " 0 4 (fontified t)) . 1640) (undo-tree-id1813 . -4) (1639 . 1645) (t 25412 754 978783 779000)) nil (25412 829 176190 757000) 0 nil])
([nil nil ((1642 . 1646) (#("    " 0 4 (fontified nil)) . 1641) (1641 . 1645) (1641 . 1642)) nil (25412 829 176183 33000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1849 . 1850) (nil fontified nil 1843 . 1850) (nil fontified nil 1838 . 1843) (nil fontified nil 1837 . 1838) (nil fontified nil 1836 . 1837) (nil fontified nil 1835 . 1836) (nil fontified nil 1834 . 1835) (nil fontified nil 1830 . 1834) (nil fontified nil 1829 . 1830) (nil fontified nil 1825 . 1829) (nil fontified nil 1824 . 1825) (nil fontified nil 1814 . 1824) (nil fontified nil 1806 . 1814) (nil fontified nil 1805 . 1806) (nil fontified nil 1804 . 1805) (nil fontified nil 1803 . 1804) (nil fontified nil 1784 . 1803) (nil fontified nil 1781 . 1784) (nil fontified nil 1780 . 1781) (nil fontified nil 1775 . 1780) (nil fontified nil 1774 . 1775) (nil fontified nil 1772 . 1774) (nil fontified nil 1764 . 1772) (nil fontified nil 1763 . 1764) (nil fontified nil 1753 . 1763) (nil fontified nil 1748 . 1753) (nil fontified nil 1730 . 1748) (nil fontified nil 1725 . 1730) (nil fontified nil 1724 . 1725) (nil fontified nil 1722 . 1724) (nil fontified nil 1721 . 1722) (nil fontified nil 1716 . 1721) (nil fontified nil 1714 . 1716) (nil fontified nil 1713 . 1714) (nil fontified nil 1712 . 1713) (nil fontified nil 1706 . 1712) (nil fontified nil 1698 . 1706) (nil fontified nil 1695 . 1698) (nil fontified nil 1693 . 1695) (nil fontified nil 1685 . 1693) (nil fontified nil 1684 . 1685) (nil fontified nil 1682 . 1684) (nil fontified nil 1681 . 1682) (nil fontified nil 1675 . 1681) (nil fontified nil 1674 . 1675) (nil fontified nil 1668 . 1674) (nil fontified nil 1665 . 1668) (nil fontified nil 1661 . 1665) (nil fontified nil 1660 . 1661) (nil fontified nil 1657 . 1660) (nil fontified nil 1652 . 1657) (nil fontified nil 1651 . 1652) (nil fontified nil 1647 . 1651) (nil fontified nil 1646 . 1647) (1646 . 1850)) nil (25412 829 176172 914000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -1651) (undo-tree-id1811 . -1) 1652) nil (25412 829 176148 239000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -1683) (undo-tree-id1810 . -1) 1684) nil (25412 829 176143 289000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -1761) (undo-tree-id1809 . -1) 1762) nil (25412 829 176137 459000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -1802) (undo-tree-id1808 . -1) 1803) nil (25412 829 176127 440000) 0 nil])
([nil nil ((#("
    conn
        |> put_status(:created)
        |> put_resp_header(\"location\", Routes.quota_path(conn, :show, quota))
        |> put_view(CabbotWeb.QuotaView)
        |> render(\"show.json\", quota: quota)
" 0 1 (fontified t) 1 5 (fontified t) 5 6 (fontified t) 6 10 (fontified t) 10 15 (fontified t) 15 18 (fontified t) 18 19 (fontified t) 19 23 (fontified t) 23 26 (fontified t) 26 32 (fontified t) 32 33 (fontified t face elixir-atom-face) 33 39 (fontified t face elixir-atom-face) 39 40 (fontified t face elixir-atom-face) 40 42 (fontified t) 42 50 (fontified t) 50 52 (fontified t) 52 55 (fontified t) 55 63 (fontified t) 63 69 (fontified t) 69 70 (fontified t syntax-table (15) face font-lock-string-face) 70 71 (fontified t face font-lock-string-face) 71 73 (fontified t face font-lock-string-face) 73 78 (fontified t face font-lock-string-face) 78 79 (fontified t syntax-table (15) face font-lock-string-face) 79 81 (fontified t) 81 82 (fontified t face font-lock-type-face) 82 87 (fontified t face font-lock-type-face) 87 105 (fontified t) 105 110 (fontified t face elixir-atom-face) 110 120 (fontified t) 120 128 (fontified t) 128 130 (fontified t) 130 131 (fontified t) 131 136 (fontified t) 136 137 (fontified t) 137 140 (fontified t) 140 159 (fontified t face font-lock-type-face) 159 160 (fontified t) 160 161 (fontified t) 161 169 (fontified t) 169 179 (fontified t) 179 180 (fontified t syntax-table (15) face font-lock-string-face) 180 184 (fontified t face font-lock-string-face) 184 185 (fontified t face font-lock-string-face) 185 189 (fontified t face font-lock-string-face) 189 190 (fontified t syntax-table (15) face font-lock-string-face) 190 191 (fontified t) 191 192 (fontified t) 192 193 (fontified t face elixir-atom-face) 193 198 (fontified t face elixir-atom-face) 198 204 (fontified t) 204 205 (rear-nonsticky t fontified t) 205 206 (fontified t)) . -1641) (undo-tree-id1844 . -206) (undo-tree-id1845 . -206) (undo-tree-id1846 . -161) (undo-tree-id1847 . -161) (undo-tree-id1848 . -120) (undo-tree-id1849 . -120) (undo-tree-id1850 . -42) (undo-tree-id1851 . -42) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -206) (undo-tree-id1855 . -206) (undo-tree-id1856 . -10) (undo-tree-id1857 . -10) (undo-tree-id1858 . -5) (undo-tree-id1859 . -206) (undo-tree-id1860 . -206) 1847 (t 25412 829 209175 235000)) nil (25412 875 98170 88000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1614) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1)) nil (25412 875 98140 63000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1614) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1)) nil (25412 875 98132 58000) 0 nil])
([nil nil ((#("	     
" 0 6 (fontified t) 6 7 (fontified t)) . 1614) (undo-tree-id1832 . -7) (undo-tree-id1833 . -7) (undo-tree-id1834 . -7) (undo-tree-id1835 . -7)) nil (25412 875 98123 973000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1614) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1)) nil (25412 875 98115 658000) 0 nil])
([nil nil ((#("	     
" 0 6 (fontified t) 6 7 (fontified t)) . 1614) (undo-tree-id1824 . -7) (undo-tree-id1825 . -7) (undo-tree-id1826 . -7) (undo-tree-id1827 . -7)) nil (25412 875 98104 36000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1623) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1)) nil (25412 875 98094 128000) 0 nil])
([nil nil ((#("    
" 0 4 (fontified t) 4 5 (fontified t)) . 1623) (undo-tree-id1814 . -5) (undo-tree-id1815 . -5) (undo-tree-id1816 . -5) (undo-tree-id1817 . -5)) nil (25412 875 98077 86000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1011) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (t 25412 875 120264 674000)) nil (25412 949 164176 522000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 401) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1)) nil (25412 949 164159 450000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -788) (undo-tree-id1877 . -1) 789 (t 25412 949 186915 423000)) nil (25412 1055 405025 511000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -801) (undo-tree-id1876 . -1) 802) nil (25412 1055 405021 283000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -833) (undo-tree-id1875 . -1) 834) nil (25412 1055 405017 766000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -911) (undo-tree-id1874 . -1) 912) nil (25412 1055 405012 998000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -952) (undo-tree-id1873 . -1) 953) nil (25412 1055 405004 883000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -1300) (undo-tree-id1882 . -1) 1301 (t 25412 1055 437202 931000)) nil (25412 1089 750949 165000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -1319) (undo-tree-id1881 . -1) 1320) nil (25412 1089 750944 337000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -1359) (undo-tree-id1880 . -1) 1360) nil (25412 1089 750939 718000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -1454) (undo-tree-id1879 . -1) 1455) nil (25412 1089 750933 707000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -1517) (undo-tree-id1878 . -1) 1518) nil (25412 1089 750923 177000) 0 nil])
([nil nil ((#("#  def show(conn, %{\"id\" => id}) do
  #    quota = Creditos.get_quota!(id)
  #    render(conn, \"show.json\", quota: quota)
  #  end

  #  def update(conn, %{\"id\" => id, \"quota\" => quota_params}) do
  #    quota = Creditos.get_quota!(id)
  #    with {:ok, %Quota{} = quota} <- Creditos.update_quota(quota, quota_params) do
  #     render(conn, \"show.json\", quota: quota)
  #   end
  # end

  # def delete(conn, %{\"id\" => id}) do
  #   quota = Creditos.get_quota!(id)
  #   with {:ok, %Quota{}} <- Creditos.delete_quota(quota) do
  #     send_resp(conn, :no_content, \"\")
  #   end
  # end
" 0 3 (fontified t face font-lock-comment-delimiter-face) 3 13 (fontified t face font-lock-comment-face) 13 16 (fontified t face font-lock-comment-face) 16 20 (fontified t face font-lock-comment-face) 20 21 (syntax-table (15) fontified t face font-lock-comment-face) 21 22 (fontified t face font-lock-comment-face) 22 23 (fontified t face font-lock-comment-face) 23 24 (syntax-table (15) fontified t face font-lock-comment-face) 24 33 (fontified t face font-lock-comment-face) 33 34 (fontified t face font-lock-comment-face) 34 36 (fontified t face font-lock-comment-face) 36 38 (fontified t) 38 43 (fontified t face font-lock-comment-delimiter-face) 43 55 (fontified t face font-lock-comment-face) 55 69 (fontified t face font-lock-comment-face) 69 75 (fontified t face font-lock-comment-face) 75 77 (fontified t) 77 82 (fontified t face font-lock-comment-delimiter-face) 82 95 (fontified t face font-lock-comment-face) 95 96 (syntax-table (15) fontified t face font-lock-comment-face) 96 105 (fontified t face font-lock-comment-face) 105 106 (syntax-table (15) fontified t face font-lock-comment-face) 106 120 (fontified t face font-lock-comment-face) 120 122 (fontified t face font-lock-comment-face) 122 124 (fontified t) 124 127 (fontified t face font-lock-comment-delimiter-face) 127 131 (fontified t face font-lock-comment-face) 131 132 (fontified t) 132 134 (fontified t) 134 137 (fontified t face font-lock-comment-delimiter-face) 137 154 (fontified t face font-lock-comment-face) 154 156 (fontified t face font-lock-comment-face) 156 157 (syntax-table (15) fontified t face font-lock-comment-face) 157 159 (fontified t face font-lock-comment-face) 159 160 (syntax-table (15) fontified t face font-lock-comment-face) 160 168 (fontified t face font-lock-comment-face) 168 169 (syntax-table (15) fontified t face font-lock-comment-face) 169 172 (fontified t face font-lock-comment-face) 172 174 (fontified t face font-lock-comment-face) 174 175 (syntax-table (15) fontified t face font-lock-comment-face) 175 188 (fontified t face font-lock-comment-face) 188 190 (fontified t face font-lock-comment-face) 190 197 (fontified t face font-lock-comment-face) 197 199 (fontified t) 199 202 (fontified t face font-lock-comment-delimiter-face) 202 203 (fontified t face font-lock-comment-delimiter-face) 203 204 (fontified t face font-lock-comment-delimiter-face) 204 219 (fontified t face font-lock-comment-face) 219 235 (fontified t face font-lock-comment-face) 235 236 (fontified t face font-lock-comment-face) 236 238 (fontified t) 238 243 (fontified t face font-lock-comment-delimiter-face) 243 312 (fontified t face font-lock-comment-face) 312 321 (fontified t face font-lock-comment-face) 321 323 (fontified t) 323 329 (fontified t face font-lock-comment-delimiter-face) 329 342 (fontified t face font-lock-comment-face) 342 343 (syntax-table (15) fontified t face font-lock-comment-face) 343 348 (fontified t face font-lock-comment-face) 348 349 (fontified t face font-lock-comment-face) 349 352 (fontified t face font-lock-comment-face) 352 353 (syntax-table (15) fontified t face font-lock-comment-face) 353 354 (fontified t face font-lock-comment-face) 354 369 (fontified t face font-lock-comment-face) 369 371 (fontified t) 371 375 (fontified t face font-lock-comment-delimiter-face) 375 376 (fontified t face font-lock-comment-face) 376 378 (fontified t face font-lock-comment-face) 378 379 (fontified t face font-lock-comment-face) 379 381 (fontified t) 381 383 (fontified t face font-lock-comment-delimiter-face) 383 387 (fontified t face font-lock-comment-face) 387 390 (fontified t) 390 392 (fontified t face font-lock-comment-delimiter-face) 392 395 (fontified t face font-lock-comment-face) 395 396 (fontified t face font-lock-comment-face) 396 398 (fontified t face font-lock-comment-face) 398 399 (fontified t face font-lock-comment-face) 399 407 (fontified t face font-lock-comment-face) 407 408 (fontified t face font-lock-comment-face) 408 411 (fontified t face font-lock-comment-face) 411 412 (syntax-table (15) fontified t face font-lock-comment-face) 412 414 (fontified t face font-lock-comment-face) 414 415 (syntax-table (15) fontified t face font-lock-comment-face) 415 416 (fontified t face font-lock-comment-face) 416 421 (fontified t face font-lock-comment-face) 421 425 (fontified t face font-lock-comment-face) 425 426 (fontified t face font-lock-comment-face) 426 427 (fontified t face font-lock-comment-face) 427 429 (fontified t) 429 433 (fontified t face font-lock-comment-delimiter-face) 433 441 (fontified t face font-lock-comment-face) 441 452 (fontified t face font-lock-comment-face) 452 461 (fontified t face font-lock-comment-face) 461 462 (fontified t face font-lock-comment-face) 462 465 (fontified t face font-lock-comment-face) 465 466 (fontified t) 466 467 (fontified t) 467 471 (fontified t face font-lock-comment-delimiter-face) 471 472 (fontified t face font-lock-comment-face) 472 474 (face font-lock-comment-face fontified t) 474 485 (face font-lock-comment-face fontified t) 485 486 (face font-lock-comment-face fontified t) 486 491 (face font-lock-comment-face fontified t) 491 496 (face font-lock-comment-face fontified t) 496 497 (face font-lock-comment-face fontified t) 497 498 (face font-lock-comment-face fontified t) 498 527 (face font-lock-comment-face fontified t) 527 529 (fontified t) 529 535 (fontified t face font-lock-comment-delimiter-face) 535 536 (fontified t face font-lock-comment-face) 536 564 (fontified t face font-lock-comment-face) 564 565 (syntax-table (15) fontified t face font-lock-comment-face) 565 566 (syntax-table (15) fontified t face font-lock-comment-face) 566 568 (fontified t face font-lock-comment-face) 568 570 (fontified t) 570 574 (fontified t face font-lock-comment-delimiter-face) 574 575 (fontified t face font-lock-comment-face) 575 578 (fontified t face font-lock-comment-face) 578 580 (fontified t) 580 582 (fontified t face font-lock-comment-delimiter-face) 582 586 (fontified t face font-lock-comment-face)) . -1620) (undo-tree-id1888 . -586) (undo-tree-id1889 . -586) (undo-tree-id1890 . -131) (undo-tree-id1891 . -131) (undo-tree-id1892 . -197) (undo-tree-id1893 . -197) (undo-tree-id1894 . -236) (undo-tree-id1895 . -236) (undo-tree-id1896 . -132) (undo-tree-id1897 . -132) (undo-tree-id1898 . -369) (undo-tree-id1899 . -369) (undo-tree-id1900 . -75) (undo-tree-id1901 . -75) (undo-tree-id1902 . -122) (undo-tree-id1903 . -122) (undo-tree-id1904 . -321) (undo-tree-id1905 . -321) (undo-tree-id1906 . -586) 2206 (t 25412 1089 784698 169000)) nil (25412 1182 493010 209000) 0 nil])
([nil nil ((#("# ++++++++funcion Alternativa a parse_incomming_data++++" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 3 (fontified t face font-lock-comment-face) 3 4 (fontified t face font-lock-comment-face) 4 12 (fontified t face font-lock-comment-face) 12 56 (fontified t face font-lock-comment-face)) . 1634)) nil (25412 1182 492982 47000) 0 nil])
([nil nil ((#("  # **********************************************************
  # fixed functions
  # **********************************************************
" 0 2 (fontified t) 2 4 (fontified t face font-lock-comment-delimiter-face) 4 63 (fontified t face font-lock-comment-face) 63 65 (fontified t) 65 67 (fontified t face font-lock-comment-delimiter-face) 67 83 (fontified t face font-lock-comment-face) 83 85 (fontified t) 85 87 (fontified t face font-lock-comment-delimiter-face) 87 146 (fontified t face font-lock-comment-face)) . -4880) (undo-tree-id1883 . -146) (undo-tree-id1884 . -146) (undo-tree-id1885 . -146) (undo-tree-id1886 . -146) (undo-tree-id1887 . -146) 5026) nil (25412 1182 492978 620000) 0 nil])
([nil nil ((#("  # ************************************************************" 0 2 (fontified t) 2 4 (fontified t face font-lock-comment-delimiter-face) 4 10 (fontified t face font-lock-comment-face) 10 57 (fontified t face font-lock-comment-face) 57 62 (fontified t face font-lock-comment-face) 62 64 (fontified t face font-lock-comment-face)) . 5995)) nil (25412 1182 492955 818000) 0 nil])
([nil nil ((#("    |> IO.inspect()" 0 7 (fontified t) 7 9 (fontified t face font-lock-type-face) 9 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t)) . 510) (t 25412 1182 511437 808000)) nil (25412 1193 853784 333000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 510) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1)) nil (25412 1193 853776 308000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 985) (#(" " 0 1 (fontified t)) . 985) (#(" " 0 1 (fontified t)) . 985) (#(" " 0 1 (fontified t)) . 985) (#(" " 0 1 (fontified t)) . 985) (#(" " 0 1 (fontified t)) . 985) (#(" " 0 1 (fontified t)) . 985) (#(" " 0 1 (fontified t)) . 985) (#(" " 0 1 (fontified t)) . 985) (#("	" 0 1 (fontified t)) . 985) (t 25412 1193 895292 473000)) nil (25412 1264 896301 940000) 0 nil])
([nil nil ((986 . 992) (#("       " 0 1 (fontified t) 1 7 (fontified t)) . 986) (#("	     " 0 6 (fontified nil)) . 985) (985 . 991) (985 . 986)) nil (25412 1264 896295 208000) 0 nil])
([nil nil ((987 . 993) (#("  " 0 2 (fontified t)) . 987) (#("	     " 0 6 (fontified nil)) . 986) (undo-tree-id1963 . -4) (undo-tree-id1964 . -4) (990 . 992) (990 . 991)) nil (25412 1264 896290 419000) 0 nil])
([nil nil (("

" . -5855) (5588 . 5646) (#("    |> Enum.map(fn {k,v} -> {k,v <> \" 00:00:00 Z\"} end )
" 7 11 (face font-lock-type-face) 16 18 (face font-lock-keyword-face) 36 37 (syntax-table (15) face font-lock-string-face) 37 48 (face font-lock-string-face) 48 49 (syntax-table (15) face font-lock-string-face) 51 54 (face font-lock-keyword-face) 55 56 (rear-nonsticky t)) . -5588) (undo-tree-id1917 . -7) ("
" . -4741) (1650 . 1778) (#("    process_quota_map(quota_plan_list, loan_code_field) ++ process_concept_quota_map(quota_concept_list, loan_code_field)
" 54 55 (rear-nonsticky t) 120 121 (rear-nonsticky t)) . -1650) ("  


    

  
  
" . -1490) (undo-tree-id1918 . -7) (undo-tree-id1919 . -9) (undo-tree-id1920 . -2) (977 . 1464) (#("	     with [:ClientsQuota] <- quota_map |> Map.keys(),
                 {:ok, %ClientsQuota{} = clients_quota} <-
                   Creditos.create_clients_quota(
                     quota_map
                     |> Map.values()
                     |> hd
                   ) do

              conn
                |> put_status(:created)
                |> put_resp_header(\"location\", Routes.quota_path(conn, :show, clients_quota))
                       |> put_view(CabbotWeb.ClientsQuotaView)
                       |> render(\"show.json\", clients_quota: clients_quota)
" 0 6 (fontified t) 6 10 (fontified t face font-lock-keyword-face) 10 12 (fontified t) 12 14 (fontified t face elixir-atom-face) 14 25 (fontified t face elixir-atom-face) 25 32 (fontified t) 32 43 (fontified t) 43 46 (fontified t face font-lock-type-face) 46 54 (fontified t) 54 55 (fontified t) 55 61 (fontified t) 61 62 (fontified t) 62 72 (fontified t) 72 73 (fontified t) 73 76 (fontified t face elixir-atom-face) 76 78 (fontified t) 78 91 (fontified t face font-lock-type-face) 91 95 (fontified t) 95 113 (fontified t) 113 114 (fontified t) 114 120 (fontified t) 120 133 (fontified t) 133 140 (fontified t face font-lock-type-face) 140 141 (fontified t face font-lock-type-face) 141 144 (fontified t) 144 151 (fontified t) 151 164 (fontified t) 164 170 (fontified t) 170 172 (fontified t) 172 185 (fontified t) 185 188 (fontified t) 188 193 (fontified t) 193 195 (fontified t) 195 199 (fontified t) 199 201 (fontified t) 201 214 (fontified t) 214 216 (fontified t) 216 219 (fontified t) 219 222 (fontified t face font-lock-type-face) 222 230 (fontified t) 230 232 (fontified t) 232 236 (fontified t) 236 237 (fontified t) 237 238 (fontified t) 238 253 (fontified t) 253 259 (fontified t) 259 265 (fontified t) 265 266 (fontified t) 266 267 (fontified t) 267 272 (fontified t) 272 275 (fontified t) 275 278 (fontified t) 278 280 (fontified t) 280 282 (fontified t face font-lock-keyword-face) 282 283 (fontified t) 283 284 (fontified t) 284 292 (fontified t) 292 298 (fontified t) 298 303 (fontified t) 303 306 (fontified t) 306 311 (fontified t) 311 314 (fontified t) 314 317 (fontified t) 317 319 (fontified t) 319 333 (fontified t) 333 341 (fontified t face elixir-atom-face) 341 343 (fontified t) 343 351 (fontified t) 351 359 (fontified t) 359 370 (fontified t) 370 374 (fontified t) 374 378 (fontified t) 378 379 (syntax-table (15) fontified t face font-lock-string-face) 379 387 (fontified t face font-lock-string-face) 387 388 (syntax-table (15) fontified t face font-lock-string-face) 388 389 (fontified t) 389 390 (fontified t) 390 396 (fontified t face font-lock-type-face) 396 403 (fontified t) 403 404 (fontified t) 404 414 (fontified t) 414 418 (fontified t face elixir-atom-face) 418 419 (fontified t face elixir-atom-face) 419 437 (fontified t) 437 438 (fontified t) 438 445 (fontified t) 445 460 (fontified t) 460 461 (fontified t) 461 462 (fontified t) 462 472 (fontified t) 472 473 (fontified t face font-lock-type-face) 473 475 (fontified t face font-lock-type-face) 475 476 (fontified t face font-lock-type-face) 476 477 (fontified t face font-lock-type-face) 477 484 (fontified t face font-lock-type-face) 484 485 (fontified t face font-lock-type-face) 485 487 (fontified t face font-lock-type-face) 487 489 (fontified t face font-lock-type-face) 489 490 (fontified t face font-lock-type-face) 490 491 (fontified t face font-lock-type-face) 491 492 (fontified t face font-lock-type-face) 492 498 (fontified t face font-lock-type-face) 498 500 (fontified t) 500 501 (fontified t) 501 508 (fontified t) 508 523 (fontified t) 523 533 (fontified t) 533 534 (fontified t syntax-table (15) face font-lock-string-face) 534 543 (fontified t face font-lock-string-face) 543 544 (fontified t syntax-table (15) face font-lock-string-face) 544 546 (fontified t) 546 548 (fontified t face elixir-atom-face) 548 550 (fontified t face elixir-atom-face) 550 555 (fontified t face elixir-atom-face) 555 560 (face elixir-atom-face fontified t) 560 576 (fontified t)) . -977) (undo-tree-id1921 . -303) (undo-tree-id1922 . -303) (undo-tree-id1923 . -284) (undo-tree-id1924 . -284) (undo-tree-id1925 . -283) (undo-tree-id1926 . -283) (undo-tree-id1927 . -259) (undo-tree-id1928 . -259) (undo-tree-id1929 . -232) (undo-tree-id1930 . -232) (undo-tree-id1931 . -195) (undo-tree-id1932 . -195) (undo-tree-id1933 . -164) (undo-tree-id1934 . -164) (undo-tree-id1935 . -114) (undo-tree-id1936 . -114) (undo-tree-id1937 . -55) (undo-tree-id1938 . -55) (undo-tree-id1939 . -54) (undo-tree-id1940 . -54) (966 . 976) (#("	   end

" 0 4 (fontified t) 4 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t) 8 9 (fontified t)) . -966) (undo-tree-id1941 . -9) (undo-tree-id1942 . -8) (undo-tree-id1943 . -8) (undo-tree-id1944 . -9) (undo-tree-id1945 . -9) (undo-tree-id1946 . 1) (undo-tree-id1947 . -9) (undo-tree-id1948 . -9) (undo-tree-id1949 . -9) (undo-tree-id1950 . -9) (undo-tree-id1951 . -9) (undo-tree-id1952 . -9) (undo-tree-id1953 . -9) (undo-tree-id1954 . -9) (undo-tree-id1955 . -9) (#("	     
" 0 1 (fontified t) 1 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t)) . -757) (undo-tree-id1956 . -7) (undo-tree-id1957 . -7) (undo-tree-id1958 . -7) (#(" 
" 0 1 (fontified t) 1 2 (fontified t)) . -540) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -2) (undo-tree-id1962 . -2) (401 . 402) (#("  
" 0 2 (fontified t) 2 3 (fontified t)) . -401)) nil (25412 1264 896275 81000) 0 nil])
([nil nil ((#("|> IO.inspect()" 0 3 (fontified t) 3 4 (face font-lock-type-face fontified t) 4 5 (fontified t face font-lock-type-face) 5 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t)) . 5650) (undo-tree-id1915 . -4) (undo-tree-id1916 . -15)) nil (25412 1264 896195 122000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 5650) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1)) nil (25412 1264 896187 979000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 5650) (#(" " 0 1 (fontified t)) . 5650) (#(" " 0 1 (fontified t)) . 5650) (#(" " 0 1 (fontified t)) . 5650)) nil (25412 1264 896159 145000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t face font-lock-comment-face)) . -3045) (undo-tree-id1966 . -1) 3046 (t 25412 1264 926427 59000)) nil (25412 1318 346150 930000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t face font-lock-comment-face)) . -3050) (undo-tree-id1965 . -1) 3051) nil (25412 1318 346145 159000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face font-lock-string-face)) . -940) (undo-tree-id1969 . -1) (#("h" 0 1 (fontified t face font-lock-string-face)) . -941) (undo-tree-id1970 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -942) (undo-tree-id1971 . -1) (#("w" 0 1 (fontified t face font-lock-string-face)) . -943) (undo-tree-id1972 . -1) 944 (t 25412 1318 369818 998000)) nil (25412 3146 339299 418000) 0 nil])
([nil nil ((940 . 943)) nil (25412 3146 339294 860000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face font-lock-string-face)) . -942) (undo-tree-id1968 . -1) 943) nil (25412 3146 339293 718000) 0 nil])
([nil nil ((942 . 945)) nil (25412 3146 339291 504000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face font-lock-string-face)) . -944) (undo-tree-id1967 . -1) 945) nil (25412 3146 339289 700000) 0 nil])
([nil nil ((944 . 945)) nil (25412 3146 339276 576000) 0 nil])
([nil nil ((958 . 959) (t 25412 3146 353447 633000)) nil (25412 3159 447155 235000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face elixir-atom-face)) . -958) (undo-tree-id1973 . -1) 959 (t 25412 3159 477377 703000)) nil (25412 3164 918220 830000) 0 nil])
([nil nil ((958 . 959) (t 25412 3164 953348 541000)) nil (25412 3183 529134 371000) 0 nil])
([nil nil ((758 . 764) (#("	     " 0 6 (fontified t)) . 757) (undo-tree-id1974 . -6) (756 . 764) (t 25412 3183 541249 633000)) nil (25412 3530 817676 354000) 0 nil])
([nil nil ((764 . 769)) nil (25412 3530 817659 31000) 0 nil])
([nil nil ((769 . 776)) nil (25412 3530 817657 7000) 0 nil])
([nil nil ((789 . 790) (776 . 790)) nil (25412 3530 817653 902000) 0 nil])
([nil nil ((790 . 792)) nil (25412 3530 817645 817000) 0 nil])
([nil nil ((793 . 800) (t 25412 3530 839417 68000)) nil (25412 3540 572623 342000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -813) (813 . 814) (#(")" 0 1 (fontified nil)) . -813) (813 . 814) (800 . 814)) nil (25412 3540 572613 313000) 0 nil])
([nil nil ((979 . 980) (t 25412 3540 631365 742000)) nil (25412 3607 710828 981000) 0 nil])
([nil nil ((816 . 817) (t 25412 3607 779014 144000)) nil (25412 3634 887627 493000) 0 nil])
([nil nil ((830 . 831)) nil (25412 3634 887624 868000) 0 nil])
([nil nil ((863 . 864)) nil (25412 3634 887622 63000) 0 nil])
([nil nil ((942 . 943)) nil (25412 3634 887613 978000) 0 nil])
([nil nil ((770 . 771) (t 25412 3634 918872 207000)) nil (25412 3710 980671 480000) 0 nil])
([nil nil ((507 . 512) (t 25412 3710 990474 846000)) nil (25412 3837 659873 484000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -526) (526 . 527) (#(")" 0 1 (fontified nil)) . -526) (526 . 527) (512 . 527)) nil (25412 3837 659868 224000) 0 nil])
([nil nil ((#("
	     quota
#	     |> Enum.into(%{})
	     |>IO.inspect()
" 0 1 (fontified t) 1 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t face font-lock-comment-delimiter-face) 14 23 (fontified t face font-lock-comment-face) 23 27 (fontified t face font-lock-comment-face) 27 32 (fontified t face font-lock-comment-face) 32 34 (fontified t face font-lock-comment-face) 34 36 (fontified t face font-lock-comment-face) 36 37 (fontified t face font-lock-comment-face) 37 38 (fontified t face font-lock-comment-face) 38 46 (fontified t) 46 48 (fontified t face font-lock-type-face) 48 56 (fontified t) 56 57 (fontified t) 57 58 (fontified t) 58 59 (fontified t)) . -777) (undo-tree-id1975 . -59) (undo-tree-id1976 . -59) (undo-tree-id1977 . -59) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -59) (undo-tree-id1981 . -59) (undo-tree-id1982 . -13) (undo-tree-id1983 . -13) (undo-tree-id1984 . -38) (undo-tree-id1985 . -38) (undo-tree-id1986 . -59) (undo-tree-id1987 . -59) (undo-tree-id1988 . -59) (undo-tree-id1989 . -59) 836 (t 25412 3837 693814 360000)) nil (25412 3841 346093 491000) 0 nil])
([nil nil ((560 . 561) (t 25412 3841 357795 283000)) nil (25412 4514 93160 227000) 0 nil])
([nil nil ((609 . 610)) nil (25412 4514 93158 73000) 0 nil])
([nil nil ((648 . 649)) nil (25412 4514 93156 460000) 0 nil])
([nil nil ((685 . 686)) nil (25412 4514 93154 757000) 0 nil])
([nil nil ((711 . 712)) nil (25412 4514 93152 833000) 0 nil])
([nil nil ((743 . 744)) nil (25412 4514 93150 860000) 0 nil])
([nil nil ((528 . 529)) nil (25412 4514 93148 816000) 0 nil])
([nil nil ((529 . 533) (#("    " 0 4 (fontified t)) . 528) (undo-tree-id1992 . -4) (undo-tree-id1993 . -4) (527 . 533)) nil (25412 4514 93145 700000) 0 nil])
([nil nil ((530 . 534) (#("    " 0 4 (fontified t)) . 529) (undo-tree-id1990 . -4) (undo-tree-id1991 . -4) (533 . 534)) nil (25412 4514 93137 314000) 0 nil])
([nil nil ((530 . 534) (#("    " 0 4 (fontified nil)) . 529) (529 . 533) (529 . 530)) nil (25412 4514 93113 39000) 0 nil])
([nil nil ((778 . 779) (t 25412 4514 154304 438000)) nil (25412 4532 441549 907000) 0 nil])
([nil nil ((1522 . 1523) (t 25412 4532 470209 606000)) nil (25412 4544 839071 182000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -1522) (undo-tree-id2002 . -1) 1523 (t 25412 4544 862145 444000)) nil (25412 4566 168456 683000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -540) (undo-tree-id2001 . -1) 541) nil (25412 4566 168451 944000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -572) (undo-tree-id2000 . -1) 573) nil (25412 4566 168447 786000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -620) (undo-tree-id1999 . -1) 621) nil (25412 4566 168443 568000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -658) (undo-tree-id1998 . -1) 659) nil (25412 4566 168439 451000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -694) (undo-tree-id1997 . -1) 695) nil (25412 4566 168435 83000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -719) (undo-tree-id1996 . -1) 720) nil (25412 4566 168429 993000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -750) (undo-tree-id1995 . -1) 751) nil (25412 4566 168423 722000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -771) (undo-tree-id1994 . -1) 772) nil (25412 4566 168413 112000) 0 nil])
([nil nil ((529 . 533) (t 25412 4566 190035 30000)) nil (25412 4619 99523 12000) 0 nil])
([nil nil ((461 . 462)) nil (25412 4619 99520 27000) 0 nil])
([nil nil ((462 . 465)) nil (25412 4619 99517 222000) 0 nil])
([nil nil ((543 . 549)) nil (25412 4619 99509 517000) 0 nil])
([nil nil ((537 . 548) (t 25412 4619 161760 919000)) nil (25412 4652 816977 931000) 0 nil])
([nil nil ((#("E" 0 1 (fontified t face font-lock-type-face)) . -543) (undo-tree-id2004 . -1) (#("n" 0 1 (fontified t face font-lock-type-face)) . -544) (undo-tree-id2005 . -1) (#("u" 0 1 (fontified t face font-lock-type-face)) . -545) (undo-tree-id2006 . -1) (#("m" 0 1 (fontified t face font-lock-type-face)) . -546) (undo-tree-id2007 . -1) (#("." 0 1 (fontified t)) . -547) (undo-tree-id2008 . -1) 548) nil (25412 4652 816974 103000) 0 nil])
([nil nil ((nil rear-nonsticky nil 591 . 592) (nil fontified nil 543 . 592) (543 . 592)) nil (25412 4652 816961 350000) 0 nil])
([nil nil ((591 . 596)) nil (25412 4652 816958 775000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -610) (610 . 611) (#(")" 0 1 (fontified nil)) . -610) (610 . 611) (596 . 611)) nil (25412 4652 816955 759000) 0 nil])
([nil nil ((#("    |> IO.inspect()" 0 7 (fontified t) 7 9 (fontified t face font-lock-type-face) 9 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t)) . 512) (undo-tree-id2003 . -19)) nil (25412 4652 816948 195000) 0 nil])
([nil nil ((572 . 577) (t 25412 4652 845586 645000)) nil (25412 4773 824545 649000) 0 nil])
([nil nil ((nil rear-nonsticky nil 625 . 626) (nil fontified nil 577 . 626) (577 . 626)) nil (25412 4773 824542 864000) 0 nil])
([nil nil ((521 . 525) (#(" " 0 1 (fontified t)) . 520) (undo-tree-id2013 . -1) (521 . 522)) nil (25412 4773 824538 366000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 630) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1)) nil (25412 4773 824527 726000) 0 nil])
([nil nil ((465 . 466) (t 25412 4773 848960 738000)) nil (25412 4993 768341 503000) 0 nil])
([nil nil ((650 . 655) (t 25412 4993 803823 468000)) nil (25412 5881 769942 250000) 0 nil])
([nil nil ((655 . 657)) nil (25412 5881 769941 328000) 0 nil])
([nil nil ((#("?" 0 1 (fontified t)) . -656) (undo-tree-id2034 . -1) 657) nil (25412 5881 769940 316000) 0 nil])
([nil nil ((656 . 663)) nil (25412 5881 769938 874000) 0 nil])
([nil nil ((663 . 683)) nil (25412 5881 769938 122000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -684) (684 . 685) (#(")" 0 1 (fontified nil)) . -684) (684 . 685) (683 . 685)) nil (25412 5881 769937 100000) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -635) (undo-tree-id2017 . -1) (#(">" 0 1 (fontified t)) . -636) (undo-tree-id2018 . -1) (#(" " 0 1 (fontified t)) . -637) (undo-tree-id2019 . -1) (#("I" 0 1 (fontified t face font-lock-type-face)) . -638) (undo-tree-id2020 . -1) (#("O" 0 1 (fontified t face font-lock-type-face)) . -639) (undo-tree-id2021 . -1) (#("." 0 1 (fontified t)) . -640) (undo-tree-id2022 . -1) (#("i" 0 1 (fontified t)) . -641) (undo-tree-id2023 . -1) (#("n" 0 1 (fontified t)) . -642) (undo-tree-id2024 . -1) (#("s" 0 1 (fontified t)) . -643) (undo-tree-id2025 . -1) (#("p" 0 1 (fontified t)) . -644) (undo-tree-id2026 . -1) (#("e" 0 1 (fontified t)) . -645) (undo-tree-id2027 . -1) (#("c" 0 1 (fontified t)) . -646) (undo-tree-id2028 . -1) (#("t" 0 1 (fontified t)) . -647) (undo-tree-id2029 . -1) (#("(" 0 1 (fontified t)) . -648) (undo-tree-id2030 . -1) (#(")" 0 1 (fontified t)) . -649) (undo-tree-id2031 . -1) (undo-tree-id2032 . 1) (undo-tree-id2033 . -1) 650) nil (25412 5881 769933 143000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 635) (#(" " 0 1 (fontified t)) . 635) (#(" " 0 1 (fontified t)) . 635) (#(" " 0 1 (fontified t)) . 635) (#("
" 0 1 (fontified t)) . 635) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1)) nil (25412 5881 769912 986000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 631) (undo-tree-id2035 . -4) (635 . 636) (t 25412 5881 779235 87000)) nil (25412 5952 166453 106000) 0 nil])
([nil nil ((632 . 636)) nil (25412 5952 166436 265000) 0 nil])
([nil nil ((635 . 636)) nil (25412 5952 166433 530000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -649) (649 . 650) (#(")" 0 1 (fontified nil)) . -649) (649 . 650) (631 . 650)) nil (25412 5952 166424 383000) 0 nil])
([nil nil ((521 . 528) (t 25412 5952 190871 322000)) nil (25412 6148 676959 705000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -660) (undo-tree-id2036 . -1) (#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -661) (undo-tree-id2037 . -1) (#(" " 0 1 (fontified t face font-lock-comment-delimiter-face)) . -662) (undo-tree-id2038 . -1) 663) nil (25412 6148 676957 370000) 0 nil])
([nil nil ((660 . 662)) nil (25412 6148 676943 495000) 0 nil])
([nil nil ((691 . 705)) nil (25412 6148 676939 46000) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -642) (undo-tree-id2042 . -1) (#(">" 0 1 (fontified t)) . -643) (undo-tree-id2043 . -1) (#(" " 0 1 (fontified t)) . -644) (undo-tree-id2044 . -1) (#("I" 0 1 (fontified t face font-lock-type-face)) . -645) (undo-tree-id2045 . -1) (#("O" 0 1 (fontified t face font-lock-type-face)) . -646) (undo-tree-id2046 . -1) (#("." 0 1 (fontified t)) . -647) (undo-tree-id2047 . -1) (#("i" 0 1 (fontified t)) . -648) (undo-tree-id2048 . -1) (#("n" 0 1 (fontified t)) . -649) (undo-tree-id2049 . -1) (#("s" 0 1 (fontified t)) . -650) (undo-tree-id2050 . -1) (#("p" 0 1 (fontified t)) . -651) (undo-tree-id2051 . -1) (#("e" 0 1 (fontified t)) . -652) (undo-tree-id2052 . -1) (#("c" 0 1 (fontified t)) . -653) (undo-tree-id2053 . -1) (#("t" 0 1 (fontified t)) . -654) (undo-tree-id2054 . -1) (#("(" 0 1 (fontified t)) . -655) (undo-tree-id2055 . -1) (#(")" 0 1 (fontified t)) . -656) (undo-tree-id2056 . -1) (undo-tree-id2057 . 1) (undo-tree-id2058 . -1) 657 (t 25412 6148 689856 228000)) nil (25412 6152 124834 83000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 642) (#(" " 0 1 (fontified t)) . 642) (#(" " 0 1 (fontified t)) . 642) (#(" " 0 1 (fontified t)) . 642) (#("
" 0 1 (fontified t)) . 642) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1)) nil (25412 6152 124815 748000) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -642) (undo-tree-id2059 . -1) (#(">" 0 1 (fontified t)) . -643) (undo-tree-id2060 . -1) (#(" " 0 1 (fontified t)) . -644) (undo-tree-id2061 . -1) 645 (t 25412 6152 149838 354000)) nil (25412 6165 456006 365000) 0 nil])
([nil nil ((660 . 661) (t 25412 6165 469769 555000)) nil (25412 6183 537280 622000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-type-face)) . -647) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (#("o" 0 1 (fontified t face font-lock-type-face)) . -648) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (#("s" 0 1 (fontified t face font-lock-type-face)) . -649) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (#("." 0 1 (fontified t)) . -650) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (#("c" 0 1 (fontified t)) . -651) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (#("r" 0 1 (fontified t)) . -652) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (#("e" 0 1 (fontified t)) . -653) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (#("a" 0 1 (fontified t)) . -654) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (#("t" 0 1 (fontified t)) . -655) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (#("e" 0 1 (fontified t)) . -656) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (#("_" 0 1 (fontified t)) . -657) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (#("m" 0 1 (fontified t)) . -658) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (#("a" 0 1 (fontified t)) . -659) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (#("n" 0 1 (fontified t)) . -660) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (#("y" 0 1 (fontified t)) . -661) (undo-tree-id2124 . -1) (#("_" 0 1 (fontified t)) . -662) (undo-tree-id2125 . -1) (#("q" 0 1 (fontified t)) . -663) (undo-tree-id2126 . -1) (#("u" 0 1 (fontified t)) . -664) (undo-tree-id2127 . -1) (#("o" 0 1 (fontified t)) . -665) (undo-tree-id2128 . -1) (#("t" 0 1 (fontified t)) . -666) (undo-tree-id2129 . -1) (#("a" 0 1 (fontified t)) . -667) (undo-tree-id2130 . -1) 668 (t 25412 6183 589675 966000)) nil (25412 6244 849499 496000) 0 nil])
([nil nil ((#("C" 0 1 (fontified t face font-lock-type-face)) . -642) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (#("r" 0 1 (fontified t face font-lock-type-face)) . -643) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (#("e" 0 1 (fontified t face font-lock-type-face)) . -644) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (#("d" 0 1 (fontified t face font-lock-type-face)) . -645) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (#("i" 0 1 (fontified t face font-lock-type-face)) . -646) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) 647) nil (25412 6244 849349 377000) 0 nil])
([nil nil ((642 . 646)) nil (25412 6244 849320 523000) 0 nil])
([nil nil ((646 . 647)) nil (25412 6244 849318 539000) 0 nil])
([nil nil ((#("R" 0 1 (fontified t face font-lock-type-face)) . -642) (undo-tree-id2062 . -1) (#("e" 0 1 (fontified t face font-lock-type-face)) . -643) (undo-tree-id2063 . -1) (#("p" 0 1 (fontified t face font-lock-type-face)) . -644) (undo-tree-id2064 . -1) (#("o" 0 1 (fontified t face font-lock-type-face)) . -645) (undo-tree-id2065 . -1) (#("." 0 1 (fontified t)) . -646) (undo-tree-id2066 . -1) 647) nil (25412 6244 849313 109000) 0 nil])
([nil nil ((642 . 654)) nil (25412 6244 849288 854000) 0 nil])
([nil nil ((654 . 662)) nil (25412 6244 849281 941000) 0 nil])
([nil nil ((#("E" 0 1 (fontified t face font-lock-type-face)) . -642) (undo-tree-id2131 . -1) (#("c" 0 1 (fontified t face font-lock-type-face)) . -643) (undo-tree-id2132 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -644) (undo-tree-id2133 . -1) (#("o" 0 1 (fontified t face font-lock-type-face)) . -645) (undo-tree-id2134 . -1) 646 (t 25412 6244 877359 387000)) nil (25412 6261 48120 761000) 0 nil])
([nil nil ((642 . 648)) nil (25412 6261 48103 989000) 0 nil])
([nil nil ((665 . 675) (t 25412 6261 69275 747000)) nil (25412 6298 16952 298000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified nil)) . -691) (691 . 692) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . -691) (691 . 692) (690 . 692) (#("\"" 0 1 (fontified nil syntax-table (15))) . -690) (689 . 691) (t 25412 6298 29084 830000)) nil (25412 6342 273694 471000) 0 nil])
([nil nil ((691 . 696)) nil (25412 6342 273692 668000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face font-lock-string-face)) . -691) (undo-tree-id2139 . -1) (#("m" 0 1 (fontified t face font-lock-string-face)) . -692) (undo-tree-id2140 . -1) (#("d" 0 1 (fontified t face font-lock-string-face)) . -693) (undo-tree-id2141 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -694) (undo-tree-id2142 . -1) (#("x" 0 1 (fontified t face font-lock-string-face)) . -695) (undo-tree-id2143 . -1) 696) nil (25412 6342 273691 45000) 0 nil])
([nil nil ((691 . 700)) nil (25412 6342 273686 155000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face font-lock-string-face)) . -691) (undo-tree-id2135 . -1) (#("h" 0 1 (fontified t face font-lock-string-face)) . -692) (undo-tree-id2136 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -693) (undo-tree-id2137 . -1) (#("w" 0 1 (fontified t face font-lock-string-face)) . -694) (undo-tree-id2138 . -1) 695) nil (25412 6342 273684 212000) 0 nil])
([nil nil ((691 . 694)) nil (25412 6342 273670 617000) 0 nil])
([nil nil ((694 . 696)) nil (25412 6342 273666 238000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -689) (undo-tree-id2144 . -1) (#("\"" 0 1 (fontified t syntax-table (15) face font-lock-string-face)) . -690) (undo-tree-id2145 . -1) (#("q" 0 1 (fontified t face font-lock-string-face)) . -691) (undo-tree-id2146 . -1) (#("u" 0 1 (fontified t face font-lock-string-face)) . -692) (undo-tree-id2147 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -693) (undo-tree-id2148 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -694) (undo-tree-id2149 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -695) (undo-tree-id2150 . -1) (#("." 0 1 (fontified t face font-lock-string-face)) . -696) (undo-tree-id2151 . -1) (#("j" 0 1 (fontified t face font-lock-string-face)) . -697) (undo-tree-id2152 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -698) (undo-tree-id2153 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -699) (undo-tree-id2154 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -700) (undo-tree-id2155 . -1) (#("\"" 0 1 (fontified t syntax-table (15) face font-lock-string-face)) . -701) (undo-tree-id2156 . -1) 702 (t 25412 6342 332855 989000)) nil (25412 6362 262436 55000) 0 nil])
([nil nil ((#("W" 0 1 (fontified t face font-lock-type-face)) . -671) (undo-tree-id2161 . -1) (#("e" 0 1 (fontified t face font-lock-type-face)) . -672) (undo-tree-id2162 . -1) (#("b" 0 1 (fontified t face font-lock-type-face)) . -673) (undo-tree-id2163 . -1) 674 (t 25412 6362 288752 905000)) nil (25412 6420 638762 198000) 0 nil])
([nil nil ((#("V" 0 1 (fontified t face font-lock-type-face)) . -677) (undo-tree-id2157 . -1) (#("i" 0 1 (fontified t face font-lock-type-face)) . -678) (undo-tree-id2158 . -1) (#("e" 0 1 (fontified t face font-lock-type-face)) . -679) (undo-tree-id2159 . -1) (#("w" 0 1 (fontified t face font-lock-type-face)) . -680) (undo-tree-id2160 . -1) 681) nil (25412 6420 638755 185000) 0 nil])
([nil nil ((#("C" 0 1 (fontified t face font-lock-type-face)) . -665) (undo-tree-id2164 . -1) (#("a" 0 1 (fontified t face font-lock-type-face)) . -666) (undo-tree-id2165 . -1) (#("b" 0 1 (fontified t face font-lock-type-face)) . -667) (undo-tree-id2166 . -1) (#("b" 0 1 (fontified t face font-lock-type-face)) . -668) (undo-tree-id2167 . -1) (#("o" 0 1 (fontified t face font-lock-type-face)) . -669) (undo-tree-id2168 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -670) (undo-tree-id2169 . -1) (#("." 0 1 (fontified t face font-lock-type-face)) . -671) (undo-tree-id2170 . -1) 672 (t 25412 6420 660451 380000)) nil (25412 6436 257321 161000) 0 nil])
([nil nil ((584 . 589) (t 25412 6436 268370 758000)) nil (25412 6545 91177 869000) 0 nil])
([nil nil ((nil rear-nonsticky nil 677 . 678) (nil fontified nil 589 . 678) (589 . 678)) nil (25412 6545 91173 992000) 0 nil])
([nil nil ((682 . 683)) nil (25412 6545 91165 607000) 0 nil])
([nil nil ((678 . 683) (t 25412 6545 115808 493000)) nil (25412 6598 601887 225000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -697) (697 . 698) (#(")" 0 1 (fontified nil)) . -697) (697 . 698) (683 . 698)) nil (25412 6598 601881 785000) 0 nil])
([nil nil ((512 . 517) (t 25412 6598 623532 98000)) nil (25412 6631 704212 742000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -531) (531 . 532) (#(")" 0 1 (fontified nil)) . -531) (531 . 532) (517 . 532)) nil (25412 6631 704202 703000) 0 nil])
([nil nil ((3407 . 3414) (t 25412 6631 727361 95000)) nil (25412 6677 384314 473000) 0 nil])
([nil nil ((3414 . 3416)) nil (25412 6677 384310 966000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3480 . 3481) (nil fontified nil 3480 . 3481) (nil fontified nil 3477 . 3480) (nil fontified nil 3463 . 3477) (nil fontified nil 3457 . 3463) (nil fontified nil 3446 . 3457) (nil fontified nil 3444 . 3446) (nil fontified nil 3442 . 3444) (nil fontified nil 3441 . 3442) (nil fontified nil 3432 . 3441) (nil fontified nil 3431 . 3432) (nil fontified nil 3422 . 3431) (nil fontified nil 3419 . 3422) (nil fontified nil 3416 . 3419) (3416 . 3481)) nil (25412 6677 384302 0) 0 nil])
([nil nil ((#("# |> Enum.map(fn x -> x |> Map.values() |> hd end)" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 5 (fontified t face font-lock-comment-face) 5 9 (fontified t face font-lock-comment-face) 9 14 (fontified t face font-lock-comment-face) 14 16 (fontified t face font-lock-comment-face) 16 27 (fontified t face font-lock-comment-face) 27 30 (fontified t face font-lock-comment-face) 30 46 (fontified t face font-lock-comment-face) 46 49 (fontified t face font-lock-comment-face) 49 50 (fontified t face font-lock-comment-face)) . 722) (undo-tree-id2174 . -2) (undo-tree-id2175 . -50) (t 25412 7370 0 0)) nil (25412 8372 682485 460000) 0 nil])
([nil nil ((722 . 723)) nil (25412 8372 682475 148000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 723) (#(" " 0 1 (fontified t)) . 723) (#(" " 0 1 (fontified t)) . 723) (#(" " 0 1 (fontified t)) . 723) (#("
" 0 1 (rear-nonsticky t fontified t)) . 723) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1)) nil (25412 8372 682466 690000) 0 nil])
([nil nil ((758 . 777) (t 25412 8372 714901 419000)) nil (25412 8409 601007 296000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -775) (undo-tree-id2176 . -1) (#("y" 0 1 (fontified t)) . -776) (undo-tree-id2177 . -1) 777) nil (25412 8409 601005 953000) 0 nil])
([nil nil ((775 . 789)) nil (25412 8409 600994 549000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -790) (790 . 791) (#(")" 0 1 (fontified nil)) . -790) (790 . 791) (789 . 791)) nil (25412 8409 600992 64000) 0 nil])
([nil nil ((790 . 794)) nil (25412 8409 600987 525000) 0 nil])
([nil nil ((722 . 723) (t 25412 8409 610762 742000)) nil (25412 8415 399959 560000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -722) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (#(" " 0 1 (fontified t face font-lock-comment-delimiter-face)) . -723) (undo-tree-id2181 . -1) 724 (t 25412 8415 411953 632000)) nil (25412 8654 12954 546000) 0 nil])
([nil nil ((722 . 723)) nil (25412 8654 12926 249000) 0 nil])
([nil nil ((761 . 762) (t 25412 8654 56034 154000)) nil (25412 8750 704605 474000) 0 nil])
([nil nil ((1279 . 1280) (t 25412 8750 736293 80000)) nil (25412 8931 541835 588000) 0 nil])
([nil nil ((1045 . 1046)) nil (25412 8931 541833 64000) 0 nil])
([nil nil ((1024 . 1025)) nil (25412 8931 541831 310000) 0 nil])
([nil nil ((993 . 994)) nil (25412 8931 541829 677000) 0 nil])
([nil nil ((968 . 969)) nil (25412 8931 541827 873000) 0 nil])
([nil nil ((932 . 933)) nil (25412 8931 541826 10000) 0 nil])
([nil nil ((894 . 895)) nil (25412 8931 541824 216000) 0 nil])
([nil nil ((846 . 847)) nil (25412 8931 541822 232000) 0 nil])
([nil nil ((814 . 815)) nil (25412 8931 541819 447000) 0 nil])
([nil nil ((803 . 804)) nil (25412 8931 541811 752000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -815) (undo-tree-id2182 . -1) 816 (t 25412 8931 578838 395000)) nil (25412 8949 931346 231000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -803) (undo-tree-id2183 . -1) 804 (t 25412 8949 952459 479000)) nil (25412 8970 462869 983000) 0 nil])
([nil nil ((760 . 764) (#("    " 0 4 (fontified t)) . 759) (undo-tree-id2184 . -4) (759 . 764) (#("    " 0 4 (fontified t)) . 758) (undo-tree-id2185 . -4) (757 . 763) (t 25412 8970 498222 546000)) nil (25412 9041 226995 818000) 0 nil])
([nil nil ((760 . 764) (#("    " 0 4 (fontified nil)) . 759) (759 . 763) (759 . 760)) nil (25412 9041 226984 547000) 0 nil])
([nil nil ((nil rear-nonsticky nil 986 . 987) (nil fontified nil 986 . 987) (nil fontified nil 985 . 986) (nil fontified nil 984 . 985) (nil fontified nil 979 . 984) (nil fontified nil 974 . 979) (nil fontified nil 973 . 974) (nil fontified nil 962 . 973) (nil fontified nil 958 . 962) (nil fontified nil 957 . 958) (nil fontified nil 951 . 957) (nil fontified nil 947 . 951) (nil fontified nil 946 . 947) (nil fontified nil 945 . 946) (nil fontified nil 944 . 945) (nil fontified nil 936 . 944) (nil fontified nil 934 . 936) (nil fontified nil 927 . 934) (nil fontified nil 926 . 927) (nil fontified nil 925 . 926) (nil fontified nil 922 . 925) (nil fontified nil 920 . 922) (nil fontified nil 917 . 920) (nil fontified nil 902 . 917) (nil fontified nil 896 . 902) (nil fontified nil 880 . 896) (nil fontified nil 878 . 880) (nil fontified nil 873 . 878) (nil fontified nil 870 . 873) (nil fontified nil 865 . 870) (nil fontified nil 859 . 865) (nil fontified nil 851 . 859) (nil fontified nil 849 . 851) (nil fontified nil 844 . 849) (nil fontified nil 840 . 844) (nil fontified nil 837 . 840) (nil fontified nil 833 . 837) (nil fontified nil 832 . 833) (nil fontified nil 831 . 832) (nil fontified nil 828 . 831) (nil fontified nil 826 . 828) (nil fontified nil 820 . 826) (nil fontified nil 807 . 820) (nil fontified nil 804 . 807) (nil fontified nil 798 . 804) (nil fontified nil 796 . 798) (nil fontified nil 788 . 796) (nil fontified nil 784 . 788) (nil fontified nil 781 . 784) (nil fontified nil 777 . 781) (nil fontified nil 776 . 777) (nil fontified nil 771 . 776) (nil fontified nil 767 . 771) (nil fontified nil 764 . 767) (764 . 987)) nil (25412 9041 226981 240000) 0 nil])
([nil nil ((821 . 828)) nil (25412 9041 226972 814000) 0 nil])
([nil nil ((867 . 874)) nil (25412 9041 226972 233000) 0 nil])
([nil nil ((988 . 995)) nil (25412 9041 226971 471000) 0 nil])
([nil nil ((768 . 769)) nil (25412 9041 226970 359000) 0 nil])
([nil nil ((1003 . 1004)) nil (25412 9041 226966 381000) 0 nil])
([nil nil ((5309 . 5311) (t 25412 9041 239919 757000)) nil (25412 9087 20044 171000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5375 . 5376) (nil fontified nil 5375 . 5376) (nil fontified nil 5372 . 5375) (nil fontified nil 5358 . 5372) (nil fontified nil 5352 . 5358) (nil fontified nil 5341 . 5352) (nil fontified nil 5339 . 5341) (nil fontified nil 5337 . 5339) (nil fontified nil 5336 . 5337) (nil fontified nil 5327 . 5336) (nil fontified nil 5326 . 5327) (nil fontified nil 5317 . 5326) (nil fontified nil 5314 . 5317) (nil fontified nil 5311 . 5314) (5311 . 5376)) nil (25412 9087 20039 793000) 0 nil])
([nil nil ((#("q" 0 1 (fontified t face font-lock-string-face)) . -5327) (undo-tree-id2186 . -1) (#("u" 0 1 (fontified t face font-lock-string-face)) . -5328) (undo-tree-id2187 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -5329) (undo-tree-id2188 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -5330) (undo-tree-id2189 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -5331) (undo-tree-id2190 . -1) 5332) nil (25412 9087 20029 222000) 0 nil])
([nil nil ((5327 . 5331)) nil (25412 9087 20003 723000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face font-lock-string-face)) . 5332) (#("e" 0 1 (fontified t face font-lock-string-face)) . 5332) (#("s" 0 1 (fontified t face font-lock-string-face)) . 5332)) nil (25412 9087 19999 144000) 0 nil])
([nil nil ((5332 . 5343)) nil (25412 9087 19991 38000) 0 nil])
([nil nil ((5311 . 5313) (t 25412 9087 55327 34000)) nil (25412 9173 767912 36000) 0 nil])
([nil nil ((5384 . 5385) (#("  " 0 2 (fontified t)) . -5311) (undo-tree-id2214 . -2) (5385 . 5386)) nil (25412 9173 767910 423000) 0 nil])
([nil nil ((nil fontified nil 5456 . 5457) (nil fontified nil 5453 . 5456) (nil fontified nil 5439 . 5453) (nil fontified nil 5433 . 5439) (nil fontified nil 5422 . 5433) (nil fontified nil 5420 . 5422) (nil fontified nil 5418 . 5420) (nil fontified nil 5417 . 5418) (nil fontified nil 5401 . 5417) (nil fontified nil 5400 . 5401) (nil fontified nil 5391 . 5400) (nil fontified nil 5388 . 5391) (nil fontified nil 5385 . 5388) (5385 . 5457)) nil (25412 9173 767907 919000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -5443) (undo-tree-id2207 . -1) (#("n" 0 1 (fontified t)) . -5444) (undo-tree-id2208 . -1) (#("t" 0 1 (fontified t)) . -5445) (undo-tree-id2209 . -1) (#("e" 0 1 (fontified t)) . -5446) (undo-tree-id2210 . -1) (#("g" 0 1 (fontified t)) . -5447) (undo-tree-id2211 . -1) (#("e" 0 1 (fontified t)) . -5448) (undo-tree-id2212 . -1) (#("r" 0 1 (fontified t)) . -5449) (undo-tree-id2213 . -1) 5450) nil (25412 9173 767902 839000) 0 nil])
([nil nil ((5443 . 5448)) nil (25412 9173 767896 887000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face font-lock-string-face)) . -5401) (undo-tree-id2196 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -5402) (undo-tree-id2197 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -5403) (undo-tree-id2198 . -1) (#("c" 0 1 (fontified t face font-lock-string-face)) . -5404) (undo-tree-id2199 . -1) (#("_" 0 1 (fontified t face font-lock-string-face)) . -5405) (undo-tree-id2200 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -5406) (undo-tree-id2201 . -1) (#("u" 0 1 (fontified t face font-lock-string-face)) . -5407) (undo-tree-id2202 . -1) (#("m" 0 1 (fontified t face font-lock-string-face)) . -5408) (undo-tree-id2203 . -1) (#("b" 0 1 (fontified t face font-lock-string-face)) . -5409) (undo-tree-id2204 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -5410) (undo-tree-id2205 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -5411) (undo-tree-id2206 . -1) 5412) nil (25412 9173 767893 891000) 0 nil])
([nil nil ((5401 . 5407)) nil (25412 9173 767882 570000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t face font-lock-string-face)) . -5408) (undo-tree-id2192 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -5409) (undo-tree-id2193 . -1) (#("y" 0 1 (fontified t face font-lock-string-face)) . -5410) (undo-tree-id2194 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -5411) (undo-tree-id2195 . -1) 5412) nil (25412 9173 767881 167000) 0 nil])
([nil nil ((5408 . 5410)) nil (25412 9173 767876 929000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t face font-lock-string-face)) . -5409) (undo-tree-id2191 . -1) 5410) nil (25412 9173 767874 945000) 0 nil])
([nil nil ((5409 . 5414)) nil (25412 9173 767859 605000) 0 nil])
([nil nil ((5451 . 5453) (t 25412 9173 781244 50000)) nil (25412 9218 67190 901000) 0 nil])
([nil nil ((#(")" 0 1 (rear-nonsticky t fontified t)) . 5451) (#("	" 0 1 (fontified t)) . 5451) (#("
" 0 1 (fontified t)) . 5451) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1)) nil (25412 9218 67189 499000) 0 nil])
([nil nil ((5451 . 5452) (#(")" 0 1 (fontified nil face font-lock-keyword-face)) . -5451) (5451 . 5452)) nil (25412 9218 67186 383000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t)) . -5384) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) 5385) nil (25412 9218 67185 50000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t)) . -5310) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) 5311) nil (25412 9218 67182 856000) 0 nil])
([nil nil ((5310 . 5320)) nil (25412 9218 67178 407000) 0 nil])
([nil nil ((5393 . 5403)) nil (25412 9218 67177 766000) 0 nil])
([nil nil ((5470 . 5472)) nil (25412 9218 67177 125000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5538 . 5539) (nil fontified nil 5538 . 5539) (nil fontified nil 5535 . 5538) (nil fontified nil 5523 . 5535) (nil fontified nil 5517 . 5523) (nil fontified nil 5506 . 5517) (nil fontified nil 5504 . 5506) (nil fontified nil 5502 . 5504) (nil fontified nil 5501 . 5502) (nil fontified nil 5488 . 5501) (nil fontified nil 5487 . 5488) (nil fontified nil 5478 . 5487) (nil fontified nil 5475 . 5478) (nil fontified nil 5472 . 5475) (5472 . 5539)) nil (25412 9218 67175 842000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t)) . -5471) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) 5472) nil (25412 9218 67172 796000) 0 nil])
([nil nil ((5471 . 5481)) nil (25412 9218 67170 782000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face font-lock-string-face)) . -5497) (undo-tree-id2216 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -5498) (undo-tree-id2217 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -5499) (undo-tree-id2218 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -5500) (undo-tree-id2219 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -5501) (undo-tree-id2220 . -1) (#("d" 0 1 (fontified t face font-lock-string-face)) . -5502) (undo-tree-id2221 . -1) 5503) nil (25412 9218 67169 199000) 0 nil])
([nil nil ((5497 . 5499)) nil (25412 9218 67163 498000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t face font-lock-string-face)) . -5498) (undo-tree-id2215 . -1) 5499) nil (25412 9218 67161 565000) 0 nil])
([nil nil ((5498 . 5501)) nil (25412 9218 67148 670000) 0 nil])
([nil nil ((5546 . 5548) (t 25412 9218 92027 422000)) nil (25412 9238 408027 169000) 0 nil])
([nil nil ((nil fontified nil 5612 . 5613) (nil fontified nil 5609 . 5612) (nil fontified nil 5597 . 5609) (nil fontified nil 5591 . 5597) (nil fontified nil 5580 . 5591) (nil fontified nil 5578 . 5580) (nil fontified nil 5576 . 5578) (nil fontified nil 5575 . 5576) (nil fontified nil 5564 . 5575) (nil fontified nil 5563 . 5564) (nil fontified nil 5554 . 5563) (nil fontified nil 5551 . 5554) (nil fontified nil 5548 . 5551) (5548 . 5613)) nil (25412 9238 408023 272000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t)) . -5547) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) 5548) nil (25412 9238 408015 156000) 0 nil])
([nil nil ((5547 . 5557)) nil (25412 9238 408009 355000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t face font-lock-string-face)) . -5573) (undo-tree-id2232 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -5574) (undo-tree-id2233 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -5575) (undo-tree-id2234 . -1) (#("d" 0 1 (fontified t face font-lock-string-face)) . -5576) (undo-tree-id2235 . -1) 5577) nil (25412 9238 408003 544000) 0 nil])
([nil nil ((5573 . 5578)) nil (25412 9238 407974 47000) 0 nil])
([nil nil ((1556 . 1557) (t 25412 9238 441256 456000)) nil (25412 9301 755630 4000) 0 nil])
([nil nil ((1612 . 1613)) nil (25412 9301 755629 193000) 0 nil])
([nil nil ((1666 . 1667)) nil (25412 9301 755628 581000) 0 nil])
([nil nil ((1711 . 1712)) nil (25412 9301 755627 930000) 0 nil])
([nil nil ((1737 . 1738)) nil (25412 9301 755627 279000) 0 nil])
([nil nil ((1769 . 1770)) nil (25412 9301 755626 648000) 0 nil])
([nil nil ((1791 . 1792)) nil (25412 9301 755626 17000) 0 nil])
([nil nil ((1810 . 1811)) nil (25412 9301 755625 345000) 0 nil])
([nil nil ((1825 . 1826)) nil (25412 9301 755624 774000) 0 nil])
([nil nil ((1858 . 1859)) nil (25412 9301 755624 203000) 0 nil])
([nil nil ((1945 . 1946)) nil (25412 9301 755623 522000) 0 nil])
([nil nil ((1994 . 1995)) nil (25412 9301 755622 810000) 0 nil])
([nil nil ((2056 . 2057)) nil (25412 9301 755622 159000) 0 nil])
([nil nil ((2067 . 2068)) nil (25412 9301 755621 177000) 0 nil])
([nil nil ((1061 . 1062)) nil (25412 9301 755619 734000) 0 nil])
([nil nil ((1073 . 1074)) nil (25412 9301 755615 717000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 761) (undo-tree-id2238 . -1) (#(" " 0 1 (fontified t)) . 761) (#(" " 0 1 (fontified t)) . 761) (t 25412 9301 768898 990000)) nil (25412 9714 503005 499000) 0 nil])
([nil nil ((535 . 539) (#("    " 0 4 (fontified nil)) . 534) (534 . 538) (534 . 535) (t 25412 9714 515650 266000)) nil (25412 10049 680722 290000) 0 nil])
([nil nil ((535 . 539) (#("    " 0 4 (fontified nil)) . 534) (534 . 538) (534 . 535)) nil (25412 10049 680718 322000) 0 nil])
([nil nil ((539 . 541)) nil (25412 10049 680715 377000) 0 nil])
([nil nil ((541 . 542)) nil (25412 10049 680713 684000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -541) (undo-tree-id2252 . -1) 542) nil (25412 10049 680711 439000) 0 nil])
([nil nil ((541 . 542)) nil (25412 10049 680707 622000) 0 nil])
([nil nil ((542 . 546) (#(" " 0 1 (fontified t)) . 541) (undo-tree-id2251 . -1) (542 . 543)) nil (25412 10049 680705 228000) 0 nil])
([nil nil ((546 . 559)) nil (25412 10049 680700 819000) 0 nil])
([nil nil ((#("q" 0 1 (fontified t)) . -569) (undo-tree-id2242 . -1) (#("m" 0 1 (fontified t)) . -570) (undo-tree-id2243 . -1) (#("a" 0 1 (fontified t)) . -571) (undo-tree-id2244 . -1) (#("p" 0 1 (fontified t)) . -572) (undo-tree-id2245 . -1) (#(" " 0 1 (fontified t)) . -573) (undo-tree-id2246 . -1) (#("=" 0 1 (fontified t)) . -574) (undo-tree-id2247 . -1) (#(" " 0 1 (fontified t)) . -575) (undo-tree-id2248 . -1) (#("q" 0 1 (fontified t)) . -576) (undo-tree-id2249 . -1) (#("m" 0 1 (fontified t)) . -577) (undo-tree-id2250 . -1) 578) nil (25412 10049 680695 399000) 0 nil])
([nil nil ((569 . 573)) nil (25412 10049 680673 557000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -571) (undo-tree-id2240 . -1) (#("a" 0 1 (fontified t)) . -572) (undo-tree-id2241 . -1) 573) nil (25412 10049 680670 612000) 0 nil])
([nil nil ((571 . 574)) nil (25412 10049 680663 719000) 0 nil])
([nil nil ((#("[" 0 1 (fontified nil)) . -572) (undo-tree-id2239 . -1) (#("]" 0 1 (fontified t)) . 573)) nil (25412 10049 680660 12000) 0 nil])
([nil nil ((572 . 576)) nil (25412 10049 680643 570000) 0 nil])
([nil nil ((576 . 578)) nil (25412 10049 680636 227000) 0 nil])
([nil nil ((#("qm
    |> Enum.map()
    " 0 2 (fontified t) 2 3 (fontified t) 3 10 (fontified t) 10 14 (fontified t face font-lock-type-face) 14 18 (fontified t) 18 20 (fontified t) 20 21 (fontified t) 21 25 (fontified t)) . -539) (undo-tree-id2319 . -25) (undo-tree-id2320 . -21) (undo-tree-id2321 . -21) (undo-tree-id2322 . -21) (undo-tree-id2323 . -3) (undo-tree-id2324 . -3) (undo-tree-id2325 . -25) 564 (t 25412 10049 707033 263000)) nil (25412 10536 545027 692000) 0 nil])
([nil nil ((535 . 539) (#("    " 0 4 (fontified nil)) . 534) (534 . 538) (534 . 535)) nil (25412 10536 545016 461000) 0 nil])
([nil nil ((539 . 548)) nil (25412 10536 545013 816000) 0 nil])
([nil nil ((548 . 553)) nil (25412 10536 545012 534000) 0 nil])
([nil nil ((553 . 560)) nil (25412 10536 545011 191000) 0 nil])
([nil nil ((560 . 563)) nil (25412 10536 545009 839000) 0 nil])
([nil nil ((553 . 560)) nil (25412 10536 545008 6000) 0 nil])
([nil nil ((nil rear-nonsticky nil 778 . 779) (nil fontified nil 778 . 779) (nil fontified nil 777 . 778) (nil fontified nil 772 . 777) (nil fontified nil 767 . 772) (nil fontified nil 766 . 767) (nil fontified nil 755 . 766) (nil fontified nil 751 . 755) (nil fontified nil 750 . 751) (nil fontified nil 744 . 750) (nil fontified nil 740 . 744) (nil fontified nil 739 . 740) (nil fontified nil 738 . 739) (nil fontified nil 737 . 738) (nil fontified nil 729 . 737) (nil fontified nil 727 . 729) (nil fontified nil 720 . 727) (nil fontified nil 719 . 720) (nil fontified nil 718 . 719) (nil fontified nil 715 . 718) (nil fontified nil 713 . 715) (nil fontified nil 710 . 713) (nil fontified nil 695 . 710) (nil fontified nil 689 . 695) (nil fontified nil 673 . 689) (nil fontified nil 671 . 673) (nil fontified nil 666 . 671) (nil fontified nil 663 . 666) (nil fontified nil 658 . 663) (nil fontified nil 652 . 658) (nil fontified nil 644 . 652) (nil fontified nil 642 . 644) (nil fontified nil 637 . 642) (nil fontified nil 633 . 637) (nil fontified nil 630 . 633) (nil fontified nil 626 . 630) (nil fontified nil 625 . 626) (nil fontified nil 624 . 625) (nil fontified nil 621 . 624) (nil fontified nil 619 . 621) (nil fontified nil 613 . 619) (nil fontified nil 600 . 613) (nil fontified nil 597 . 600) (nil fontified nil 591 . 597) (nil fontified nil 589 . 591) (nil fontified nil 581 . 589) (nil fontified nil 577 . 581) (nil fontified nil 574 . 577) (nil fontified nil 570 . 574) (nil fontified nil 569 . 570) (nil fontified nil 564 . 569) (nil fontified nil 560 . 564) (560 . 779)) nil (25412 10536 545001 624000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -576) (undo-tree-id2298 . -1) (#("E" 0 1 (fontified t face font-lock-type-face)) . -577) (undo-tree-id2299 . -1) (#("n" 0 1 (fontified t face font-lock-type-face)) . -578) (undo-tree-id2300 . -1) (#("u" 0 1 (fontified t face font-lock-type-face)) . -579) (undo-tree-id2301 . -1) (#("m" 0 1 (fontified t face font-lock-type-face)) . -580) (undo-tree-id2302 . -1) (#("." 0 1 (fontified t face font-lock-type-face)) . -581) (undo-tree-id2303 . -1) (#("f" 0 1 (fontified t)) . -582) (undo-tree-id2304 . -1) (#("i" 0 1 (fontified t)) . -583) (undo-tree-id2305 . -1) (#("l" 0 1 (fontified t)) . -584) (undo-tree-id2306 . -1) (#("t" 0 1 (fontified t)) . -585) (undo-tree-id2307 . -1) (#("e" 0 1 (fontified t)) . -586) (undo-tree-id2308 . -1) (#("r" 0 1 (fontified t)) . -587) (undo-tree-id2309 . -1) (#("(" 0 1 (fontified t)) . -588) (undo-tree-id2310 . -1) (#("f" 0 1 (fontified t)) . -589) (undo-tree-id2311 . -1) (#("n" 0 1 (fontified t)) . -590) (undo-tree-id2312 . -1) (#(" " 0 1 (fontified t)) . -591) (undo-tree-id2313 . -1) (#("x" 0 1 (fontified t)) . -592) (undo-tree-id2314 . -1) (#(" " 0 1 (fontified t)) . -593) (undo-tree-id2315 . -1) (#("-" 0 1 (fontified t)) . -594) (undo-tree-id2316 . -1) (#(">" 0 1 (fontified t)) . -595) (undo-tree-id2317 . -1) (#(" " 0 1 (fontified t)) . -596) (undo-tree-id2318 . -1) 597) nil (25412 10536 544977 209000) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -574) (undo-tree-id2296 . -1) (#(">" 0 1 (fontified t)) . -575) (undo-tree-id2297 . -1) 576) nil (25412 10536 544925 233000) 0 nil])
([nil nil ((574 . 579)) nil (25412 10536 544920 814000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -588) (undo-tree-id2295 . -1) 589) nil (25412 10536 544919 181000) 0 nil])
([nil nil ((579 . 581)) nil (25412 10536 544916 106000) 0 nil])
([nil nil ((#("q" 0 1 (fontified t)) . -579) (undo-tree-id2293 . -1) (#("m" 0 1 (fontified t)) . -580) (undo-tree-id2294 . -1) 581) nil (25412 10536 544914 72000) 0 nil])
([nil nil ((579 . 584)) nil (25412 10536 544909 574000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -607) (undo-tree-id2285 . -1) (#("n" 0 1 (fontified t)) . -608) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (#("d" 0 1 (fontified t face font-lock-keyword-face)) . -609) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (#(")" 0 1 (fontified t)) . -610) (undo-tree-id2290 . -1) (undo-tree-id2291 . 1) (undo-tree-id2292 . -1) 611) nil (25412 10536 544906 478000) 0 nil])
([nil nil ((607 . 609)) nil (25412 10536 544893 153000) 0 nil])
([nil nil ((765 . 769) (#("    " 0 4 (fontified t)) . 764) (undo-tree-id2284 . -4) (764 . 769) (#("    " 0 4 (fontified nil)) . 763) (763 . 767) (763 . 764)) nil (25412 10536 544890 959000) 0 nil])
([nil nil ((765 . 769) (#("    " 0 4 (fontified nil)) . 764) (764 . 768) (764 . 765)) nil (25412 10536 544886 231000) 0 nil])
([nil nil ((764 . 768)) nil (25412 10536 544883 786000) 0 nil])
([nil nil ((nil rear-nonsticky nil 802 . 803) (nil fontified nil 801 . 803) (nil fontified nil 799 . 801) (nil fontified nil 793 . 799) (nil fontified nil 781 . 793) (nil fontified nil 778 . 781) (nil fontified nil 772 . 778) (nil fontified nil 768 . 772) (768 . 803)) nil (25412 10536 544881 602000) 0 nil])
([nil nil ((794 . 798)) nil (25412 10536 544877 575000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t face elixir-atom-face)) . -797) (undo-tree-id2283 . -1) 798) nil (25412 10536 544875 751000) 0 nil])
([nil nil ((797 . 799)) nil (25412 10536 544872 655000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face elixir-atom-face)) . -798) (undo-tree-id2282 . -1) 799) nil (25412 10536 544870 602000) 0 nil])
([nil nil ((798 . 801)) nil (25412 10536 544867 85000) 0 nil])
([nil nil ((614 . 617)) nil (25412 10536 544864 951000) 0 nil])
([nil nil ((#("for n <- qm do
      qmap = qm
    case n |> Map.keys() == [:Quota] do
    qm |> Enum.map(fn x -> x[:Quota] |> Map.new(fn {k,v} -> {k |> String.to_atom(),v}  end) end)
    |> IO.inspect()
    Cabbot.Repo.insert_all(Quota,qmap)

    case n |> Map.keys() == [:ClientsQuota] do
    
    
      end
" 0 3 (fontified t face font-lock-keyword-face) 3 12 (fontified t) 12 14 (fontified t face font-lock-keyword-face) 14 15 (fontified t) 15 21 (fontified t) 21 25 (fontified t face font-lock-variable-name-face) 25 30 (fontified t) 30 31 (fontified t) 31 35 (fontified t) 35 39 (fontified t face font-lock-keyword-face) 39 45 (fontified t) 45 48 (fontified t face font-lock-type-face) 48 60 (fontified t) 60 66 (fontified t face elixir-atom-face) 66 68 (fontified t) 68 70 (fontified t face font-lock-keyword-face) 70 71 (fontified t) 71 78 (fontified t) 78 81 (fontified t) 81 85 (fontified t face font-lock-type-face) 85 90 (fontified t) 90 92 (fontified t face font-lock-keyword-face) 92 100 (fontified t) 100 106 (fontified t face elixir-atom-face) 106 111 (fontified t) 111 114 (fontified t face font-lock-type-face) 114 119 (fontified t) 119 121 (fontified t face font-lock-keyword-face) 121 137 (fontified t) 137 143 (fontified t face font-lock-type-face) 143 158 (fontified t) 158 161 (fontified t face font-lock-keyword-face) 161 163 (fontified t) 163 166 (fontified t face font-lock-keyword-face) 166 167 (rear-nonsticky t fontified t) 167 168 (fontified t) 168 175 (fontified t) 175 177 (fontified t face font-lock-type-face) 177 185 (fontified t) 185 186 (fontified t) 186 187 (fontified t) 187 188 (fontified t) 188 192 (fontified t) 192 198 (fontified t face font-lock-type-face) 198 199 (fontified t face font-lock-type-face) 199 203 (fontified t face font-lock-type-face) 203 214 (fontified t) 214 215 (fontified t) 215 220 (fontified t face font-lock-type-face) 220 225 (fontified t) 225 226 (fontified t) 226 227 (rear-nonsticky t fontified t) 227 228 (fontified t) 228 232 (fontified t) 232 236 (fontified t face font-lock-keyword-face) 236 242 (fontified t) 242 245 (fontified t face font-lock-type-face) 245 257 (fontified t) 257 270 (fontified t face elixir-atom-face) 270 272 (fontified t) 272 273 (fontified t face font-lock-keyword-face) 273 274 (rear-nonsticky t fontified t face font-lock-keyword-face) 274 275 (fontified t) 275 279 (fontified t) 279 280 (fontified t) 280 284 (fontified t) 284 285 (fontified t) 285 291 (fontified t) 291 294 (fontified t face font-lock-keyword-face) 294 295 (fontified t)) . -539) (undo-tree-id2253 . -295) (undo-tree-id2254 . -295) (undo-tree-id2255 . -227) (undo-tree-id2256 . -227) (undo-tree-id2257 . -295) (undo-tree-id2258 . -295) (undo-tree-id2259 . -31) (undo-tree-id2260 . -31) (undo-tree-id2261 . -168) (undo-tree-id2262 . -168) (undo-tree-id2263 . -188) (undo-tree-id2264 . -188) (undo-tree-id2265 . -285) (undo-tree-id2266 . -285) (undo-tree-id2267 . -280) (undo-tree-id2268 . -280) (undo-tree-id2269 . -275) (undo-tree-id2270 . -275) (undo-tree-id2271 . -228) (undo-tree-id2272 . -228) (undo-tree-id2273 . -15) (undo-tree-id2274 . -15) (undo-tree-id2275 . -71) (undo-tree-id2276 . -71) (undo-tree-id2277 . -21) (undo-tree-id2278 . -35) (undo-tree-id2279 . -232) (undo-tree-id2280 . -295) (undo-tree-id2281 . -295) 834) nil (25412 10536 544856 886000) 0 nil])
([nil nil ((1014 . 1019) (t 25412 10536 573791 875000)) nil (25412 10589 608914 736000) 0 nil])
([nil nil ((1019 . 1020)) nil (25412 10589 608912 171000) 0 nil])
([nil nil ((#("Q" 0 1 (fontified t face font-lock-type-face)) . -1019) (undo-tree-id2335 . -1) 1020) nil (25412 10589 608909 707000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1087 . 1088) (nil fontified nil 1019 . 1088) (1019 . 1088)) nil (25412 10589 608904 517000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -1044) (undo-tree-id2326 . -1) (#("e" 0 1 (fontified t)) . -1045) (undo-tree-id2327 . -1) (#("w" 0 1 (fontified t)) . -1046) (undo-tree-id2328 . -1) (#("_" 0 1 (fontified t)) . -1047) (undo-tree-id2329 . -1) (#("d" 0 1 (fontified t)) . -1048) (undo-tree-id2330 . -1) (#("a" 0 1 (fontified t)) . -1049) (undo-tree-id2331 . -1) (#("t" 0 1 (fontified t)) . -1050) (undo-tree-id2332 . -1) (#("a" 0 1 (fontified t)) . -1051) (undo-tree-id2333 . -1) (#("2" 0 1 (fontified t)) . -1052) (undo-tree-id2334 . -1) 1053) nil (25412 10589 608896 62000) 0 nil])
([nil nil ((1044 . 1049)) nil (25412 10589 608853 783000) 0 nil])
([nil nil ((1014 . 1019) (t 25412 10589 636853 427000)) nil (25412 10626 414138 78000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -1033) (1033 . 1034) (#(")" 0 1 (fontified nil)) . -1033) (1033 . 1034) (1019 . 1034)) nil (25412 10626 414135 373000) 0 nil])
([nil nil ((1038 . 1039)) nil (25412 10626 414130 374000) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -1019) (undo-tree-id2341 . -1) (#(">" 0 1 (fontified t)) . -1020) (undo-tree-id2342 . -1) (#(" " 0 1 (fontified t)) . -1021) (undo-tree-id2343 . -1) (#("I" 0 1 (fontified t face font-lock-type-face)) . -1022) (undo-tree-id2344 . -1) (#("O" 0 1 (fontified t face font-lock-type-face)) . -1023) (undo-tree-id2345 . -1) (#("." 0 1 (fontified t)) . -1024) (undo-tree-id2346 . -1) (#("i" 0 1 (fontified t)) . -1025) (undo-tree-id2347 . -1) (#("n" 0 1 (fontified t)) . -1026) (undo-tree-id2348 . -1) (#("s" 0 1 (fontified t)) . -1027) (undo-tree-id2349 . -1) (#("p" 0 1 (fontified t)) . -1028) (undo-tree-id2350 . -1) (#("e" 0 1 (fontified t)) . -1029) (undo-tree-id2351 . -1) (#("c" 0 1 (fontified t)) . -1030) (undo-tree-id2352 . -1) (#("t" 0 1 (fontified t)) . -1031) (undo-tree-id2353 . -1) (#("(" 0 1 (fontified t)) . -1032) (undo-tree-id2354 . -1) (#(")" 0 1 (fontified t)) . -1033) (undo-tree-id2355 . -1) (undo-tree-id2356 . 1) (undo-tree-id2357 . -1) 1034 (t 25412 10626 428311 793000)) nil (25412 10899 395651 545000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -1023) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (#(" " 0 1 (fontified t face font-lock-comment-delimiter-face)) . -1024) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) 1025) nil (25412 10899 395611 320000) 0 nil])
([nil nil ((1023 . 1024)) nil (25412 10899 395600 750000) 0 nil])
([nil nil ((1013 . 1024)) nil (25412 10899 395598 927000) 0 nil])
([nil nil ((1018 . 1019)) nil (25412 10899 395596 833000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face elixir-atom-face)) . -1015) (undo-tree-id2336 . -1) 1016) nil (25412 10899 395592 515000) 0 nil])
([nil nil ((1024 . 1029)) nil (25412 10899 395570 724000) 0 nil])
([nil nil ((1025 . 1026) (t 25412 10899 430513 233000)) nil (25412 10909 724209 553000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t face elixir-atom-face)) . -1025) (undo-tree-id2358 . -1) 1026 (t 25412 10909 758507 521000)) nil (25412 10931 352300 726000) 0 nil])
([nil nil ((1025 . 1026)) nil (25412 10931 352277 573000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -1025) (undo-tree-id2360 . -1) 1026 (t 25412 10931 378507 533000)) nil (25412 10942 283645 760000) 0 nil])
([nil nil ((1014 . 1015)) nil (25412 10942 283640 310000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -1014) (undo-tree-id2359 . -1) 1015) nil (25412 10942 283635 861000) 0 nil])
([nil nil ((1014 . 1015)) nil (25412 10942 283613 650000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -1026) (undo-tree-id2361 . -1) (#("r" 0 1 (fontified t)) . -1027) (undo-tree-id2362 . -1) (#("u" 0 1 (fontified t)) . -1028) (undo-tree-id2363 . -1) (#("e" 0 1 (fontified t face elixir-atom-face)) . -1029) (undo-tree-id2364 . -1) 1030 (t 25412 10942 318513 535000)) nil (25412 10952 869686 232000) 0 nil])
([nil nil ((1025 . 1030) (t 25412 10952 902523 74000)) nil (25412 11001 695952 547000) 0 nil])
([nil nil ((1029 . 1030)) nil (25412 11001 695949 180000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -1015) (undo-tree-id2365 . -1) 1016) nil (25412 11001 695941 686000) 0 nil])
([nil nil ((1037 . 1046) (t 25412 11001 766612 556000)) nil (25412 11016 999547 144000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -1051) (1051 . 1052) (#(")" 0 1 (fontified nil)) . -1051) (1051 . 1052) (1046 . 1052)) nil (25412 11016 999541 714000) 0 nil])
([nil nil ((1052 . 1054) (t 25412 11017 18655 44000)) nil (25412 11043 691254 552000) 0 nil])
([nil nil ((1052 . 1057)) nil (25412 11043 691253 550000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1059) (#(" " 0 1 (fontified t)) . 1059) (undo-tree-id2372 . -1) (#(" " 0 1 (fontified t)) . 1059) (#(" " 0 1 (fontified t)) . 1059) (#("
" 0 1 (fontified t)) . 1059) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1)) nil (25412 11043 691251 567000) 0 nil])
([nil nil ((#("q" 0 1 (fontified t)) . -1084) (undo-tree-id2366 . -1) (#("c" 0 1 (fontified t)) . -1085) (undo-tree-id2367 . -1) (#("m" 0 1 (fontified t)) . -1086) (undo-tree-id2368 . -1) (#("a" 0 1 (fontified t)) . -1087) (undo-tree-id2369 . -1) (#("p" 0 1 (fontified t)) . -1088) (undo-tree-id2370 . -1) (#("," 0 1 (fontified t)) . -1089) (undo-tree-id2371 . -1) 1090) nil (25412 11043 691242 39000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1039) (undo-tree-id2378 . -1) (#("I" 0 1 (fontified t face font-lock-type-face)) . -1040) (undo-tree-id2379 . -1) (#("O" 0 1 (fontified t face font-lock-type-face)) . -1041) (undo-tree-id2380 . -1) (#("." 0 1 (fontified t)) . -1042) (undo-tree-id2381 . -1) (#("i" 0 1 (fontified t)) . -1043) (undo-tree-id2382 . -1) (#("n" 0 1 (fontified t)) . -1044) (undo-tree-id2383 . -1) (#("s" 0 1 (fontified t)) . -1045) (undo-tree-id2384 . -1) (#("p" 0 1 (fontified t)) . -1046) (undo-tree-id2385 . -1) (#("e" 0 1 (fontified t)) . -1047) (undo-tree-id2386 . -1) (#("c" 0 1 (fontified t)) . -1048) (undo-tree-id2387 . -1) (#("t" 0 1 (fontified t)) . -1049) (undo-tree-id2388 . -1) (#("(" 0 1 (fontified t)) . -1050) (undo-tree-id2389 . -1) (#(")" 0 1 (fontified t)) . -1051) (undo-tree-id2390 . -1) (undo-tree-id2391 . 1) (undo-tree-id2392 . -1) 1052 (t 25412 11043 702745 115000)) nil (25412 11936 810742 386000) 0 nil])
([nil nil ((1039 . 1041)) nil (25412 11936 810711 147000) 0 nil])
([nil nil ((1041 . 1042)) nil (25412 11936 810709 213000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -1040) (undo-tree-id2376 . -1) (#("e" 0 1 (fontified t)) . -1041) (undo-tree-id2377 . -1) 1042) nil (25412 11936 810705 867000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -1045) (1045 . 1046) (#(")" 0 1 (fontified nil)) . -1045) (1045 . 1046) (1040 . 1046)) nil (25412 11936 810685 98000) 0 nil])
([nil nil ((1045 . 1046)) nil (25412 11936 810676 191000) 0 nil])
([nil nil ((1089 . 1096) (t 25412 11936 836552 53000)) nil (25412 11982 56379 424000) 0 nil])
([nil nil ((1107 . 1114) (t 25412 11982 113239 370000)) nil (25412 11990 777598 505000) 0 nil])
([nil nil ((1114 . 1115)) nil (25412 11990 777590 651000) 0 nil])
([nil nil ((1128 . 1132) (#(" " 0 1 (rear-nonsticky t fontified nil)) . 1127) (undo-tree-id2419 . -1) (1128 . 1129) (t 25412 11990 813372 475000)) nil (25412 12080 319320 405000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -1146) (1146 . 1147) (#(")" 0 1 (fontified nil)) . -1146) (1146 . 1147) (1132 . 1147)) nil (25412 12080 319313 682000) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -712) (undo-tree-id2402 . -1) (#(">" 0 1 (fontified t)) . -713) (undo-tree-id2403 . -1) (#(" " 0 1 (fontified t)) . -714) (undo-tree-id2404 . -1) (#("I" 0 1 (fontified t face font-lock-type-face)) . -715) (undo-tree-id2405 . -1) (#("O" 0 1 (fontified t face font-lock-type-face)) . -716) (undo-tree-id2406 . -1) (#("." 0 1 (fontified t)) . -717) (undo-tree-id2407 . -1) (#("i" 0 1 (fontified t)) . -718) (undo-tree-id2408 . -1) (#("n" 0 1 (fontified t)) . -719) (undo-tree-id2409 . -1) (#("s" 0 1 (fontified t)) . -720) (undo-tree-id2410 . -1) (#("p" 0 1 (fontified t)) . -721) (undo-tree-id2411 . -1) (#("e" 0 1 (fontified t)) . -722) (undo-tree-id2412 . -1) (#("c" 0 1 (fontified t)) . -723) (undo-tree-id2413 . -1) (#("t" 0 1 (fontified t)) . -724) (undo-tree-id2414 . -1) (#("(" 0 1 (fontified t)) . -725) (undo-tree-id2415 . -1) (#(")" 0 1 (fontified t)) . -726) (undo-tree-id2416 . -1) (undo-tree-id2417 . 1) (undo-tree-id2418 . -1) 727) nil (25412 12080 319302 711000) 0 nil])
([nil nil ((#("    |> IO.inspect()" 0 7 (fontified t) 7 9 (fontified t face font-lock-type-face) 9 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t)) . 933) (undo-tree-id2401 . -19)) nil (25412 12080 319255 783000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 933) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1)) nil (25412 12080 319248 990000) 0 nil])
([nil nil ((#("    
" 0 4 (fontified t) 4 5 (fontified t)) . 708) (undo-tree-id2393 . -5) (undo-tree-id2394 . -5) (undo-tree-id2395 . -5) (undo-tree-id2396 . -5)) nil (25412 12080 319231 477000) 0 nil])
([nil nil ((745 . 761) (t 25412 12080 354759 967000)) nil (25412 12140 261462 745000) 0 nil])
([nil nil ((757 . 758)) nil (25412 12140 261461 873000) 0 nil])
([nil nil ((764 . 768)) nil (25412 12140 261461 252000) 0 nil])
([nil nil ((nil rear-nonsticky nil 862 . 863) (nil fontified nil 862 . 863) (nil fontified nil 861 . 862) (nil fontified nil 853 . 861) (nil fontified nil 851 . 853) (nil fontified nil 844 . 851) (nil fontified nil 843 . 844) (nil fontified nil 842 . 843) (nil fontified nil 841 . 842) (nil fontified nil 823 . 841) (nil fontified nil 822 . 823) (nil fontified nil 821 . 822) (nil fontified nil 812 . 821) (nil fontified nil 795 . 812) (nil fontified nil 782 . 795) (nil fontified nil 770 . 782) (nil fontified nil 768 . 770) (768 . 863)) nil (25412 12140 261459 859000) 0 nil])
([nil nil ((#("C" 0 1 (fontified t face font-lock-type-face)) . -805) (undo-tree-id2429 . -1) (#("l" 0 1 (fontified t face font-lock-type-face)) . -806) (undo-tree-id2430 . -1) (#("i" 0 1 (fontified t face font-lock-type-face)) . -807) (undo-tree-id2431 . -1) (#("e" 0 1 (fontified t face font-lock-type-face)) . -808) (undo-tree-id2432 . -1) (#("n" 0 1 (fontified t face font-lock-type-face)) . -809) (undo-tree-id2433 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -810) (undo-tree-id2434 . -1) (#("s" 0 1 (fontified t face font-lock-type-face)) . -811) (undo-tree-id2435 . -1) 812) nil (25412 12140 261455 912000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face font-lock-string-face)) . -816) (undo-tree-id2421 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -817) (undo-tree-id2422 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -818) (undo-tree-id2423 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -819) (undo-tree-id2424 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -820) (undo-tree-id2425 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -821) (undo-tree-id2426 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -822) (undo-tree-id2427 . -1) (#("_" 0 1 (fontified t face font-lock-string-face)) . -823) (undo-tree-id2428 . -1) 824) nil (25412 12140 261447 5000) 0 nil])
([nil nil ((#("    |> IO.inspect()" 0 7 (fontified t) 7 9 (fontified t face font-lock-type-face) 9 17 (fontified t) 17 18 (fontified t) 18 19 (rear-nonsticky t fontified t)) . 829) (undo-tree-id2420 . -19)) nil (25412 12140 261436 746000) 0 nil])
([nil nil ((763 . 768) (t 25412 12140 283704 793000)) nil (25412 12158 75156 768000) 0 nil])
([nil nil ((768 . 769)) nil (25412 12158 75154 574000) 0 nil])
([nil nil ((776 . 777) (769 . 777)) nil (25412 12158 75152 49000) 0 nil])
([nil nil ((776 . 777)) nil (25412 12158 75149 144000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -776) (undo-tree-id2436 . -1) (#("0" 0 1 (fontified t)) . -777) (undo-tree-id2437 . -1) 778) nil (25412 12158 75143 974000) 0 nil])
([nil nil ((776 . 777)) nil (25412 12158 75121 11000) 0 nil])
([nil nil ((#("    |> IO.inspect()" 0 7 (fontified t) 7 9 (fontified t face font-lock-type-face) 9 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t)) . 1185) (t 25412 12158 115988 179000)) nil (25412 12257 240441 418000) 0 nil])
([nil nil ((778 . 783)) nil (25412 12257 240437 952000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -797) (797 . 798) (#(")" 0 1 (fontified nil)) . -797) (797 . 798) (783 . 798)) nil (25412 12257 240427 963000) 0 nil])
([nil nil ((#("q" 0 1 (fontified t face font-lock-string-face)) . -851) (undo-tree-id2438 . -1) (#("u" 0 1 (fontified t face font-lock-string-face)) . -852) (undo-tree-id2439 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -853) (undo-tree-id2440 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -854) (undo-tree-id2441 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -855) (undo-tree-id2442 . -1) 856 (t 25412 12257 309581 258000)) nil (25412 12645 869732 954000) 0 nil])
([nil nil ((851 . 855)) nil (25412 12645 869702 808000) 0 nil])
([nil nil ((798 . 803) (t 25412 12645 906837 52000)) nil (25412 12986 152145 605000) 0 nil])
([nil nil ((nil rear-nonsticky nil 916 . 917) (nil fontified nil 803 . 917) (803 . 917)) nil (25412 12986 152143 70000) 0 nil])
([nil nil ((#("    (not_null_violation) null value in column \"inserted_at\" of relation XX violates not-null constraint elixir phoenix
" 0 4 (fontified t) 4 36 (fontified t) 36 38 (fontified t face font-lock-keyword-face) 38 46 (fontified t) 46 47 (fontified t syntax-table (15) face font-lock-string-face) 47 58 (fontified t face font-lock-string-face) 58 59 (fontified t syntax-table (15) face font-lock-string-face) 59 72 (fontified t) 72 74 (fontified t face font-lock-type-face) 74 84 (fontified t) 84 87 (fontified t face font-lock-keyword-face) 87 117 (fontified t) 117 118 (fontified t rear-nonsticky t) 118 119 (fontified t)) . -799) (undo-tree-id2459 . -119) (undo-tree-id2460 . -119) (undo-tree-id2461 . -4) (undo-tree-id2462 . -119) 918) nil (25412 12986 152139 594000) 0 nil])
([nil nil ((801 . 805) (#("    " 0 4 (fontified t)) . 800) (undo-tree-id2457 . -4) (800 . 805) (#("    " 0 4 (fontified t)) . 799) (undo-tree-id2458 . -4) (798 . 804)) nil (25412 12986 152129 976000) 0 nil])
([nil nil ((801 . 805) (#("    " 0 4 (fontified nil)) . 800) (800 . 804) (800 . 801)) nil (25412 12986 152122 121000) 0 nil])
([nil nil ((nil rear-nonsticky nil 918 . 919) (nil fontified nil 805 . 919) (805 . 919)) nil (25412 12986 152118 624000) 0 nil])
([nil nil ((#("
    (not_null_violation) null value in column \"inserted_at\" of relation XX violates not-null constraint elixir phoenix
" 0 1 (fontified t) 1 5 (fontified t) 5 37 (fontified t) 37 39 (fontified t face font-lock-keyword-face) 39 47 (fontified t) 47 48 (fontified t syntax-table (15) face font-lock-string-face) 48 59 (fontified t face font-lock-string-face) 59 60 (fontified t syntax-table (15) face font-lock-string-face) 60 73 (fontified t) 73 75 (fontified t face font-lock-type-face) 75 85 (fontified t) 85 88 (fontified t face font-lock-keyword-face) 88 118 (fontified t) 118 119 (fontified t rear-nonsticky t) 119 120 (fontified t)) . -800) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -120) (undo-tree-id2452 . -120) (undo-tree-id2453 . -120) (undo-tree-id2454 . -120) (undo-tree-id2455 . -5) (undo-tree-id2456 . -120) 920) nil (25412 12986 152114 697000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1014 . 1015) (nil fontified nil 1014 . 1015) (nil fontified nil 1013 . 1014) (nil fontified nil 1012 . 1013) (nil fontified nil 1010 . 1012) (nil fontified nil 1006 . 1010) (nil fontified nil 1005 . 1006) (nil fontified nil 1000 . 1005) (nil fontified nil 999 . 1000) (nil fontified nil 998 . 999) (nil fontified nil 997 . 998) (nil fontified nil 996 . 997) (nil fontified nil 995 . 996) (nil fontified nil 993 . 995) (nil fontified nil 992 . 993) (nil fontified nil 990 . 992) (nil fontified nil 986 . 990) (nil fontified nil 985 . 986) (nil fontified nil 982 . 985) (nil fontified nil 981 . 982) (nil fontified nil 980 . 981) (nil fontified nil 978 . 980) (nil fontified nil 977 . 978) (nil fontified nil 975 . 977) (nil fontified nil 967 . 975) (nil fontified nil 966 . 967) (nil fontified nil 965 . 966) (nil fontified nil 964 . 965) (nil fontified nil 958 . 964) (nil fontified nil 952 . 958) (nil fontified nil 945 . 952) (nil fontified nil 942 . 945) (nil fontified nil 941 . 942) (nil fontified nil 940 . 941) (nil fontified nil 939 . 940) (nil fontified nil 936 . 939) (nil fontified nil 935 . 936) (nil fontified nil 933 . 935) (nil fontified nil 925 . 933) (nil fontified nil 924 . 925) (nil fontified nil 921 . 924) (nil fontified nil 914 . 921) (nil fontified nil 912 . 914) (nil fontified nil 911 . 912) (nil fontified nil 909 . 911) (nil fontified nil 908 . 909) (nil fontified nil 907 . 908) (nil fontified nil 903 . 907) (nil fontified nil 891 . 903) (nil fontified nil 886 . 891) (nil fontified nil 885 . 886) (nil fontified nil 883 . 885) (nil fontified nil 882 . 883) (nil fontified nil 877 . 882) (nil fontified nil 875 . 877) (nil fontified nil 874 . 875) (nil fontified nil 873 . 874) (nil fontified nil 867 . 873) (nil fontified nil 863 . 867) (nil fontified nil 862 . 863) (nil fontified nil 859 . 862) (nil fontified nil 856 . 859) (nil fontified nil 854 . 856) (nil fontified nil 846 . 854) (nil fontified nil 845 . 846) (nil fontified nil 843 . 845) (nil fontified nil 842 . 843) (nil fontified nil 836 . 842) (nil fontified nil 835 . 836) (nil fontified nil 829 . 835) (nil fontified nil 827 . 829) (nil fontified nil 826 . 827) (nil fontified nil 822 . 826) (nil fontified nil 821 . 822) (nil fontified nil 818 . 821) (nil fontified nil 813 . 818) (nil fontified nil 812 . 813) (nil fontified nil 808 . 812) (nil fontified nil 807 . 808) (nil fontified nil 805 . 807) (nil fontified nil 804 . 805) (nil fontified nil 801 . 804) (nil fontified nil 800 . 801) (nil fontified nil 799 . 800) (799 . 1015)) nil (25412 12986 152087 727000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -799) (undo-tree-id2448 . -1) 800) nil (25412 12986 152049 615000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -812) (undo-tree-id2447 . -1) 813) nil (25412 12986 152045 438000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -844) (undo-tree-id2446 . -1) 845) nil (25412 12986 152040 739000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -921) (undo-tree-id2444 . -1) (#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -922) (undo-tree-id2445 . -1) 923) nil (25412 12986 152034 657000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -961) (undo-tree-id2443 . -1) 962) nil (25412 12986 152022 755000) 0 nil])
([nil nil ((712 . 727) (t 25412 12986 190558 559000)) nil (25412 13030 709505 340000) 0 nil])
([nil nil ((#("q" 0 1 (fontified t)) . -928) (undo-tree-id2463 . -1) (#("u" 0 1 (fontified t)) . -929) (undo-tree-id2464 . -1) (#("o" 0 1 (fontified t)) . -930) (undo-tree-id2465 . -1) (#("t" 0 1 (fontified t)) . -931) (undo-tree-id2466 . -1) (#("a" 0 1 (fontified t)) . -932) (undo-tree-id2467 . -1) 933) nil (25412 13030 709498 197000) 0 nil])
([nil nil ((928 . 942)) nil (25412 13030 709458 182000) 0 nil])
([nil nil ((713 . 714) (t 25412 13030 746715 58000)) nil (25412 13044 540747 717000) 0 nil])
([nil nil ((#("q" 0 1 (fontified t)) . -1026) (undo-tree-id2468 . -1) (#("u" 0 1 (fontified t)) . -1027) (undo-tree-id2469 . -1) (#("o" 0 1 (fontified t)) . -1028) (undo-tree-id2470 . -1) (#("t" 0 1 (fontified t)) . -1029) (undo-tree-id2471 . -1) (#("a" 0 1 (fontified t)) . -1030) (undo-tree-id2472 . -1) 1031 (t 25412 13044 614770 707000)) nil (25412 13058 859506 745000) 0 nil])
([nil nil ((1026 . 1039)) nil (25412 13058 859472 50000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face elixir-atom-face)) . -923) (undo-tree-id2473 . -1) (#("h" 0 1 (fontified t face elixir-atom-face)) . -924) (undo-tree-id2474 . -1) (#("o" 0 1 (fontified t face elixir-atom-face)) . -925) (undo-tree-id2475 . -1) (#("w" 0 1 (fontified t face elixir-atom-face)) . -926) (undo-tree-id2476 . -1) 927 (t 25412 13058 882831 227000)) nil (25412 13176 464185 858000) 0 nil])
([nil nil ((923 . 928)) nil (25412 13176 464167 453000) 0 nil])
([nil nil ((1052 . 1053) (t 25412 13176 487445 337000)) nil (25412 13214 500823 312000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 988) (t 25412 13214 527683 381000)) nil (25412 13258 934441 338000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 860)) nil (25412 13258 934438 993000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 828)) nil (25412 13258 934436 899000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -820) (#("    " 0 4 (fontified nil)) . 815) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (816 . 819) (816 . 817)) nil (25412 13258 934434 4000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 825) (#(" " 0 1 (fontified t)) . 825) (#(" " 0 1 (fontified t)) . 825)) nil (25412 13258 934425 939000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 853) (#(" " 0 1 (fontified t)) . 853) (#(" " 0 1 (fontified t)) . 853)) nil (25412 13258 934422 592000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 937)) nil (25412 13258 934419 567000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 937) (#(" " 0 1 (fontified t)) . 937)) nil (25412 13258 934417 12000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 974) (#(" " 0 1 (fontified t)) . 974) (#(" " 0 1 (fontified t)) . 974)) nil (25412 13258 934412 734000) 0 nil])
([nil nil ((#("    |> IO.inspect()" 0 7 (fontified t) 7 9 (fontified t face font-lock-type-face) 9 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t)) . 795) (undo-tree-id2477 . -19)) nil (25412 13258 934404 348000) 0 nil])
([nil nil ((#("   # |>Phoenix.View.render_many(CabbotWeb.QuotaView,\"show.json\")
" 0 3 (fontified t) 3 5 (fontified t face font-lock-comment-delimiter-face) 5 7 (fontified t face font-lock-comment-face) 7 19 (fontified t face font-lock-comment-face) 19 32 (fontified t face font-lock-comment-face) 32 42 (fontified t face font-lock-comment-face) 42 51 (fontified t face font-lock-comment-face) 51 52 (fontified t face font-lock-comment-face) 52 53 (syntax-table (15) fontified t face font-lock-comment-face) 53 62 (fontified t face font-lock-comment-face) 62 63 (syntax-table (15) fontified t face font-lock-comment-face) 63 64 (fontified t face font-lock-comment-face) 64 65 (fontified t face font-lock-comment-face)) . -1013) (undo-tree-id2542 . -65) (undo-tree-id2543 . -65) (undo-tree-id2544 . -5) (undo-tree-id2545 . -65) (undo-tree-id2546 . -65) (undo-tree-id2547 . -65) 1078 (t 25412 13258 999983 78000)) nil (25412 13371 309476 745000) 0 nil])
([nil nil ((1275 . 1279) (#("    " 0 4 (fontified t)) . 1274) (undo-tree-id2541 . -4) (1273 . 1279)) nil (25412 13371 309464 852000) 0 nil])
([nil nil ((1198 . 1211)) nil (25412 13371 309460 694000) 0 nil])
([nil nil ((1207 . 1221)) nil (25412 13371 309458 891000) 0 nil])
([nil nil ((1225 . 1228)) nil (25412 13371 309457 38000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t face font-lock-variable-name-face)) . -716) (undo-tree-id2537 . -1) (#("n" 0 1 (fontified t face font-lock-variable-name-face)) . -717) (undo-tree-id2538 . -1) (#("s" 0 1 (fontified t face font-lock-variable-name-face)) . -718) (undo-tree-id2539 . -1) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -719) (undo-tree-id2540 . -1) 720) nil (25412 13371 309453 651000) 0 nil])
([nil nil ((717 . 719)) nil (25412 13371 309443 11000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -899) (undo-tree-id2524 . -1) (#("e" 0 1 (fontified t)) . -900) (undo-tree-id2525 . -1) (#("s" 0 1 (fontified t)) . -901) (undo-tree-id2526 . -1) (#("p" 0 1 (fontified t)) . -902) (undo-tree-id2527 . -1) (#("o" 0 1 (fontified t)) . -903) (undo-tree-id2528 . -1) (#("n" 0 1 (fontified t)) . -904) (undo-tree-id2529 . -1) (#("s" 0 1 (fontified t)) . -905) (undo-tree-id2530 . -1) (#("e" 0 1 (fontified t)) . -906) (undo-tree-id2531 . -1) (#("_" 0 1 (fontified t)) . -907) (undo-tree-id2532 . -1) (#("d" 0 1 (fontified t)) . -908) (undo-tree-id2533 . -1) (#("a" 0 1 (fontified t)) . -909) (undo-tree-id2534 . -1) (#("t" 0 1 (fontified t)) . -910) (undo-tree-id2535 . -1) (#("a" 0 1 (fontified t)) . -911) (undo-tree-id2536 . -1) 912) nil (25412 13371 309436 279000) 0 nil])
([nil nil ((nil rear-nonsticky nil 909 . 910) (nil fontified nil 899 . 910) (899 . 910)) nil (25412 13371 309410 210000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -987) (undo-tree-id2511 . -1) (#("e" 0 1 (fontified t)) . -988) (undo-tree-id2512 . -1) (#("s" 0 1 (fontified t)) . -989) (undo-tree-id2513 . -1) (#("p" 0 1 (fontified t)) . -990) (undo-tree-id2514 . -1) (#("o" 0 1 (fontified t)) . -991) (undo-tree-id2515 . -1) (#("n" 0 1 (fontified t)) . -992) (undo-tree-id2516 . -1) (#("s" 0 1 (fontified t)) . -993) (undo-tree-id2517 . -1) (#("e" 0 1 (fontified t)) . -994) (undo-tree-id2518 . -1) (#("_" 0 1 (fontified t)) . -995) (undo-tree-id2519 . -1) (#("d" 0 1 (fontified t)) . -996) (undo-tree-id2520 . -1) (#("a" 0 1 (fontified t)) . -997) (undo-tree-id2521 . -1) (#("t" 0 1 (fontified t)) . -998) (undo-tree-id2522 . -1) (#("a" 0 1 (fontified t)) . -999) (undo-tree-id2523 . -1) 1000) nil (25412 13371 309402 636000) 0 nil])
([nil nil ((nil rear-nonsticky nil 997 . 998) (nil fontified nil 987 . 998) (987 . 998)) nil (25412 13371 309215 344000) 0 nil])
([nil nil ((#(" 
" 0 1 (rear-nonsticky t fontified t) 1 2 (fontified t)) . 1000) (undo-tree-id2506 . -2) (undo-tree-id2507 . -2) (undo-tree-id2508 . -2) (undo-tree-id2509 . -2) (undo-tree-id2510 . -2)) nil (25412 13371 309212 18000) 0 nil])
([nil nil ((#("    
" 0 4 (fontified t) 4 5 (fontified t)) . 1000) (undo-tree-id2499 . -5) (undo-tree-id2500 . -5) (undo-tree-id2501 . -5) (undo-tree-id2502 . -5) (undo-tree-id2503 . -5) (undo-tree-id2504 . -5) (undo-tree-id2505 . -5)) nil (25412 13371 309201 979000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1000) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1)) nil (25412 13371 309189 486000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t face font-lock-variable-name-face)) . -1188) (undo-tree-id2492 . -1) (#("n" 0 1 (fontified t face font-lock-variable-name-face)) . -1189) (undo-tree-id2493 . -1) (#("s" 0 1 (fontified t face font-lock-variable-name-face)) . -1190) (undo-tree-id2494 . -1) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -1191) (undo-tree-id2495 . -1) 1192) nil (25412 13371 309179 66000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t face font-lock-variable-name-face)) . -1190) (undo-tree-id2486 . -1) (#("i" 0 1 (fontified t face font-lock-variable-name-face)) . -1191) (undo-tree-id2487 . -1) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -1192) (undo-tree-id2488 . -1) (#("n" 0 1 (fontified t face font-lock-variable-name-face)) . -1193) (undo-tree-id2489 . -1) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -1194) (undo-tree-id2490 . -1) (#("s" 0 1 (fontified t face font-lock-variable-name-face)) . -1195) (undo-tree-id2491 . -1) 1196) nil (25412 13371 309167 344000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t face font-lock-variable-name-face)) . -1190) (undo-tree-id2485 . -1) 1191) nil (25412 13371 309153 618000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t face font-lock-variable-name-face)) . -1191) (undo-tree-id2481 . -1) (#("o" 0 1 (fontified t face font-lock-variable-name-face)) . -1192) (undo-tree-id2482 . -1) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -1193) (undo-tree-id2483 . -1) (#("a" 0 1 (fontified t face font-lock-variable-name-face)) . -1194) (undo-tree-id2484 . -1) 1195) nil (25412 13371 309147 497000) 0 nil])
([nil nil ((1276 . 1280) (#("    " 0 4 (fontified t)) . 1275) (undo-tree-id2480 . -4) (1274 . 1280)) nil (25412 13371 309135 715000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1484 . 1485) (nil fontified nil 1484 . 1485) (nil fontified nil 1483 . 1484) (nil fontified nil 1482 . 1483) (nil fontified nil 1472 . 1482) (nil fontified nil 1471 . 1472) (nil fontified nil 1470 . 1471) (nil fontified nil 1465 . 1470) (nil fontified nil 1464 . 1465) (nil fontified nil 1463 . 1464) (nil fontified nil 1462 . 1463) (nil fontified nil 1461 . 1462) (nil fontified nil 1460 . 1461) (nil fontified nil 1458 . 1460) (nil fontified nil 1457 . 1458) (nil fontified nil 1455 . 1457) (nil fontified nil 1451 . 1455) (nil fontified nil 1450 . 1451) (nil fontified nil 1447 . 1450) (nil fontified nil 1446 . 1447) (nil fontified nil 1445 . 1446) (nil fontified nil 1443 . 1445) (nil fontified nil 1442 . 1443) (nil fontified nil 1440 . 1442) (nil fontified nil 1436 . 1440) (nil fontified nil 1435 . 1436) (nil fontified nil 1434 . 1435) (nil fontified nil 1428 . 1434) (nil fontified nil 1422 . 1428) (nil fontified nil 1415 . 1422) (nil fontified nil 1412 . 1415) (nil fontified nil 1411 . 1412) (nil fontified nil 1410 . 1411) (nil fontified nil 1409 . 1410) (nil fontified nil 1406 . 1409) (nil fontified nil 1405 . 1406) (nil fontified nil 1403 . 1405) (nil fontified nil 1399 . 1403) (nil fontified nil 1396 . 1399) (nil fontified nil 1395 . 1396) (nil fontified nil 1394 . 1395) (nil fontified nil 1384 . 1394) (nil fontified nil 1382 . 1384) (nil fontified nil 1376 . 1382) (nil fontified nil 1375 . 1376) (nil fontified nil 1374 . 1375) (nil fontified nil 1370 . 1374) (nil fontified nil 1358 . 1370) (nil fontified nil 1353 . 1358) (nil fontified nil 1352 . 1353) (nil fontified nil 1350 . 1352) (nil fontified nil 1349 . 1350) (nil fontified nil 1344 . 1349) (nil fontified nil 1342 . 1344) (nil fontified nil 1341 . 1342) (nil fontified nil 1340 . 1341) (nil fontified nil 1334 . 1340) (nil fontified nil 1330 . 1334) (nil fontified nil 1329 . 1330) (nil fontified nil 1326 . 1329) (nil fontified nil 1323 . 1326) (nil fontified nil 1321 . 1323) (nil fontified nil 1317 . 1321) (nil fontified nil 1315 . 1317) (nil fontified nil 1314 . 1315) (nil fontified nil 1308 . 1314) (nil fontified nil 1307 . 1308) (nil fontified nil 1301 . 1307) (nil fontified nil 1299 . 1301) (nil fontified nil 1298 . 1299) (nil fontified nil 1294 . 1298) (nil fontified nil 1293 . 1294) (nil fontified nil 1290 . 1293) (nil fontified nil 1289 . 1290) (nil fontified nil 1288 . 1289) (nil fontified nil 1285 . 1288) (nil fontified nil 1284 . 1285) (nil fontified nil 1283 . 1284) (nil fontified nil 1280 . 1283) (1280 . 1485)) nil (25412 13371 309110 918000) 0 nil])
([nil nil ((1389 . 1390)) nil (25412 13371 309075 802000) 0 nil])
([nil nil ((1478 . 1479)) nil (25412 13371 309068 789000) 0 nil])
([nil nil ((#("q" 0 1 (fontified t face elixir-atom-face)) . -1465) (undo-tree-id2548 . -1) (#("u" 0 1 (fontified t face elixir-atom-face)) . -1466) (undo-tree-id2549 . -1) (#("o" 0 1 (fontified t face elixir-atom-face)) . -1467) (undo-tree-id2550 . -1) (#("t" 0 1 (fontified t face elixir-atom-face)) . -1468) (undo-tree-id2551 . -1) (#("a" 0 1 (fontified t face elixir-atom-face)) . -1469) (undo-tree-id2552 . -1) (#("s" 0 1 (fontified t face elixir-atom-face)) . -1470) (undo-tree-id2553 . -1) 1471 (t 25412 13371 344830 790000)) nil (25412 13402 454805 968000) 0 nil])
([nil nil ((1465 . 1479)) nil (25412 13402 454773 46000) 0 nil])
([nil nil ((1426 . 1433) (t 25412 13402 481086 53000)) nil (25412 13410 992659 137000) 0 nil])
([nil nil ((#("

    
    |>Phoenix.View.render_many(CabbotWeb.ClientsQuotaView,\"clients_quota.json\")

" 0 1 (fontified t) 1 6 (fontified t) 6 7 (fontified t) 7 13 (fontified t) 13 25 (fontified t face font-lock-type-face) 25 38 (fontified t) 38 55 (fontified t face font-lock-type-face) 55 64 (fontified t face font-lock-type-face) 64 65 (fontified t) 65 66 (syntax-table (15) fontified t face font-lock-string-face) 66 80 (fontified t face font-lock-string-face) 80 81 (fontified t face font-lock-string-face) 81 84 (fontified t face font-lock-string-face) 84 85 (syntax-table (15) fontified t face font-lock-string-face) 85 86 (fontified t) 86 87 (fontified t) 87 88 (rear-nonsticky t fontified t)) . -1502) (undo-tree-id2616 . -88) (undo-tree-id2617 . -88) (undo-tree-id2618 . -7) (undo-tree-id2619 . -7) (undo-tree-id2620 . -87) (undo-tree-id2621 . -87) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -2) (undo-tree-id2625 . -2) (undo-tree-id2626 . -88) (undo-tree-id2627 . -88) (undo-tree-id2628 . -88) 1590 (t 25412 13411 29157 526000)) nil (25412 13462 218409 904000) 0 nil])
([nil nil ((#("   # Creditos.create_many_quotas(qmap)
    
 #   qm    
 #   |> Enum.map(fn quota_map ->
 #     with [:Quota] <- quota_map |> Map.keys(),
 #          {:ok, %Quota{} = quota} <-
 #            Creditos.create_quota(
 #              quota_map
 #              |> Map.values()
 #              |> hd
 #            ) do
 #       conn
 #       |> put_status(:created)
 #       |> put_resp_header(\"location\", Routes.quota_path(conn, :show, quota))
 #       |> put_view(CabbotWeb.QuotaView)
#        |> render(\"index.json\", quotas: quota)
 #     end

 #     with [:ClientsQuota] <- quota_map |> Map.keys(),
 #          {:ok, %ClientsQuota{} = clients_quota} <-
 #            Creditos.create_clients_quota(
 #              quota_map
 #              |> Map.values()
 #              |> hd
 #            ) do
 #       conn
  #      |> put_status(:created)
  #      |> put_resp_header(\"location\", Routes.quota_path(conn, :show, clients_quota))
  #      |> put_view(CabbotWeb.ClientsQuotaView)
  #      |> render(\"show.json\", clients_quota: clients_quota)
  #    end
  #  end)
" 0 2 (fontified t) 2 3 (fontified t) 3 5 (fontified t face font-lock-comment-delimiter-face) 5 7 (fontified t face font-lock-comment-face) 7 13 (fontified t face font-lock-comment-face) 13 17 (fontified t face font-lock-comment-face) 17 20 (fontified t face font-lock-comment-face) 20 22 (fontified t face font-lock-comment-face) 22 25 (fontified t face font-lock-comment-face) 25 32 (fontified t face font-lock-comment-face) 32 33 (fontified t face font-lock-comment-face) 33 36 (fontified t face font-lock-comment-face) 36 37 (fontified t face font-lock-comment-face) 37 38 (fontified t face font-lock-comment-face) 38 39 (fontified t face font-lock-comment-face) 39 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t face font-lock-comment-delimiter-face) 46 49 (fontified t face font-lock-comment-delimiter-face) 49 51 (fontified t face font-lock-comment-face) 51 55 (fontified t face font-lock-comment-face) 55 56 (fontified t face font-lock-comment-face) 56 57 (fontified t) 57 58 (fontified t face font-lock-comment-delimiter-face) 58 61 (fontified t face font-lock-comment-delimiter-face) 61 64 (fontified t face font-lock-comment-face) 64 67 (fontified t face font-lock-comment-face) 67 68 (fontified t face font-lock-comment-face) 68 73 (fontified t face font-lock-comment-face) 73 75 (fontified t face font-lock-comment-face) 75 79 (fontified t face font-lock-comment-face) 79 80 (fontified t face font-lock-comment-face) 80 82 (fontified t face font-lock-comment-face) 82 86 (fontified t face font-lock-comment-face) 86 87 (fontified t face font-lock-comment-face) 87 88 (fontified t face font-lock-comment-face) 88 89 (fontified t face font-lock-comment-face) 89 90 (fontified t) 90 96 (fontified t face font-lock-comment-delimiter-face) 96 100 (fontified t face font-lock-comment-face) 100 102 (fontified t face font-lock-comment-face) 102 106 (fontified t face font-lock-comment-face) 106 108 (fontified t face font-lock-comment-face) 108 111 (fontified t face font-lock-comment-face) 111 112 (fontified t face font-lock-comment-face) 112 113 (fontified t face font-lock-comment-face) 113 117 (fontified t face font-lock-comment-face) 117 122 (fontified t face font-lock-comment-face) 122 126 (fontified t face font-lock-comment-face) 126 127 (fontified t face font-lock-comment-face) 127 128 (fontified t face font-lock-comment-face) 128 129 (fontified t face font-lock-comment-face) 129 130 (fontified t face font-lock-comment-face) 130 132 (fontified t face font-lock-comment-face) 132 133 (fontified t face font-lock-comment-face) 133 137 (fontified t face font-lock-comment-face) 137 138 (fontified t face font-lock-comment-face) 138 139 (fontified t) 139 143 (fontified t face font-lock-comment-delimiter-face) 143 150 (fontified t face font-lock-comment-delimiter-face) 150 151 (fontified t face font-lock-comment-face) 151 152 (fontified t face font-lock-comment-face) 152 154 (fontified t face font-lock-comment-face) 154 156 (fontified t face font-lock-comment-face) 156 158 (fontified t face font-lock-comment-face) 158 159 (fontified t face font-lock-comment-face) 159 161 (fontified t face font-lock-comment-face) 161 162 (fontified t face font-lock-comment-face) 162 164 (fontified t face font-lock-comment-face) 164 166 (fontified t face font-lock-comment-face) 166 177 (fontified t face font-lock-comment-face) 177 178 (fontified t) 178 181 (fontified t face font-lock-comment-delimiter-face) 181 182 (fontified t face font-lock-comment-delimiter-face) 182 183 (fontified t face font-lock-comment-delimiter-face) 183 184 (fontified t face font-lock-comment-delimiter-face) 184 191 (fontified t face font-lock-comment-delimiter-face) 191 198 (fontified t face font-lock-comment-face) 198 199 (fontified t face font-lock-comment-face) 199 202 (fontified t face font-lock-comment-face) 202 204 (fontified t face font-lock-comment-face) 204 210 (fontified t face font-lock-comment-face) 210 213 (fontified t face font-lock-comment-face) 213 214 (fontified t face font-lock-comment-face) 214 215 (fontified t) 215 217 (fontified t face font-lock-comment-delimiter-face) 217 218 (fontified t face font-lock-comment-delimiter-face) 218 221 (fontified t face font-lock-comment-delimiter-face) 221 227 (fontified t face font-lock-comment-delimiter-face) 227 228 (fontified t face font-lock-comment-delimiter-face) 228 230 (fontified t face font-lock-comment-delimiter-face) 230 237 (fontified t face font-lock-comment-face) 237 240 (fontified t face font-lock-comment-face) 240 241 (fontified t) 241 245 (fontified t face font-lock-comment-delimiter-face) 245 247 (fontified t face font-lock-comment-delimiter-face) 247 256 (fontified t face font-lock-comment-delimiter-face) 256 259 (fontified t face font-lock-comment-face) 259 262 (fontified t face font-lock-comment-face) 262 265 (fontified t face font-lock-comment-face) 265 266 (fontified t face font-lock-comment-face) 266 270 (fontified t face font-lock-comment-face) 270 272 (fontified t face font-lock-comment-face) 272 273 (fontified t) 273 286 (fontified t face font-lock-comment-delimiter-face) 286 288 (fontified t face font-lock-comment-delimiter-face) 288 293 (fontified t face font-lock-comment-face) 293 294 (fontified t face font-lock-comment-face) 294 295 (fontified t) 295 296 (fontified t face font-lock-comment-delimiter-face) 296 297 (fontified t face font-lock-comment-delimiter-face) 297 298 (fontified t face font-lock-comment-delimiter-face) 298 304 (fontified t face font-lock-comment-delimiter-face) 304 308 (fontified t face font-lock-comment-delimiter-face) 308 310 (fontified t face font-lock-comment-face) 310 312 (fontified t face font-lock-comment-face) 312 313 (fontified t face font-lock-comment-face) 313 314 (fontified t) 314 315 (fontified t face font-lock-comment-delimiter-face) 315 316 (fontified t face font-lock-comment-delimiter-face) 316 318 (fontified t face font-lock-comment-delimiter-face) 318 319 (fontified t face font-lock-comment-delimiter-face) 319 320 (fontified t face font-lock-comment-delimiter-face) 320 322 (fontified t face font-lock-comment-delimiter-face) 322 323 (fontified t face font-lock-comment-face) 323 327 (fontified t face font-lock-comment-face) 327 328 (fontified t) 328 332 (fontified t face font-lock-comment-delimiter-face) 332 333 (fontified t face font-lock-comment-delimiter-face) 333 336 (fontified t face font-lock-comment-delimiter-face) 336 337 (fontified t face font-lock-comment-face) 337 341 (fontified t face font-lock-comment-face) 341 342 (fontified t face font-lock-comment-face) 342 344 (fontified t face font-lock-comment-face) 344 347 (fontified t face font-lock-comment-face) 347 350 (fontified t face font-lock-comment-face) 350 351 (fontified t face font-lock-comment-face) 351 356 (fontified t face font-lock-comment-face) 356 357 (fontified t face font-lock-comment-face) 357 358 (fontified t face font-lock-comment-face) 358 360 (fontified t face font-lock-comment-face) 360 361 (fontified t) 361 369 (fontified t face font-lock-comment-delimiter-face) 369 371 (fontified t face font-lock-comment-face) 371 374 (fontified t face font-lock-comment-face) 374 377 (fontified t face font-lock-comment-face) 377 378 (fontified t face font-lock-comment-face) 378 382 (fontified t face font-lock-comment-face) 382 388 (fontified t face font-lock-comment-face) 388 389 (syntax-table (15) fontified t face font-lock-comment-face) 389 390 (fontified t face font-lock-comment-face) 390 391 (fontified t face font-lock-comment-face) 391 392 (fontified t face font-lock-comment-face) 392 397 (fontified t face font-lock-comment-face) 397 398 (syntax-table (15) fontified t face font-lock-comment-face) 398 400 (fontified t face font-lock-comment-face) 400 401 (fontified t face font-lock-comment-face) 401 405 (fontified t face font-lock-comment-face) 405 406 (fontified t face font-lock-comment-face) 406 412 (fontified t face font-lock-comment-face) 412 418 (fontified t face font-lock-comment-face) 418 422 (fontified t face font-lock-comment-face) 422 423 (fontified t face font-lock-comment-face) 423 424 (fontified t face font-lock-comment-face) 424 426 (fontified t face font-lock-comment-face) 426 427 (fontified t face font-lock-comment-face) 427 429 (fontified t face font-lock-comment-face) 429 436 (fontified t face font-lock-comment-face) 436 439 (fontified t face font-lock-comment-face) 439 440 (fontified t) 440 448 (fontified t face font-lock-comment-delimiter-face) 448 450 (fontified t face font-lock-comment-face) 450 451 (fontified t face font-lock-comment-face) 451 454 (fontified t face font-lock-comment-face) 454 455 (fontified t face font-lock-comment-face) 455 456 (fontified t face font-lock-comment-face) 456 457 (fontified t face font-lock-comment-face) 457 460 (fontified t face font-lock-comment-face) 460 467 (fontified t face font-lock-comment-face) 467 473 (fontified t face font-lock-comment-face) 473 479 (fontified t face font-lock-comment-face) 479 480 (fontified t face font-lock-comment-face) 480 481 (fontified t face font-lock-comment-face) 481 482 (fontified t face font-lock-comment-delimiter-face) 482 490 (fontified t face font-lock-comment-delimiter-face) 490 492 (fontified t face font-lock-comment-face) 492 493 (fontified t face font-lock-comment-face) 493 495 (fontified t face font-lock-comment-face) 495 496 (face font-lock-comment-face fontified t) 496 497 (face font-lock-comment-face fontified t) 497 500 (face font-lock-comment-face fontified t) 500 501 (syntax-table (15) face font-lock-comment-face fontified t) 501 505 (face font-lock-comment-face fontified t) 505 507 (face font-lock-comment-face fontified t) 507 508 (face font-lock-comment-face fontified t) 508 510 (face font-lock-comment-face fontified t) 510 511 (face font-lock-comment-face fontified t) 511 512 (syntax-table (15) face font-lock-comment-face fontified t) 512 513 (face font-lock-comment-face fontified t) 513 514 (face font-lock-comment-face fontified t) 514 515 (face font-lock-comment-face fontified t) 515 520 (face font-lock-comment-face fontified t) 520 521 (face font-lock-comment-face fontified t) 521 525 (face font-lock-comment-face fontified t) 525 527 (face font-lock-comment-face fontified t) 527 528 (face font-lock-comment-face fontified t) 528 529 (face font-lock-comment-face fontified t) 529 530 (fontified t) 530 536 (fontified t face font-lock-comment-delimiter-face) 536 539 (fontified t face font-lock-comment-face) 539 540 (fontified t face font-lock-comment-face) 540 541 (fontified t) 541 542 (fontified t) 542 548 (fontified t face font-lock-comment-delimiter-face) 548 549 (fontified t face font-lock-comment-face) 549 550 (fontified t face font-lock-comment-face) 550 552 (fontified t face font-lock-comment-face) 552 554 (fontified t face font-lock-comment-face) 554 556 (fontified t face font-lock-comment-face) 556 557 (fontified t face font-lock-comment-face) 557 558 (fontified t face font-lock-comment-face) 558 560 (fontified t face font-lock-comment-face) 560 566 (fontified t face font-lock-comment-face) 566 567 (fontified t face font-lock-comment-face) 567 585 (fontified t face font-lock-comment-face) 585 588 (fontified t face font-lock-comment-face) 588 589 (fontified t face font-lock-comment-face) 589 590 (fontified t face font-lock-comment-face) 590 591 (fontified t face font-lock-comment-face) 591 597 (fontified t face font-lock-comment-face) 597 598 (fontified t) 598 606 (fontified t face font-lock-comment-delimiter-face) 606 609 (fontified t face font-lock-comment-delimiter-face) 609 610 (fontified t face font-lock-comment-face) 610 613 (fontified t face font-lock-comment-face) 613 615 (fontified t face font-lock-comment-face) 615 628 (fontified t face font-lock-comment-face) 628 638 (fontified t face font-lock-comment-face) 638 651 (fontified t face font-lock-comment-face) 651 652 (fontified t) 652 665 (fontified t face font-lock-comment-delimiter-face) 665 673 (fontified t face font-lock-comment-face) 673 677 (fontified t face font-lock-comment-face) 677 696 (fontified t face font-lock-comment-face) 696 697 (fontified t) 697 712 (fontified t face font-lock-comment-delimiter-face) 712 722 (fontified t face font-lock-comment-face) 722 723 (fontified t) 723 738 (fontified t face font-lock-comment-delimiter-face) 738 741 (fontified t face font-lock-comment-face) 741 744 (fontified t face font-lock-comment-face) 744 754 (fontified t face font-lock-comment-face) 754 755 (fontified t) 755 770 (fontified t face font-lock-comment-delimiter-face) 770 772 (fontified t face font-lock-comment-face) 772 776 (fontified t face font-lock-comment-face) 776 777 (fontified t) 777 779 (fontified t face font-lock-comment-delimiter-face) 779 782 (fontified t face font-lock-comment-delimiter-face) 782 790 (fontified t face font-lock-comment-delimiter-face) 790 792 (fontified t face font-lock-comment-face) 792 794 (fontified t face font-lock-comment-face) 794 795 (fontified t face font-lock-comment-face) 795 796 (fontified t) 796 801 (fontified t face font-lock-comment-delimiter-face) 801 804 (fontified t face font-lock-comment-delimiter-face) 804 809 (fontified t face font-lock-comment-face) 809 811 (fontified t) 811 818 (fontified t face font-lock-comment-delimiter-face) 818 823 (fontified t face font-lock-comment-face) 823 828 (fontified t face font-lock-comment-face) 828 832 (fontified t face font-lock-comment-face) 832 837 (fontified t face font-lock-comment-face) 837 840 (fontified t face font-lock-comment-face) 840 842 (fontified t face font-lock-comment-face) 842 844 (fontified t) 844 851 (fontified t face font-lock-comment-delimiter-face) 851 870 (fontified t face font-lock-comment-face) 870 871 (syntax-table (15) fontified t face font-lock-comment-face) 871 879 (fontified t face font-lock-comment-face) 879 880 (syntax-table (15) fontified t face font-lock-comment-face) 880 882 (fontified t face font-lock-comment-face) 882 888 (fontified t face font-lock-comment-face) 888 906 (fontified t face font-lock-comment-face) 906 911 (fontified t face font-lock-comment-face) 911 929 (fontified t face font-lock-comment-face) 929 931 (fontified t) 931 938 (fontified t face font-lock-comment-delimiter-face) 938 939 (fontified t face font-lock-comment-face) 939 950 (fontified t face font-lock-comment-face) 950 951 (fontified t face font-lock-comment-face) 951 976 (fontified t face font-lock-comment-face) 976 978 (fontified t face font-lock-comment-face) 978 980 (fontified t) 980 987 (fontified t face font-lock-comment-delimiter-face) 987 994 (fontified t face font-lock-comment-face) 994 997 (fontified t face font-lock-comment-face) 997 998 (syntax-table (15) fontified t face font-lock-comment-face) 998 1007 (fontified t face font-lock-comment-face) 1007 1008 (syntax-table (15) fontified t face font-lock-comment-face) 1008 1010 (fontified t face font-lock-comment-face) 1010 1024 (fontified t face font-lock-comment-face) 1024 1029 (fontified t face font-lock-comment-face) 1029 1040 (face font-lock-comment-face fontified t) 1040 1041 (fontified t) 1041 1042 (fontified t) 1042 1043 (fontified t face font-lock-comment-delimiter-face) 1043 1047 (fontified t face font-lock-comment-delimiter-face) 1047 1050 (fontified t face font-lock-comment-face) 1050 1051 (rear-nonsticky t fontified t face font-lock-comment-face) 1051 1052 (fontified t) 1052 1053 (fontified t) 1053 1054 (fontified t face font-lock-comment-delimiter-face) 1054 1056 (fontified t face font-lock-comment-delimiter-face) 1056 1058 (fontified t face font-lock-comment-face) 1058 1059 (fontified t face font-lock-comment-face) 1059 1060 (fontified t face font-lock-comment-face) 1060 1061 (fontified t face font-lock-comment-face)) . -1509) (undo-tree-id2569 . -89) (undo-tree-id2570 . -515) (undo-tree-id2571 . -89) (undo-tree-id2572 . -89) (undo-tree-id2573 . -776) (undo-tree-id2574 . -776) (undo-tree-id2575 . -651) (undo-tree-id2576 . -651) (undo-tree-id2577 . -1040) (undo-tree-id2578 . -1040) (undo-tree-id2579 . -795) (undo-tree-id2580 . -795) (undo-tree-id2581 . -809) (undo-tree-id2582 . -809) (undo-tree-id2583 . -1051) (undo-tree-id2584 . -1051) (undo-tree-id2585 . -754) (undo-tree-id2586 . -754) (undo-tree-id2587 . -1061) (undo-tree-id2588 . -1061) (undo-tree-id2589 . -722) (undo-tree-id2590 . -722) (undo-tree-id2591 . -541) (undo-tree-id2592 . -541) (undo-tree-id2593 . -842) (undo-tree-id2594 . -842) (undo-tree-id2595 . -597) (undo-tree-id2596 . -597) (undo-tree-id2597 . -529) (undo-tree-id2598 . -529) (undo-tree-id2599 . -540) (undo-tree-id2600 . -540) (undo-tree-id2601 . -322) (undo-tree-id2602 . -314) (undo-tree-id2603 . -481) (undo-tree-id2604 . -481) (undo-tree-id2605 . -696) (undo-tree-id2606 . -696) (undo-tree-id2607 . -1061) (undo-tree-id2608 . -481) (undo-tree-id2609 . -1061) (undo-tree-id2610 . -1061) (undo-tree-id2611 . -929) (undo-tree-id2612 . -929) (undo-tree-id2613 . -978) (undo-tree-id2614 . -978) (undo-tree-id2615 . -1061) 2570) nil (25412 13462 218380 960000) 0 nil])
([nil nil ((#(" 
" 0 1 (rear-nonsticky t fontified t) 1 2 (fontified t)) . 1502) (undo-tree-id2565 . -2) (undo-tree-id2566 . -2) (undo-tree-id2567 . -2) (undo-tree-id2568 . -2)) nil (25412 13462 218304 95000) 0 nil])
([nil nil ((#("    
" 0 2 (fontified t) 2 4 (fontified t) 4 5 (rear-nonsticky t fontified t)) . 1502) (undo-tree-id2554 . -5) (undo-tree-id2555 . -5) (undo-tree-id2556 . -5) (undo-tree-id2557 . -5) (undo-tree-id2558 . -5) (undo-tree-id2559 . -5) (undo-tree-id2560 . -5) (undo-tree-id2561 . -5) (undo-tree-id2562 . -5) (undo-tree-id2563 . -5) (undo-tree-id2564 . -5)) nil (25412 13462 218292 894000) 0 nil])
([nil nil ((1509 . 1511) (#("  " 0 2 (fontified nil)) . 1508) (1508 . 1510) (1508 . 1509)) nil (25412 13462 218252 28000) 0 nil])
([nil nil ((#("    |> IO.inspect()" 0 7 (fontified t) 7 9 (fontified t face font-lock-type-face) 9 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t)) . 513) (undo-tree-id2641 . -19) (t 25412 13462 257597 755000)) nil (25412 13470 987126 696000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 513) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1)) nil (25412 13470 987124 812000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 513) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1)) nil (25412 13470 987120 384000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 513) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1)) nil (25412 13470 987113 231000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 771) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (t 25412 13471 17674 985000)) nil (25412 13514 224096 497000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 771) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1)) nil (25412 13514 224085 606000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1251) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1)) nil (25412 13514 224072 351000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1251) (undo-tree-id2642 . -1) (#(" " 0 1 (fontified t)) . 1251) (#(" " 0 1 (fontified t)) . 1251) (#(" " 0 1 (fontified t)) . 1251)) nil (25412 13514 224054 588000) 0 nil])
([nil nil ((927 . 928) (t 25412 13514 262064 41000)) nil (25412 14015 286399 532000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face elixir-atom-face)) . -1457) (undo-tree-id2658 . -1) 1458 (t 25412 14015 315249 506000)) nil (25412 14128 143470 917000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -927) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) 928 (t 25412 14128 172530 557000)) nil (25412 14161 748698 316000) 0 nil])
([nil nil ((515 . 519) (#("    " 0 4 (fontified t)) . 514) (undo-tree-id2667 . -4) (518 . 519) (#("    " 0 4 (fontified t)) . -518) (#("    " 0 4 (fontified nil)) . 513) (513 . 517) (513 . 514) (t 25412 14161 764916 969000)) nil (25412 15770 847742 346000) 0 nil])
([nil nil ((975 . 979) (#("    " 0 4 (fontified nil)) . 974) (974 . 978) (974 . 975)) nil (25412 15770 847734 791000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face font-lock-string-face)) . -940) (undo-tree-id2662 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -941) (undo-tree-id2663 . -1) (#("d" 0 1 (fontified t face font-lock-string-face)) . -942) (undo-tree-id2664 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -943) (undo-tree-id2665 . -1) (#("x" 0 1 (fontified t face font-lock-string-face)) . -944) (undo-tree-id2666 . -1) 945) nil (25412 15770 847727 808000) 0 nil])
([nil nil ((940 . 949)) nil (25412 15770 847698 143000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face font-lock-string-face)) . -1437) (undo-tree-id2668 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -1438) (undo-tree-id2669 . -1) (#("d" 0 1 (fontified t face font-lock-string-face)) . -1439) (undo-tree-id2670 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -1440) (undo-tree-id2671 . -1) (#("x" 0 1 (fontified t face font-lock-string-face)) . -1441) (undo-tree-id2672 . -1) 1442 (t 25412 15770 917828 553000)) nil (25412 15783 449540 915000) 0 nil])
([nil nil ((1437 . 1446)) nil (25412 15783 449510 778000) 0 nil])
([nil nil ((1377 . 1382) (t 25412 15783 477956 560000)) nil (25412 16117 435460 212000) 0 nil])
([nil nil ((924 . 929)) nil (25412 16117 435459 390000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . 925) (925 . 929) (925 . 926)) nil (25412 16117 435458 489000) 0 nil])
([nil nil ((926 . 930) (#("    " 0 4 (fontified nil)) . 925) (925 . 929) (925 . 926)) nil (25412 16117 435457 266000) 0 nil])
([nil nil ((nil rear-nonsticky nil 985 . 986) (nil fontified nil 985 . 986) (nil fontified nil 984 . 985) (nil fontified nil 973 . 984) (nil fontified nil 972 . 973) (nil fontified nil 971 . 972) (nil fontified nil 958 . 971) (nil fontified nil 957 . 958) (nil fontified nil 956 . 957) (nil fontified nil 955 . 956) (nil fontified nil 954 . 955) (nil fontified nil 952 . 954) (nil fontified nil 951 . 952) (nil fontified nil 941 . 951) (nil fontified nil 940 . 941) (nil fontified nil 937 . 940) (nil fontified nil 936 . 937) (nil fontified nil 935 . 936) (nil fontified nil 933 . 935) (nil fontified nil 932 . 933) (nil fontified nil 930 . 932) (930 . 986)) nil (25412 16117 435455 293000) 0 nil])
([nil nil ((926 . 930) (#("    " 0 4 (fontified nil)) . 925) (925 . 929) (925 . 926)) nil (25412 16117 435451 546000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 925) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) (undo-tree-id2701 . -1) (undo-tree-id2702 . 1) (undo-tree-id2703 . -1)) nil (25412 16117 435450 183000) 0 nil])
([nil nil ((#("    
" 0 4 (fontified t) 4 5 (fontified t)) . 925) (undo-tree-id2693 . -5) (undo-tree-id2694 . -5) (undo-tree-id2695 . -5) (undo-tree-id2696 . 1) (undo-tree-id2697 . 5) (undo-tree-id2698 . -5)) nil (25412 16117 435446 536000) 0 nil])
([nil nil ((#("    |> render(\"show_many.json\", clients_quota: resp_cq_data)" 0 4 (fontified t) 4 6 (fontified t) 6 7 (fontified t) 7 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 14 (fontified t) 14 15 (fontified t syntax-table (15) face font-lock-string-face) 15 25 (fontified t face font-lock-string-face) 25 26 (fontified t face font-lock-string-face) 26 28 (fontified t face font-lock-string-face) 28 29 (fontified t face font-lock-string-face) 29 30 (fontified t syntax-table (15) face font-lock-string-face) 30 31 (fontified t) 31 32 (fontified t) 32 45 (fontified t face elixir-atom-face) 45 46 (fontified t face elixir-atom-face) 46 47 (fontified t) 47 58 (fontified t) 58 59 (rear-nonsticky t fontified t) 59 60 (rear-nonsticky t fontified t)) . 925) (undo-tree-id2689 . -4) (undo-tree-id2690 . 60) (undo-tree-id2691 . 60) (undo-tree-id2692 . -60)) nil (25412 16117 435441 116000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 925) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) (undo-tree-id2683 . -1) (undo-tree-id2684 . 1) (undo-tree-id2685 . -1) (undo-tree-id2686 . 1) (undo-tree-id2687 . 1) (undo-tree-id2688 . -1)) nil (25412 16117 435437 8000) 0 nil])
([nil nil ((#("    
" 0 4 (fontified t) 4 5 (fontified t)) . 925) (undo-tree-id2673 . -5) (undo-tree-id2674 . -5) (undo-tree-id2675 . -5) (undo-tree-id2676 . 5) (undo-tree-id2677 . -4) (undo-tree-id2678 . 5) (undo-tree-id2679 . 5) (undo-tree-id2680 . -5)) nil (25412 16117 435428 593000) 0 nil])
([nil nil ((1487 . 1492) (t 25412 16117 461443 331000)) nil (25412 18710 783270 851000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -1499) (1499 . 1500) (#(")" 0 1 (fontified nil)) . -1499) (1499 . 1500) (1492 . 1500)) nil (25412 18710 783261 804000) 0 nil])
([nil nil ((925 . 926) (t 25412 18710 820061 44000)) nil (25412 18734 785142 888000) 0 nil])
([nil nil ((1489 . 1490)) nil (25412 18734 785135 374000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 513) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) (t 25412 18734 824934 335000)) nil (25412 19343 112069 296000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 513) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1)) nil (25412 19343 112058 907000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -923) (undo-tree-id2704 . -1) 924) nil (25412 19343 112042 105000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -1486) (undo-tree-id2714 . -1) 1487 (t 25412 19343 140887 96000)) nil (25412 19353 950640 406000) 0 nil])
([nil nil ((1486 . 1487) (t 25412 19353 989100 406000)) nil (25412 19784 215154 686000) 0 nil])
([nil nil ((1424 . 1429) (t 25412 19784 240568 246000)) nil (25412 19959 52384 644000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1471 . 1472) (nil fontified nil 1471 . 1472) (nil fontified nil 1466 . 1471) (nil fontified nil 1465 . 1466) (nil fontified nil 1452 . 1465) (nil fontified nil 1445 . 1452) (nil fontified nil 1442 . 1445) (nil fontified nil 1441 . 1442) (nil fontified nil 1440 . 1441) (nil fontified nil 1439 . 1440) (nil fontified nil 1436 . 1439) (nil fontified nil 1435 . 1436) (nil fontified nil 1433 . 1435) (nil fontified nil 1429 . 1433) (1429 . 1472)) nil (25412 19959 52380 266000) 0 nil])
([nil nil ((#("C" 0 1 (fontified t face font-lock-type-face)) . -1455) (undo-tree-id2715 . -1) (#("l" 0 1 (fontified t face font-lock-type-face)) . -1456) (undo-tree-id2716 . -1) (#("i" 0 1 (fontified t face font-lock-type-face)) . -1457) (undo-tree-id2717 . -1) (#("e" 0 1 (fontified t face font-lock-type-face)) . -1458) (undo-tree-id2718 . -1) (#("n" 0 1 (fontified t face font-lock-type-face)) . -1459) (undo-tree-id2719 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -1460) (undo-tree-id2720 . -1) (#("s" 0 1 (fontified t face font-lock-type-face)) . -1461) (undo-tree-id2721 . -1) (#("Q" 0 1 (fontified t face font-lock-type-face)) . -1462) (undo-tree-id2722 . -1) (#("u" 0 1 (fontified t face font-lock-type-face)) . -1463) (undo-tree-id2723 . -1) (#("o" 0 1 (fontified t face font-lock-type-face)) . -1464) (undo-tree-id2724 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -1465) (undo-tree-id2725 . -1) (#("a" 0 1 (fontified t face font-lock-type-face)) . -1466) (undo-tree-id2726 . -1) 1467) nil (25412 19959 52366 39000) 0 nil])
([nil nil ((1455 . 1462)) nil (25412 19959 52320 854000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face font-lock-string-face)) . -1483) (undo-tree-id2727 . -1) (#("h" 0 1 (fontified t face font-lock-string-face)) . -1484) (undo-tree-id2728 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -1485) (undo-tree-id2729 . -1) (#("w" 0 1 (fontified t face font-lock-string-face)) . -1486) (undo-tree-id2730 . -1) 1487 (t 25412 19959 79228 21000)) nil (25412 19972 493192 827000) 0 nil])
([nil nil ((1483 . 1489)) nil (25412 19972 493163 902000) 0 nil])
([nil nil ((1502 . 1504) (t 25412 19972 519426 665000)) nil (25412 20029 991096 992000) 0 nil])
([nil nil ((#("clients_quota: resp_cq_data" 0 13 (fontified t face elixir-atom-face) 13 14 (fontified t face elixir-atom-face) 14 15 (fontified t) 15 19 (fontified t) 19 26 (fontified t) 26 27 (rear-nonsticky t fontified t)) . 1504) (undo-tree-id2731 . -8) (undo-tree-id2732 . -8) (undo-tree-id2733 . -27) (undo-tree-id2734 . -27) (undo-tree-id2735 . -27) 1531) nil (25412 20029 991093 325000) 0 nil])
([nil nil ((nil fontified nil 1529 . 1530) (nil fontified nil 1522 . 1529) (nil fontified nil 1518 . 1522) (nil fontified nil 1517 . 1518) (nil fontified nil 1516 . 1517) (nil fontified nil 1503 . 1516) (1503 . 1530)) nil (25412 20029 991070 332000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1429) (#(" " 0 1 (fontified t)) . 1429) (#(" " 0 1 (fontified t)) . 1429) (#(" " 0 1 (fontified t)) . 1429)) nil (25412 20029 991062 397000) 0 nil])
([nil nil ((1384 . 1385)) nil (25412 20029 991053 821000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -1530) (undo-tree-id2737 . -1) 1531 (t 25412 20030 56269 32000)) nil (25412 20911 915975 432000) 0 nil])
([nil nil ((#("    |> dbg()" 0 4 (fontified t) 4 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t)) . 1530)) nil (25412 20911 915970 52000) 0 nil])
([nil nil ((975 . 980)) nil (25412 20911 915967 738000) 0 nil])
([nil nil ((nil rear-nonsticky nil 991 . 992) (nil fontified nil 991 . 992) (nil fontified nil 990 . 991) (nil fontified nil 984 . 990) (nil fontified nil 980 . 984) (980 . 992)) nil (25412 20911 915964 171000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 976) (undo-tree-id2736 . -1) (#(" " 0 1 (fontified t)) . 976) (#(" " 0 1 (fontified t)) . 976) (#(" " 0 1 (fontified t)) . 976)) nil (25412 20911 915954 283000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t face font-lock-string-face)) . -1493) (undo-tree-id2745 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -1494) (undo-tree-id2746 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -1495) (undo-tree-id2747 . -1) (#("d" 0 1 (fontified t face font-lock-string-face)) . -1496) (undo-tree-id2748 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -1497) (undo-tree-id2749 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -1498) (undo-tree-id2750 . -1) 1499 (t 25412 20911 942132 682000)) nil (25412 20999 378206 265000) 0 nil])
([nil nil ((1493 . 1497)) nil (25412 20999 378072 955000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t face font-lock-type-face)) . -1466) (undo-tree-id2739 . -1) (#("e" 0 1 (fontified t face font-lock-type-face)) . -1467) (undo-tree-id2740 . -1) (#("d" 0 1 (fontified t face font-lock-type-face)) . -1468) (undo-tree-id2741 . -1) (#("i" 0 1 (fontified t face font-lock-type-face)) . -1469) (undo-tree-id2742 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -1470) (undo-tree-id2743 . -1) (#("s" 0 1 (fontified t face font-lock-type-face)) . -1471) (undo-tree-id2744 . -1) 1472) nil (25412 20999 378068 707000) 0 nil])
([nil nil ((1466 . 1473)) nil (25412 20999 378027 470000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t face font-lock-type-face)) . -1472) (undo-tree-id2738 . -1) 1473) nil (25412 20999 378023 132000) 0 nil])
([nil nil ((1472 . 1477)) nil (25412 20999 378001 822000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -1515) (undo-tree-id2757 . -1) (undo-tree-id2758 . -1) 1516 (t 25412 20999 402753 773000)) nil (25412 21003 987604 112000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t)) . -1542) (undo-tree-id2751 . -1) (undo-tree-id2752 . -1) (undo-tree-id2753 . -1) (undo-tree-id2754 . -1) (undo-tree-id2755 . 1) (undo-tree-id2756 . -1) 1543) nil (25412 21003 987591 879000) 0 nil])
([nil nil ((1397 . 1398) (t 25412 21004 22788 255000)) nil (25412 21111 602588 148000) 0 nil])
([nil nil ((#("# |> put_view(CabbotWeb.ClientsQuotaView)" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 4 (fontified t face font-lock-comment-face) 4 5 (fontified t face font-lock-comment-face) 5 8 (fontified t face font-lock-comment-face) 8 9 (fontified t face font-lock-comment-face) 9 10 (fontified t face font-lock-comment-face) 10 11 (fontified t face font-lock-comment-face) 11 14 (fontified t face font-lock-comment-face) 14 21 (fontified t face font-lock-comment-face) 21 34 (fontified t face font-lock-comment-face) 34 35 (fontified t face font-lock-comment-face) 35 40 (fontified t face font-lock-comment-face) 40 41 (fontified t face font-lock-comment-face)) . 1398)) nil (25412 21111 602585 453000) 0 nil])
([nil nil ((402 . 404) (#("  " 0 2 (fontified nil)) . 401) (401 . 403) (401 . 402)) nil (25412 21111 602583 229000) 0 nil])
([nil nil ((403 . 405) (#("  " 0 2 (fontified t)) . 402) (undo-tree-id2762 . -2) (402 . 405) (#("  " 0 2 (fontified nil)) . 401) (401 . 403) (401 . 402)) nil (25412 21111 602579 61000) 0 nil])
([nil nil ((405 . 413)) nil (25412 21111 602573 611000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t face font-lock-function-name-face)) . -411) (undo-tree-id2760 . -1) (#("m" 0 1 (fontified t face font-lock-function-name-face)) . -412) (undo-tree-id2761 . -1) 413) nil (25412 21111 602570 485000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -424) (424 . 425) (#(")" 0 1 (fontified nil)) . -424) (424 . 425) (411 . 425)) nil (25412 21111 602560 947000) 0 nil])
([nil nil ((424 . 428)) nil (25412 21111 602557 341000) 0 nil])
([nil nil ((429 . 431)) nil (25412 21111 602555 637000) 0 nil])
([nil nil ((431 . 436)) nil (25412 21111 602553 794000) 0 nil])
([nil nil ((436 . 446)) nil (25412 21111 602552 91000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -444) (undo-tree-id2759 . -1) 445) nil (25412 21111 602549 556000) 0 nil])
([nil nil ((444 . 445)) nil (25412 21111 602532 755000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -447) (447 . 448) (#(")" 0 1 (fontified nil)) . -447) (447 . 448) (446 . 448)) nil (25412 21111 602529 88000) 0 nil])
([nil nil ((447 . 451)) nil (25412 21111 602525 401000) 0 nil])
([nil nil ((452 . 457)) nil (25412 21111 602523 357000) 0 nil])
([nil nil ((457 . 460)) nil (25412 21111 602520 492000) 0 nil])
([nil nil ((436 . 437)) nil (25412 21111 602513 98000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1456) (undo-tree-id2770 . -1) (undo-tree-id2771 . -1) (t 25412 21111 639633 296000)) nil (25412 21144 338112 414000) 0 nil])
([nil nil ((#("    
" 0 4 (fontified t) 4 5 (fontified t)) . 1456) (undo-tree-id2767 . -5) (undo-tree-id2768 . -5) (undo-tree-id2769 . -5)) nil (25412 21144 338106 273000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1456) (undo-tree-id2766 . -1) (#(" " 0 1 (fontified t)) . 1456) (#(" " 0 1 (fontified t)) . 1456) (#(" " 0 1 (fontified t)) . 1456)) nil (25412 21144 338098 398000) 0 nil])
([nil nil ((1334 . 1338) (#("    " 0 4 (fontified t)) . 1333) (undo-tree-id2764 . -4) (1333 . 1338) (#("    " 0 4 (fontified t)) . 1332) (undo-tree-id2765 . -4) (1331 . 1337)) nil (25412 21144 338092 357000) 0 nil])
([nil nil ((1334 . 1338) (#("    " 0 4 (fontified nil)) . 1333) (1333 . 1337) (1333 . 1334)) nil (25412 21144 338083 640000) 0 nil])
([nil nil ((1338 . 1345)) nil (25412 21144 338080 54000) 0 nil])
([nil nil ((1353 . 1366) (1345 . 1354)) nil (25412 21144 338077 68000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -1365) (undo-tree-id2763 . -1) 1366) nil (25412 21144 338068 913000) 0 nil])
([nil nil ((1898 . 1902) (#("    " 0 4 (fontified t)) . 1897) (undo-tree-id2775 . -4) (1897 . 1902) (#("    " 0 4 (fontified t)) . 1896) (undo-tree-id2776 . -4) (1895 . 1901) (t 25412 21144 407905 82000)) nil (25412 22267 472243 372000) 0 nil])
([nil nil ((831 . 835) (#("    " 0 4 (fontified t)) . 830) (undo-tree-id2773 . -4) (undo-tree-id2774 . -4) (829 . 835)) nil (25412 22267 472235 417000) 0 nil])
([nil nil ((831 . 835) (#("    " 0 4 (fontified nil)) . 830) (830 . 834) (830 . 831)) nil (25412 22267 472227 863000) 0 nil])
([nil nil ((nil rear-nonsticky nil 862 . 863) (nil fontified nil 849 . 863) (nil fontified nil 835 . 849) (835 . 863)) nil (25412 22267 472223 404000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -855) (undo-tree-id2772 . -1) 856) nil (25412 22267 472214 568000) 0 nil])
([nil nil ((1391 . 1406) (t 25412 22267 499246 135000)) nil (25412 22371 191567 504000) 0 nil])
([nil nil ((#("    remote_printer(resp_q_data)" 0 4 (fontified t) 4 18 (fontified t) 18 30 (fontified t) 30 31 (fontified t rear-nonsticky t)) . 831) (undo-tree-id2777 . -4) (undo-tree-id2778 . -31) (t 25412 22371 220384 79000)) nil (25412 22379 428865 924000) 0 nil])
([nil nil ((#("I" 0 1 (fontified t face font-lock-type-face)) . -437) (undo-tree-id2792 . -1) (#("O" 0 1 (fontified t face font-lock-type-face)) . -438) (undo-tree-id2793 . -1) (#("." 0 1 (fontified t)) . -439) (undo-tree-id2794 . -1) (#("i" 0 1 (fontified t)) . -440) (undo-tree-id2795 . -1) (#("n" 0 1 (fontified t)) . -441) (undo-tree-id2796 . -1) (#("s" 0 1 (fontified t)) . -442) (undo-tree-id2797 . -1) (#("p" 0 1 (fontified t)) . -443) (undo-tree-id2798 . -1) (#("e" 0 1 (fontified t)) . -444) (undo-tree-id2799 . -1) (#("c" 0 1 (fontified t)) . -445) (undo-tree-id2800 . -1) (#("t" 0 1 (fontified t)) . -446) (undo-tree-id2801 . -1) (#("(" 0 1 (fontified t)) . -447) (undo-tree-id2802 . -1) (#("d" 0 1 (fontified t)) . -448) (undo-tree-id2803 . -1) (#("a" 0 1 (fontified t)) . -449) (undo-tree-id2804 . -1) (#("t" 0 1 (fontified t)) . -450) (undo-tree-id2805 . -1) (#("a" 0 1 (fontified t)) . -451) (undo-tree-id2806 . -1) (#(")" 0 1 (fontified t)) . -452) (undo-tree-id2807 . -1) (undo-tree-id2808 . 1) (undo-tree-id2809 . -1) 453 (t 25412 22379 456474 689000)) nil (25412 22468 819260 704000) 0 nil])
([nil nil ((nil rear-nonsticky nil 521 . 522) (nil fontified nil 521 . 522) (nil fontified nil 520 . 521) (nil fontified nil 510 . 520) (nil fontified nil 509 . 510) (nil fontified nil 508 . 509) (nil fontified nil 503 . 508) (nil fontified nil 502 . 503) (nil fontified nil 501 . 502) (nil fontified nil 500 . 501) (nil fontified nil 499 . 500) (nil fontified nil 498 . 499) (nil fontified nil 496 . 498) (nil fontified nil 495 . 496) (nil fontified nil 485 . 495) (nil fontified nil 484 . 485) (nil fontified nil 481 . 484) (nil fontified nil 480 . 481) (nil fontified nil 479 . 480) (nil fontified nil 477 . 479) (nil fontified nil 476 . 477) (nil fontified nil 474 . 476) (nil fontified nil 470 . 474) (nil fontified nil 469 . 470) (nil fontified nil 468 . 469) (nil fontified nil 462 . 468) (nil fontified nil 456 . 462) (nil fontified nil 449 . 456) (nil fontified nil 446 . 449) (nil fontified nil 445 . 446) (nil fontified nil 444 . 445) (nil fontified nil 443 . 444) (nil fontified nil 440 . 443) (nil fontified nil 439 . 440) (nil fontified nil 438 . 439) (nil fontified nil 437 . 438) (437 . 522)) nil (25412 22468 819218 905000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -510) (undo-tree-id2785 . -1) (#("e" 0 1 (fontified t)) . -511) (undo-tree-id2786 . -1) (#("s" 0 1 (fontified t)) . -512) (undo-tree-id2787 . -1) (#("p" 0 1 (fontified t)) . -513) (undo-tree-id2788 . -1) (#("_" 0 1 (fontified t)) . -514) (undo-tree-id2789 . -1) (#("q" 0 1 (fontified t)) . -515) (undo-tree-id2790 . -1) (#("_" 0 1 (fontified t)) . -516) (undo-tree-id2791 . -1) 517) nil (25412 22468 819199 849000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face elixir-atom-face)) . -507) (undo-tree-id2784 . -1) 508) nil (25412 22468 819183 308000) 0 nil])
([nil nil ((#("q" 0 1 (fontified t face elixir-atom-face)) . -502) (undo-tree-id2779 . -1) (#("u" 0 1 (fontified t face elixir-atom-face)) . -503) (undo-tree-id2780 . -1) (#("o" 0 1 (fontified t face elixir-atom-face)) . -504) (undo-tree-id2781 . -1) (#("t" 0 1 (fontified t face elixir-atom-face)) . -505) (undo-tree-id2782 . -1) (#("a" 0 1 (fontified t face elixir-atom-face)) . -506) (undo-tree-id2783 . -1) 507) nil (25412 22468 819175 213000) 0 nil])
([nil nil ((502 . 509)) nil (25412 22468 819142 962000) 0 nil])
([nil nil ((474 . 475) (t 25412 22468 861460 408000)) nil (25412 22479 71577 601000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t face font-lock-type-face)) . -461) (undo-tree-id2812 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -462) (undo-tree-id2813 . -1) (#("a" 0 1 (fontified t face font-lock-type-face)) . -463) (undo-tree-id2814 . -1) 464) nil (25412 22479 71573 323000) 0 nil])
([nil nil ((#("Q" 0 1 (fontified t face font-lock-type-face)) . -459) (undo-tree-id2810 . -1) (#("u" 0 1 (fontified t face font-lock-type-face)) . -460) (undo-tree-id2811 . -1) 461) nil (25412 22479 71562 41000) 0 nil])
([nil nil ((459 . 466)) nil (25412 22479 71538 287000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 896) (undo-tree-id2815 . -1) (undo-tree-id2816 . -1) (undo-tree-id2817 . -1) (undo-tree-id2818 . -1) (undo-tree-id2819 . -1) (t 25412 22479 109573 618000)) nil (25412 22766 771087 761000) 0 nil])
([nil nil ((428 . 433) (t 25412 22766 810291 696000)) nil (25412 23581 918336 381000) 0 nil])
([nil nil ((#("V" 0 1 (fontified t face font-lock-type-face)) . -429) (undo-tree-id2864 . -1) 430) nil (25412 23581 918333 596000) 0 nil])
([nil nil ((429 . 430)) nil (25412 23581 918329 899000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -429) (undo-tree-id2863 . -1) 430) nil (25412 23581 918327 705000) 0 nil])
([nil nil ((429 . 430)) nil (25412 23581 918324 98000) 0 nil])
([nil nil ((#("C" 0 1 (fontified t face font-lock-type-face)) . -454) (undo-tree-id2842 . -1) (#("a" 0 1 (fontified t face font-lock-type-face)) . -455) (undo-tree-id2843 . -1) (#("b" 0 1 (fontified t face font-lock-type-face)) . -456) (undo-tree-id2844 . -1) (#("b" 0 1 (fontified t face font-lock-type-face)) . -457) (undo-tree-id2845 . -1) (#("o" 0 1 (fontified t face font-lock-type-face)) . -458) (undo-tree-id2846 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -459) (undo-tree-id2847 . -1) (#("W" 0 1 (fontified t face font-lock-type-face)) . -460) (undo-tree-id2848 . -1) (#("e" 0 1 (fontified t face font-lock-type-face)) . -461) (undo-tree-id2849 . -1) (#("b" 0 1 (fontified t face font-lock-type-face)) . -462) (undo-tree-id2850 . -1) (#("." 0 1 (fontified t)) . -463) (undo-tree-id2851 . -1) (#("C" 0 1 (fontified t face font-lock-type-face)) . -464) (undo-tree-id2852 . -1) (#("r" 0 1 (fontified t face font-lock-type-face)) . -465) (undo-tree-id2853 . -1) (#("e" 0 1 (fontified t face font-lock-type-face)) . -466) (undo-tree-id2854 . -1) (#("d" 0 1 (fontified t face font-lock-type-face)) . -467) (undo-tree-id2855 . -1) (#("i" 0 1 (fontified t face font-lock-type-face)) . -468) (undo-tree-id2856 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -469) (undo-tree-id2857 . -1) (#("s" 0 1 (fontified t face font-lock-type-face)) . -470) (undo-tree-id2858 . -1) (#("V" 0 1 (fontified t face font-lock-type-face)) . -471) (undo-tree-id2859 . -1) (#("i" 0 1 (fontified t face font-lock-type-face)) . -472) (undo-tree-id2860 . -1) (#("e" 0 1 (fontified t face font-lock-type-face)) . -473) (undo-tree-id2861 . -1) (#("w" 0 1 (fontified t face font-lock-type-face)) . -474) (undo-tree-id2862 . -1) 475) nil (25412 23581 918314 169000) 0 nil])
([nil nil ((#("(" 0 1 (fontified nil)) . -453) (undo-tree-id2841 . -1) (#(")" 0 1 (fontified t)) . 454)) nil (25412 23581 918268 624000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -454) (454 . 455) (#(")" 0 1 (fontified nil)) . -454) (454 . 455) (453 . 455)) nil (25412 23581 918264 56000) 0 nil])
([nil nil ((454 . 458)) nil (25412 23581 918260 479000) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -442) (undo-tree-id2838 . -1) (#(">" 0 1 (fontified t)) . -443) (undo-tree-id2839 . -1) (#(" " 0 1 (fontified t)) . -444) (undo-tree-id2840 . -1) 445) nil (25412 23581 918257 493000) 0 nil])
([nil nil ((455 . 460)) nil (25412 23581 918247 274000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -455) (undo-tree-id2833 . -1) (#("d" 0 1 (fontified t)) . -456) (undo-tree-id2834 . -1) (#("a" 0 1 (fontified t)) . -457) (undo-tree-id2835 . -1) (#("t" 0 1 (fontified t)) . -458) (undo-tree-id2836 . -1) (#("a" 0 1 (fontified t)) . -459) (undo-tree-id2837 . -1) 460) nil (25412 23581 918241 694000) 0 nil])
([nil nil ((424 . 428)) nil (25412 23581 918066 236000) 0 nil])
([nil nil ((428 . 429)) nil (25412 23581 918063 891000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -425) (undo-tree-id2830 . -1) (#("n" 0 1 (fontified t)) . -426) (undo-tree-id2831 . -1) (#("n" 0 1 (fontified t)) . -427) (undo-tree-id2832 . -1) 428) nil (25412 23581 918059 994000) 0 nil])
([nil nil ((425 . 427)) nil (25412 23581 918049 705000) 0 nil])
([nil nil ((446 . 448)) nil (25412 23581 918047 481000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . 441) (undo-tree-id2826 . -4) (undo-tree-id2827 . -4) (#(" " 0 1 (fontified t)) . -445) (undo-tree-id2828 . -1) (undo-tree-id2829 . -1) (446 . 447)) nil (25412 23581 918031 70000) 0 nil])
([nil nil ((442 . 447)) nil (25412 23581 918022 304000) 0 nil])
([nil nil ((441 . 442)) nil (25412 23581 918020 570000) 0 nil])
([nil nil ((442 . 449)) nil (25412 23581 918018 917000) 0 nil])
([nil nil ((897 . 901)) nil (25412 23581 918017 194000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 897) (undo-tree-id2825 . -4) (901 . 902)) nil (25412 23581 918014 890000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -917) (917 . 918) (#(")" 0 1 (fontified nil)) . -917) (917 . 918) (902 . 918)) nil (25412 23581 918009 981000) 0 nil])
([nil nil ((917 . 925)) nil (25412 23581 918006 504000) 0 nil])
([nil nil ((925 . 927)) nil (25412 23581 918004 631000) 0 nil])
([nil nil ((927 . 930)) nil (25412 23581 918002 827000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -927) (undo-tree-id2822 . -1) (#("d" 0 1 (fontified t)) . -928) (undo-tree-id2823 . -1) (#("a" 0 1 (fontified t)) . -929) (undo-tree-id2824 . -1) 930) nil (25412 23581 917999 461000) 0 nil])
([nil nil ((927 . 933)) nil (25412 23581 917987 829000) 0 nil])
([nil nil ((933 . 934)) nil (25412 23581 917985 795000) 0 nil])
([nil nil ((nil rear-nonsticky nil 952 . 953) (nil fontified nil 947 . 953) (nil fontified nil 941 . 947) (nil fontified nil 934 . 941) (934 . 953)) nil (25412 23581 917982 209000) 0 nil])
([nil nil ((956 . 960) (#("    " 0 4 (fontified t)) . 955) (undo-tree-id2820 . -4) (undo-tree-id2821 . -4) (954 . 960)) nil (25412 23581 917972 921000) 0 nil])
([nil nil ((1484 . 1489) (t 25412 23581 949394 10000)) nil (25412 23649 581897 246000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1492 . 1493) (nil fontified nil 1489 . 1493) (1489 . 1493)) nil (25412 23649 581894 591000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -1489) (undo-tree-id2865 . -1) (#("o" 0 1 (fontified t)) . -1490) (undo-tree-id2866 . -1) (#("n" 0 1 (fontified t)) . -1491) (undo-tree-id2867 . -1) (#("n" 0 1 (fontified t rear-nonsticky t)) . -1492) (undo-tree-id2868 . -1) 1493) nil (25412 23649 581888 680000) 0 nil])
([nil nil ((1516 . 1517)) nil (25412 23649 581862 491000) 0 nil])
([nil nil ((nil fontified nil 1535 . 1536) (nil fontified nil 1530 . 1535) (nil fontified nil 1524 . 1530) (nil fontified nil 1517 . 1524) (1517 . 1536)) nil (25412 23649 581854 736000) 0 nil])
([nil nil ((#("    remote_printer(conn,resp_q_data,CabbotWeb.QuotaView)" 0 18 (fontified t) 18 36 (fontified t) 36 43 (fontified t face font-lock-type-face) 43 49 (fontified t face font-lock-type-face) 49 54 (fontified t face font-lock-type-face) 54 55 (fontified t rear-nonsticky t face font-lock-type-face) 55 56 (fontified t)) . 898) (undo-tree-id2888 . -36) (undo-tree-id2889 . -19) (undo-tree-id2890 . -36) (undo-tree-id2891 . -56) (t 25412 23649 621548 642000)) nil (25412 23659 817792 625000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 898) (undo-tree-id2884 . -1) (undo-tree-id2885 . -1) (undo-tree-id2886 . -1) (undo-tree-id2887 . -1)) nil (25412 23659 817788 908000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 898) (undo-tree-id2880 . -1) (undo-tree-id2881 . -1) (undo-tree-id2882 . -1) (undo-tree-id2883 . -1)) nil (25412 23659 817783 779000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 896) (undo-tree-id2876 . -1) (undo-tree-id2877 . -1) (undo-tree-id2878 . -1) (undo-tree-id2879 . -1)) nil (25412 23659 817780 412000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 896) (undo-tree-id2869 . -1) (undo-tree-id2870 . -1) (undo-tree-id2871 . -1) (undo-tree-id2872 . -1) (undo-tree-id2873 . -1) (undo-tree-id2874 . -1) (undo-tree-id2875 . -1)) nil (25412 23659 817776 64000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . 1478) (1478 . 1482) (1478 . 1479)) nil (25412 23659 817757 349000) 0 nil])
([nil nil ((#("Q" 0 1 (fontified t face font-lock-type-face)) . -1467) (undo-tree-id2892 . -1) (#("u" 0 1 (fontified t face font-lock-type-face)) . -1468) (undo-tree-id2893 . -1) (#("o" 0 1 (fontified t face font-lock-type-face)) . -1469) (undo-tree-id2894 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -1470) (undo-tree-id2895 . -1) (#("a" 0 1 (fontified t face font-lock-type-face)) . -1471) (undo-tree-id2896 . -1) 1472 (t 25412 23659 881575 948000)) nil (25412 23687 276576 104000) 0 nil])
([nil nil ((1467 . 1474)) nil (25412 23687 276544 205000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1403) (undo-tree-id2901 . -1) (undo-tree-id2902 . -1) (undo-tree-id2903 . -1) (undo-tree-id2904 . -1) (t 25412 23687 305653 629000)) nil (25412 24134 247974 943000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1403) (undo-tree-id2897 . -1) (undo-tree-id2898 . -1) (undo-tree-id2899 . -1) (undo-tree-id2900 . -1)) nil (25412 24134 247964 273000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . 1403) (1403 . 1407) (1403 . 1404)) nil (25412 24134 247937 62000) 0 nil])
([nil nil ((#("    |> dbg()" 0 4 (fontified t) 4 10 (fontified t) 10 11 (fontified t) 11 12 (rear-nonsticky t fontified t)) . 1110) (t 25412 24134 283633 378000)) nil (25412 24141 29995 395000) 0 nil])
([nil nil ((1708 . 1710) (#("  " 0 2 (fontified t)) . 1707) (undo-tree-id2909 . -2) (1709 . 1710) (#("  " 0 2 (fontified nil)) . 1706) (1706 . 1708) (1706 . 1707) (t 25412 24141 67671 2000)) nil (25412 24711 448086 123000) 0 nil])
([nil nil ((1707 . 1709) (#("  " 0 2 (fontified nil)) . 1706) (1706 . 1708) (1706 . 1707)) nil (25412 24711 448079 520000) 0 nil])
([nil nil ((1709 . 1730)) nil (25412 24711 448076 174000) 0 nil])
([nil nil ((1730 . 1732)) nil (25412 24711 448074 431000) 0 nil])
([nil nil ((1732 . 1737)) nil (25412 24711 448072 708000) 0 nil])
([nil nil ((1737 . 1738)) nil (25412 24711 448071 4000) 0 nil])
([nil nil ((1738 . 1739)) nil (25412 24711 448069 81000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -1738) (undo-tree-id2908 . -1) 1739) nil (25412 24711 448066 746000) 0 nil])
([nil nil ((1738 . 1740)) nil (25412 24711 448062 629000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -1738) (undo-tree-id2906 . -1) (#("d" 0 1 (fontified t)) . -1739) (undo-tree-id2907 . -1) 1740) nil (25412 24711 448059 222000) 0 nil])
([nil nil ((1738 . 1740)) nil (25412 24711 448048 111000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -1709) (undo-tree-id2905 . -1) 1710) nil (25412 24711 448041 229000) 0 nil])
([nil nil ((#("def remote_printer(cnx,data,view)do
     cnx
     |>put_view(view)
     |> render(\"show_many.json\", credits: data)
    end
  " 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 18 (fontified t face font-lock-function-name-face) 18 29 (fontified t) 29 32 (fontified t) 32 33 (fontified t) 33 35 (fontified t face font-lock-keyword-face) 35 36 (fontified t) 36 44 (fontified t) 44 45 (fontified t) 45 50 (fontified t) 50 52 (fontified t) 52 55 (fontified t) 55 56 (fontified t) 56 57 (fontified t) 57 58 (fontified t) 58 60 (fontified t) 60 65 (fontified t) 65 66 (fontified t) 66 67 (fontified t) 67 72 (fontified t) 72 74 (fontified t) 74 75 (fontified t) 75 77 (fontified t) 77 78 (fontified t) 78 79 (fontified t) 79 82 (fontified t) 82 83 (syntax-table (15) fontified t face font-lock-string-face) 83 93 (fontified t face font-lock-string-face) 93 94 (fontified t face font-lock-string-face) 94 96 (fontified t face font-lock-string-face) 96 97 (fontified t face font-lock-string-face) 97 98 (syntax-table (15) fontified t face font-lock-string-face) 98 99 (fontified t) 99 100 (fontified t) 100 107 (fontified t face elixir-atom-face) 107 108 (fontified t face elixir-atom-face) 108 109 (fontified t) 109 112 (fontified t) 112 113 (rear-nonsticky t fontified t) 113 114 (rear-nonsticky t fontified t) 114 115 (fontified t) 115 119 (fontified t) 119 122 (fontified t face font-lock-keyword-face) 122 123 (fontified t) 123 125 (fontified t)) . 405) (undo-tree-id2921 . -101) (undo-tree-id2922 . -115) (undo-tree-id2923 . -115) (undo-tree-id2924 . -67) (undo-tree-id2925 . -67) (undo-tree-id2926 . -123) (undo-tree-id2927 . -123) (undo-tree-id2928 . -101) (undo-tree-id2929 . -125) (undo-tree-id2930 . -123) (undo-tree-id2931 . -36) (undo-tree-id2932 . -125) 530 (t 25412 24711 519255 45000)) nil (25412 25842 472638 879000) 0 nil])
([nil nil ((1582 . 1584) (#("  " 0 2 (fontified nil)) . 1581) (1581 . 1583) (1581 . 1582)) nil (25412 25842 472614 12000) 0 nil])
([nil nil ((1582 . 1584) (#("  " 0 2 (fontified nil)) . 1581) (1581 . 1583) (1581 . 1582)) nil (25412 25842 472610 395000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1708 . 1709) (nil fontified nil 1707 . 1709) (nil fontified nil 1706 . 1707) (nil fontified nil 1703 . 1706) (nil fontified nil 1699 . 1703) (nil fontified nil 1698 . 1699) (nil fontified nil 1697 . 1698) (nil fontified nil 1696 . 1697) (nil fontified nil 1693 . 1696) (nil fontified nil 1692 . 1693) (nil fontified nil 1691 . 1692) (nil fontified nil 1684 . 1691) (nil fontified nil 1683 . 1684) (nil fontified nil 1682 . 1683) (nil fontified nil 1681 . 1682) (nil fontified nil 1680 . 1681) (nil fontified nil 1678 . 1680) (nil fontified nil 1677 . 1678) (nil fontified nil 1667 . 1677) (nil fontified nil 1666 . 1667) (nil fontified nil 1663 . 1666) (nil fontified nil 1662 . 1663) (nil fontified nil 1661 . 1662) (nil fontified nil 1659 . 1661) (nil fontified nil 1658 . 1659) (nil fontified nil 1656 . 1658) (nil fontified nil 1651 . 1656) (nil fontified nil 1650 . 1651) (nil fontified nil 1649 . 1650) (nil fontified nil 1644 . 1649) (nil fontified nil 1642 . 1644) (nil fontified nil 1641 . 1642) (nil fontified nil 1640 . 1641) (nil fontified nil 1639 . 1640) (nil fontified nil 1636 . 1639) (nil fontified nil 1634 . 1636) (nil fontified nil 1629 . 1634) (nil fontified nil 1628 . 1629) (nil fontified nil 1620 . 1628) (nil fontified nil 1619 . 1620) (nil fontified nil 1617 . 1619) (nil fontified nil 1616 . 1617) (nil fontified nil 1613 . 1616) (nil fontified nil 1602 . 1613) (nil fontified nil 1588 . 1602) (nil fontified nil 1587 . 1588) (nil fontified nil 1584 . 1587) (1584 . 1709)) nil (25412 25842 472601 549000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t face font-lock-function-name-face)) . 1588) (#("e" 0 1 (fontified t face font-lock-function-name-face)) . 1588) (#("t" 0 1 (fontified t face font-lock-function-name-face)) . 1588) (#("n" 0 1 (fontified t face font-lock-function-name-face)) . 1588) (#("i" 0 1 (fontified t face font-lock-function-name-face)) . 1588) (#("r" 0 1 (fontified t face font-lock-function-name-face)) . 1588) (#("p" 0 1 (fontified t face font-lock-function-name-face)) . 1588) (#("_" 0 1 (fontified t face font-lock-function-name-face)) . 1588) (#("e" 0 1 (fontified t face font-lock-function-name-face)) . 1588) (#("t" 0 1 (fontified t face font-lock-function-name-face)) . 1588) (#("o" 0 1 (fontified t face font-lock-function-name-face)) . 1588) (#("m" 0 1 (fontified t face font-lock-function-name-face)) . 1588) (#("e" 0 1 (fontified t face font-lock-function-name-face)) . 1588) (#("r" 0 1 (fontified t face font-lock-function-name-face)) . 1588)) nil (25412 25842 472575 740000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1601 . 1602) (nil fontified nil 1588 . 1602) (1588 . 1602)) nil (25412 25842 472566 994000) 0 nil])
([nil nil ((#("
  def parse_response()do
    end
" 0 1 (fontified t) 1 3 (fontified t) 3 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 21 (fontified t face font-lock-function-name-face) 21 23 (fontified t) 23 25 (fontified t face font-lock-keyword-face) 25 26 (fontified t) 26 30 (fontified t) 30 33 (fontified t face font-lock-keyword-face) 33 34 (fontified t)) . -1712) (undo-tree-id2910 . -1) (undo-tree-id2911 . -1) (undo-tree-id2912 . -34) (undo-tree-id2913 . -34) (undo-tree-id2914 . -26) (undo-tree-id2915 . -26) (undo-tree-id2916 . -34) (undo-tree-id2917 . -34) (undo-tree-id2918 . -7) (undo-tree-id2919 . -34) (undo-tree-id2920 . -34) 1746) nil (25412 25842 472557 647000) 0 nil])
([nil nil ((776 . 777) (t 25412 25842 500107 616000)) nil (25412 25898 333572 828000) 0 nil])
([nil nil ((786 . 787)) nil (25412 25898 333570 363000) 0 nil])
([nil nil ((815 . 816)) nil (25412 25898 333568 740000) 0 nil])
([nil nil ((898 . 899)) nil (25412 25898 333566 917000) 0 nil])
([nil nil ((936 . 937)) nil (25412 25898 333564 662000) 0 nil])
([nil nil ((1353 . 1354)) nil (25412 25898 333562 949000) 0 nil])
([nil nil ((1363 . 1364)) nil (25412 25898 333561 316000) 0 nil])
([nil nil ((1392 . 1393)) nil (25412 25898 333559 312000) 0 nil])
([nil nil ((1476 . 1477)) nil (25412 25898 333557 98000) 0 nil])
([nil nil ((1521 . 1522)) nil (25412 25898 333555 275000) 0 nil])
([nil nil ((#("remote_printer(conn,resp_q_data ++ resp_cq_data,CabbotWeb.CreditsView)
" 0 14 (fontified t) 14 20 (fontified t) 20 48 (fontified t) 48 55 (fontified t face font-lock-type-face) 55 65 (fontified t face font-lock-type-face) 65 68 (fontified t face font-lock-type-face) 68 69 (rear-nonsticky t fontified t face font-lock-type-face) 69 70 (fontified t) 70 71 (fontified t)) . 1276) (undo-tree-id2948 . -71) (undo-tree-id2949 . -71) (undo-tree-id2950 . -20) (undo-tree-id2951 . -71) (undo-tree-id2952 . -71) (undo-tree-id2953 . -48) (undo-tree-id2954 . -71) 1347) nil (25412 25898 333552 239000) 0 nil])
([nil nil ((1513 . 1517) (#("    " 0 4 (fontified nil face font-lock-comment-face)) . 1512) (1512 . 1516) (1512 . 1513)) nil (25412 25898 333535 418000) 0 nil])
([nil nil ((1513 . 1517) (#("    " 0 4 (fontified nil face font-lock-comment-face)) . 1512) (1512 . 1516) (1512 . 1513)) nil (25412 25898 333531 781000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1587 . 1588) (nil fontified nil 1587 . 1588) (nil fontified nil 1586 . 1587) (nil fontified nil 1585 . 1586) (nil fontified nil 1582 . 1585) (nil fontified nil 1572 . 1582) (nil fontified nil 1565 . 1572) (nil fontified nil 1537 . 1565) (nil fontified nil 1531 . 1537) (nil fontified nil 1517 . 1531) (1517 . 1588)) nil (25412 25898 333527 152000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -1517) (undo-tree-id2934 . -1) (#("e" 0 1 (fontified t)) . -1518) (undo-tree-id2935 . -1) (#("m" 0 1 (fontified t)) . -1519) (undo-tree-id2936 . -1) (#("o" 0 1 (fontified t)) . -1520) (undo-tree-id2937 . -1) (#("t" 0 1 (fontified t)) . -1521) (undo-tree-id2938 . -1) (#("e" 0 1 (fontified t)) . -1522) (undo-tree-id2939 . -1) (#("_" 0 1 (fontified t)) . -1523) (undo-tree-id2940 . -1) (#("p" 0 1 (fontified t)) . -1524) (undo-tree-id2941 . -1) (#("r" 0 1 (fontified t)) . -1525) (undo-tree-id2942 . -1) (#("i" 0 1 (fontified t)) . -1526) (undo-tree-id2943 . -1) (#("n" 0 1 (fontified t)) . -1527) (undo-tree-id2944 . -1) (#("t" 0 1 (fontified t)) . -1528) (undo-tree-id2945 . -1) (#("e" 0 1 (fontified t)) . -1529) (undo-tree-id2946 . -1) (#("r" 0 1 (fontified t)) . -1530) (undo-tree-id2947 . -1) 1531) nil (25412 25898 333515 120000) 0 nil])
([nil nil ((1517 . 1531)) nil (25412 25898 333485 845000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1528) (undo-tree-id2933 . -1) 1529) nil (25412 25898 333481 456000) 0 nil])
([nil nil ((1529 . 1530)) nil (25412 25898 333459 255000) 0 nil])
([nil nil ((#("  def index(conn, _params) do
    quota = Creditos.list_quota()
    render(conn, \"index.json\", quota: quota)
  end

" 0 2 (fontified t) 2 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 11 (fontified t face font-lock-function-name-face) 11 18 (fontified t) 18 25 (fontified t face font-lock-comment-face) 25 27 (fontified t) 27 29 (fontified t face font-lock-keyword-face) 29 34 (fontified t) 34 39 (fontified t face font-lock-variable-name-face) 39 42 (fontified t) 42 50 (fontified t face font-lock-type-face) 50 64 (fontified t) 64 81 (fontified t) 81 82 (syntax-table (15) fontified t face font-lock-string-face) 82 92 (fontified t face font-lock-string-face) 92 93 (syntax-table (15) fontified t face font-lock-string-face) 93 95 (fontified t) 95 101 (fontified t face elixir-atom-face) 101 111 (fontified t) 111 114 (fontified t face font-lock-keyword-face) 114 115 (fontified t) 115 116 (fontified t)) . -286) (undo-tree-id2962 . -116) (undo-tree-id2963 . -116) (undo-tree-id2964 . -64) (undo-tree-id2965 . -64) (undo-tree-id2966 . -30) (undo-tree-id2967 . -30) (undo-tree-id2968 . -116) (undo-tree-id2969 . -116) (undo-tree-id2970 . -109) (undo-tree-id2971 . -109) (undo-tree-id2972 . -115) (undo-tree-id2973 . -115) (undo-tree-id2974 . -116) 402 (t 25412 25898 400443 17000)) nil (25412 33156 938590 919000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 286) (undo-tree-id2955 . -1) (undo-tree-id2956 . -1) (undo-tree-id2957 . -1) (undo-tree-id2958 . -1) (#(" " 0 1 (fontified t)) . 286) (#("
" 0 1 (fontified t)) . 286) (undo-tree-id2959 . -1) (undo-tree-id2960 . -1) (undo-tree-id2961 . -1)) nil (25412 33156 938554 930000) 0 nil])
([nil nil ((1551 . 1557) (t 25412 33156 967907 360000)) nil (25412 33449 718018 267000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -1571) (1571 . 1572) (#(")" 0 1 (fontified nil)) . -1571) (1571 . 1572) (1557 . 1572)) nil (25412 33449 718008 649000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1556) (undo-tree-id2981 . -1) (#("|" 0 1 (fontified t)) . -1557) (undo-tree-id2982 . -1) (#(">" 0 1 (fontified t)) . -1558) (undo-tree-id2983 . -1) (#(" " 0 1 (fontified t)) . -1559) (undo-tree-id2984 . -1) (#("I" 0 1 (fontified t face font-lock-type-face)) . -1560) (undo-tree-id2985 . -1) (#("O" 0 1 (fontified t face font-lock-type-face)) . -1561) (undo-tree-id2986 . -1) (#("." 0 1 (fontified t)) . -1562) (undo-tree-id2987 . -1) (#("i" 0 1 (fontified t)) . -1563) (undo-tree-id2988 . -1) (#("n" 0 1 (fontified t)) . -1564) (undo-tree-id2989 . -1) (#("s" 0 1 (fontified t)) . -1565) (undo-tree-id2990 . -1) (#("p" 0 1 (fontified t)) . -1566) (undo-tree-id2991 . -1) (#("e" 0 1 (fontified t)) . -1567) (undo-tree-id2992 . -1) (#("c" 0 1 (fontified t)) . -1568) (undo-tree-id2993 . -1) (#("t" 0 1 (fontified t)) . -1569) (undo-tree-id2994 . -1) (#("(" 0 1 (fontified t)) . -1570) (undo-tree-id2995 . -1) (#(")" 0 1 (fontified t)) . -1571) (undo-tree-id2996 . -1) (undo-tree-id2997 . 1) (undo-tree-id2998 . -1) 1572 (t 25412 33449 749072 492000)) nil (25412 33500 759023 587000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1556) (undo-tree-id2978 . -1) (undo-tree-id2979 . -1) (undo-tree-id2980 . -1)) nil (25412 33500 758982 980000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1556) (#(" " 0 1 (fontified t)) . 1556) (#(" " 0 1 (fontified t)) . 1556) (#(" " 0 1 (fontified t)) . 1556)) nil (25412 33500 758975 115000) 0 nil])
([nil nil ((1522 . 1526) (#("    " 0 4 (fontified t)) . 1521) (undo-tree-id2977 . -4) (1520 . 1526)) nil (25412 33500 758971 558000) 0 nil])
([nil nil ((1522 . 1526) (#("    " 0 4 (fontified nil)) . 1521) (1521 . 1525) (1521 . 1522)) nil (25412 33500 758966 488000) 0 nil])
([nil nil ((1526 . 1530)) nil (25412 33500 758963 322000) 0 nil])
([nil nil ((1526 . 1538)) nil (25412 33500 758961 208000) 0 nil])
([nil nil ((#("data" 0 4 (fontified t)) . 1538) (undo-tree-id2975 . -4) (undo-tree-id2976 . -4) 1542) nil (25412 33500 758956 429000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1540 . 1541) (nil fontified nil 1537 . 1541) (1537 . 1541)) nil (25412 33500 758930 369000) 0 nil])
([nil nil ((#("I" 0 1 (fontified t face font-lock-type-face)) . -1526) (undo-tree-id2999 . -1) (undo-tree-id3000 . -1) (undo-tree-id3001 . -1) (#("O" 0 1 (fontified t face font-lock-type-face)) . -1527) (undo-tree-id3002 . -1) (undo-tree-id3003 . -1) (undo-tree-id3004 . -1) (#("." 0 1 (fontified t)) . -1528) (undo-tree-id3005 . -1) (undo-tree-id3006 . -1) (undo-tree-id3007 . -1) (#("i" 0 1 (fontified t)) . -1529) (undo-tree-id3008 . -1) (undo-tree-id3009 . -1) (undo-tree-id3010 . -1) (#("n" 0 1 (fontified t)) . -1530) (undo-tree-id3011 . -1) (undo-tree-id3012 . -1) (undo-tree-id3013 . -1) (#("s" 0 1 (fontified t)) . -1531) (undo-tree-id3014 . -1) (undo-tree-id3015 . -1) (undo-tree-id3016 . -1) (#("p" 0 1 (fontified t)) . -1532) (undo-tree-id3017 . -1) (undo-tree-id3018 . -1) (undo-tree-id3019 . -1) (#("e" 0 1 (fontified t)) . -1533) (undo-tree-id3020 . -1) (undo-tree-id3021 . -1) (undo-tree-id3022 . -1) (#("c" 0 1 (fontified t)) . -1534) (undo-tree-id3023 . -1) (undo-tree-id3024 . -1) (undo-tree-id3025 . -1) (#("t" 0 1 (fontified t)) . -1535) (undo-tree-id3026 . -1) (undo-tree-id3027 . -1) (undo-tree-id3028 . -1) (#("(" 0 1 (fontified t)) . -1536) (undo-tree-id3029 . -1) (undo-tree-id3030 . -1) (undo-tree-id3031 . -1) (#("d" 0 1 (fontified t)) . -1537) (undo-tree-id3032 . -1) (undo-tree-id3033 . -1) (#("a" 0 1 (fontified t)) . -1538) (undo-tree-id3034 . -1) (undo-tree-id3035 . -1) (#("t" 0 1 (fontified t)) . -1539) (undo-tree-id3036 . -1) (undo-tree-id3037 . -1) (#("a" 0 1 (fontified t rear-nonsticky t)) . -1540) (undo-tree-id3038 . -1) (undo-tree-id3039 . -1) (#(")" 0 1 (fontified t)) . -1541) (undo-tree-id3040 . -1) (undo-tree-id3041 . -1) (undo-tree-id3042 . 1) (undo-tree-id3043 . -1) 1542 (t 25412 33500 794941 660000)) nil (25412 33710 323830 472000) 0 nil])
([nil nil ((1526 . 1546)) nil (25412 33710 323789 735000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -1547) (1547 . 1548) (#(")" 0 1 (fontified nil)) . -1547) (1547 . 1548) (1546 . 1548)) nil (25412 33710 323787 440000) 0 nil])
([nil nil ((1547 . 1551)) nil (25412 33710 323782 291000) 0 nil])
([nil nil ((1562 . 1563) (t 25412 33710 385696 403000)) nil (25412 33762 203729 60000) 0 nil])
([nil nil ((1572 . 1573)) nil (25412 33762 203726 75000) 0 nil])
([nil nil ((1595 . 1596)) nil (25412 33762 203722 808000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1562 . 1563) (nil fontified nil 1562 . 1563) (nil fontified nil 1561 . 1562) (nil fontified nil 1559 . 1561) (nil fontified nil 1558 . 1559) (nil fontified nil 1548 . 1558) (nil fontified nil 1547 . 1548) (1547 . 1563)) nil (25412 33762 203621 296000) 0 nil])
([nil nil ((1563 . 1564)) nil (25412 33762 203608 181000) 0 nil])
([nil nil ((1546 . 1551) (t 25412 33762 267182 49000)) nil (25412 33813 132342 977000) 0 nil])
([nil nil ((1552 . 1557) (t 25412 33813 160581 83000)) nil (25412 33835 355474 856000) 0 nil])
([nil nil ((1557 . 1562)) nil (25412 33835 355471 129000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -1578) (undo-tree-id3044 . -1) (#("d" 0 1 (fontified t)) . -1579) (undo-tree-id3045 . -1) (#("a" 0 1 (fontified t)) . -1580) (undo-tree-id3046 . -1) (#("t" 0 1 (fontified t)) . -1581) (undo-tree-id3047 . -1) (#("a" 0 1 (fontified t)) . -1582) (undo-tree-id3048 . -1) 1583) nil (25412 33835 355461 531000) 0 nil])
([nil nil ((1580 . 1584) (#("    " 0 4 (fontified t)) . 1579) (undo-tree-id3066 . -4) (1579 . 1584) (#(" " 0 1 (fontified t)) . -1526) (1579 . 1580) (t 25412 33835 393175 546000)) nil (25412 33987 755013 294000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1658 . 1659) (nil fontified nil 1584 . 1659) (1584 . 1659)) nil (25412 33987 755007 463000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -1593) (undo-tree-id3061 . -1) (#("s" 0 1 (fontified t)) . -1594) (undo-tree-id3062 . -1) (#("e" 0 1 (fontified t face font-lock-keyword-face)) . -1595) (undo-tree-id3063 . -1) (#("r" 0 1 (fontified t)) . -1596) (undo-tree-id3064 . -1) (#("s" 0 1 (fontified t)) . -1597) (undo-tree-id3065 . -1) 1598) nil (25412 33987 755002 824000) 0 nil])
([nil nil ((1593 . 1597)) nil (25412 33987 754990 481000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -1602) (undo-tree-id3057 . -1) (#("s" 0 1 (fontified t)) . -1603) (undo-tree-id3058 . -1) (#("e" 0 1 (fontified t face font-lock-keyword-face)) . -1604) (undo-tree-id3059 . -1) (#("r" 0 1 (fontified t)) . -1605) (undo-tree-id3060 . -1) 1606) nil (25412 33987 754986 934000) 0 nil])
([nil nil ((1602 . 1605)) nil (25412 33987 754977 366000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -1647) (undo-tree-id3053 . -1) (#("s" 0 1 (fontified t)) . -1648) (undo-tree-id3054 . -1) (#("e" 0 1 (fontified t face font-lock-keyword-face)) . -1649) (undo-tree-id3055 . -1) (#("r" 0 1 (fontified t)) . -1650) (undo-tree-id3056 . -1) 1651) nil (25412 33987 754973 499000) 0 nil])
([nil nil ((1647 . 1650)) nil (25412 33987 754960 434000) 0 nil])
([nil nil ((#("U" 0 1 (fontified t face font-lock-type-face)) . -1618) (undo-tree-id3049 . -1) (#("s" 0 1 (fontified t face font-lock-type-face)) . -1619) (undo-tree-id3050 . -1) (#("e" 0 1 (fontified t face font-lock-type-face)) . -1620) (undo-tree-id3051 . -1) (#("r" 0 1 (fontified t face font-lock-type-face)) . -1621) (undo-tree-id3052 . -1) 1622) nil (25412 33987 754954 723000) 0 nil])
([nil nil ((1618 . 1623)) nil (25412 33987 754927 762000) 0 nil])
([nil nil ((1525 . 1526) (t 25412 33987 785013 651000)) nil (25412 33992 960890 318000) 0 nil])
([nil nil ((1619 . 1625) (t 25412 33992 989138 239000)) nil (25412 34012 542517 932000) 0 nil])
([nil nil ((1624 . 1628)) nil (25412 34012 542510 458000) 0 nil])
([nil nil ((#("C" 0 1 (fontified t face font-lock-type-face)) . -1619) (undo-tree-id3067 . -1) (#("a" 0 1 (fontified t face font-lock-type-face)) . -1620) (undo-tree-id3068 . -1) (#("b" 0 1 (fontified t face font-lock-type-face)) . -1621) (undo-tree-id3069 . -1) (#("b" 0 1 (fontified t face font-lock-type-face)) . -1622) (undo-tree-id3070 . -1) (#("o" 0 1 (fontified t face font-lock-type-face)) . -1623) (undo-tree-id3071 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -1624) (undo-tree-id3072 . -1) (#("W" 0 1 (fontified t face font-lock-type-face)) . -1625) (undo-tree-id3073 . -1) (#("e" 0 1 (fontified t face font-lock-type-face)) . -1626) (undo-tree-id3074 . -1) (#("b" 0 1 (fontified t face font-lock-type-face)) . -1627) (undo-tree-id3075 . -1) (#("." 0 1 (fontified t)) . -1628) (undo-tree-id3076 . -1) (#("Q" 0 1 (fontified t face font-lock-type-face)) . -1629) (undo-tree-id3077 . -1) (#("u" 0 1 (fontified t face font-lock-type-face)) . -1630) (undo-tree-id3078 . -1) (#("o" 0 1 (fontified t face font-lock-type-face)) . -1631) (undo-tree-id3079 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -1632) (undo-tree-id3080 . -1) (#("a" 0 1 (fontified t face font-lock-type-face)) . -1633) (undo-tree-id3081 . -1) (#("V" 0 1 (fontified t face font-lock-type-face)) . -1634) (undo-tree-id3082 . -1) (#("i" 0 1 (fontified t face font-lock-type-face)) . -1635) (undo-tree-id3083 . -1) (#("e" 0 1 (fontified t face font-lock-type-face)) . -1636) (undo-tree-id3084 . -1) (#("w" 0 1 (fontified t face font-lock-type-face)) . -1637) (undo-tree-id3085 . -1) 1638 (t 25412 34012 573603 670000)) nil (25412 34032 947852 38000) 0 nil])
([nil nil ((1619 . 1623)) nil (25412 34032 947823 294000) 0 nil])
([nil nil ((#("    Enum.map(data, fn dat ->
  render(view, \"show.json\", data: dat)
end)
" 0 4 (fontified t) 4 8 (fontified t face font-lock-type-face) 8 17 (fontified t) 17 19 (fontified t) 19 21 (fontified t face font-lock-keyword-face) 21 25 (fontified t) 25 29 (fontified t) 29 42 (fontified t) 42 44 (fontified t) 44 45 (fontified t syntax-table (15) face font-lock-string-face) 45 54 (fontified t face font-lock-string-face) 54 55 (fontified t syntax-table (15) face font-lock-string-face) 55 57 (fontified t) 57 62 (fontified t face elixir-atom-face) 62 66 (fontified t) 66 68 (fontified t) 68 71 (fontified t face font-lock-keyword-face) 71 72 (rear-nonsticky t fontified t) 72 73 (fontified t)) . -1581) (undo-tree-id3092 . -73) (undo-tree-id3093 . -73) (undo-tree-id3094 . -68) (undo-tree-id3095 . -68) (undo-tree-id3096 . -29) (undo-tree-id3097 . -29) (undo-tree-id3098 . -73) (undo-tree-id3099 . -73) (undo-tree-id3100 . -4) (undo-tree-id3101 . -73) (undo-tree-id3102 . -73) 1654 (t 25412 34033 6083 687000)) nil (25412 34139 212943 55000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -1525) (undo-tree-id3086 . -1) (undo-tree-id3087 . -1) (undo-tree-id3088 . -1) (#(" " 0 1 (fontified t face font-lock-comment-delimiter-face)) . -1526) (undo-tree-id3089 . -1) (undo-tree-id3090 . -1) (undo-tree-id3091 . -1) 1527) nil (25412 34139 212916 355000) 0 nil])
([nil nil ((1576 . 1586)) nil (25412 34139 212890 716000) 0 nil])
([nil nil ((1586 . 1587)) nil (25412 34139 212883 82000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -1579) (undo-tree-id3109 . -1) (#("a" 0 1 (fontified t)) . -1580) (undo-tree-id3110 . -1) (#("a" 0 1 (fontified t)) . -1581) (undo-tree-id3111 . -1) (#(":" 0 1 (fontified t)) . -1582) (undo-tree-id3112 . -1) (#(" " 0 1 (fontified t)) . -1583) (undo-tree-id3113 . -1) (#("d" 0 1 (fontified t)) . -1584) (undo-tree-id3114 . -1) (#("a" 0 1 (fontified t)) . -1585) (undo-tree-id3115 . -1) (#("t" 0 1 (fontified t)) . -1586) (undo-tree-id3116 . -1) 1587 (t 25412 34139 240495 861000)) nil (25412 34163 113872 389000) 0 nil])
([nil nil ((1579 . 1588)) nil (25412 34163 113853 694000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1583) (undo-tree-id3104 . -1) (#("d" 0 1 (fontified t)) . -1584) (undo-tree-id3105 . -1) (#("a" 0 1 (fontified t)) . -1585) (undo-tree-id3106 . -1) (#("t" 0 1 (fontified t)) . -1586) (undo-tree-id3107 . -1) (#("a" 0 1 (fontified t)) . -1587) (undo-tree-id3108 . -1) 1588) nil (25412 34163 113849 266000) 0 nil])
([nil nil ((1583 . 1584)) nil (25412 34163 113835 890000) 0 nil])
([nil nil ((1578 . 1583)) nil (25412 34163 113833 65000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t face elixir-atom-face)) . -1587) (undo-tree-id3103 . -1) 1588) nil (25412 34163 113825 771000) 0 nil])
([nil nil ((1856 . 1860) (#("    " 0 4 (fontified t)) . 1855) (undo-tree-id3125 . -4) (undo-tree-id3126 . -4) (1855 . 1860) (#("    " 0 4 (fontified nil)) . 1854) (1854 . 1858) (1854 . 1855) (t 25412 34163 185022 1000)) nil (25412 35291 325316 49000) 0 nil])
([nil nil ((1856 . 1860) (#("    " 0 4 (fontified nil)) . 1855) (1855 . 1859) (1855 . 1856)) nil (25412 35291 325307 333000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -1871) (1871 . 1872) (#(")" 0 1 (fontified nil)) . -1871) (1871 . 1872) (1860 . 1872)) nil (25412 35291 325302 845000) 0 nil])
([nil nil ((1871 . 1876)) nil (25412 35291 325298 937000) 0 nil])
([nil nil ((1876 . 1882)) nil (25412 35291 325296 773000) 0 nil])
([nil nil ((1882 . 1884)) nil (25412 35291 325294 269000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -1876) (undo-tree-id3117 . -1) (#("c" 0 1 (fontified t)) . -1877) (undo-tree-id3118 . -1) (#("o" 0 1 (fontified t)) . -1878) (undo-tree-id3119 . -1) (#("n" 0 1 (fontified t)) . -1879) (undo-tree-id3120 . -1) (#("c" 0 1 (fontified t)) . -1880) (undo-tree-id3121 . -1) (#("e" 0 1 (fontified t)) . -1881) (undo-tree-id3122 . -1) (#("p" 0 1 (fontified t)) . -1882) (undo-tree-id3123 . -1) (#("t" 0 1 (fontified t)) . -1883) (undo-tree-id3124 . -1) 1884) nil (25412 35291 325286 825000) 0 nil])
([nil nil ((1876 . 1886)) nil (25412 35291 325246 28000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -1876) (undo-tree-id3127 . -1) 1877 (t 25412 35291 375187 525000)) nil (25412 35305 528777 156000) 0 nil])
([nil nil ((1876 . 1877)) nil (25412 35305 528755 214000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -373) (undo-tree-id3142 . -1) (#("d" 0 1 (fontified t)) . -374) (undo-tree-id3143 . -1) 375 (t 25412 35305 591247 96000)) nil (25412 35457 736558 903000) 0 nil])
([nil nil ((373 . 382)) nil (25412 35457 736550 77000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -378) (undo-tree-id3138 . -1) (#("a" 0 1 (fontified t)) . -379) (undo-tree-id3139 . -1) (#("c" 0 1 (fontified t)) . -380) (undo-tree-id3140 . -1) (#("h" 0 1 (fontified t)) . -381) (undo-tree-id3141 . -1) 382) nil (25412 35457 736546 270000) 0 nil])
([nil nil ((378 . 383)) nil (25412 35457 736536 371000) 0 nil])
([nil nil ((382 . 391)) nil (25412 35457 736534 578000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -382) (undo-tree-id3128 . -1) (#("n" 0 1 (fontified t face font-lock-keyword-face)) . -383) (undo-tree-id3129 . -1) (#(" " 0 1 (fontified t)) . -384) (undo-tree-id3130 . -1) (#("-" 0 1 (fontified t)) . -385) (undo-tree-id3131 . -1) (#(">" 0 1 (fontified t)) . -386) (undo-tree-id3132 . -1) (#(" " 0 1 (fontified t)) . -387) (undo-tree-id3133 . -1) (#("e" 0 1 (fontified t)) . -388) (undo-tree-id3134 . -1) (#("n" 0 1 (fontified t)) . -389) (undo-tree-id3135 . -1) (#("d" 0 1 (fontified t face font-lock-keyword-face)) . -390) (undo-tree-id3136 . -1) (undo-tree-id3137 . -1) 391) nil (25412 35457 736528 877000) 0 nil])
([nil nil ((382 . 395)) nil (25412 35457 736494 182000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -396) (396 . 397) (#(")" 0 1 (fontified nil)) . -396) (396 . 397) (395 . 397)) nil (25412 35457 736489 684000) 0 nil])
([nil nil ((396 . 398)) nil (25412 35457 736484 845000) 0 nil])
([nil nil ((404 . 405)) nil (25412 35457 736477 461000) 0 nil])
([nil nil ((428 . 438) (t 25412 35457 764102 977000)) nil (25412 35482 465465 531000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -436) (undo-tree-id3144 . -1) (#("=" 0 1 (fontified t)) . -437) (undo-tree-id3145 . -1) 438) nil (25412 35482 465461 614000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -442) (442 . 443) (#(")" 0 1 (fontified nil)) . -442) (442 . 443) (436 . 443)) nil (25412 35482 465441 887000) 0 nil])
([nil nil ((443 . 447) (#(" " 0 1 (fontified nil)) . -427) (443 . 444)) nil (25412 35482 465431 337000) 0 nil])
([nil nil ((427 . 429) (t 25412 35482 532275 640000)) nil (25412 35615 299393 920000) 0 nil])
([nil nil ((#("|> IO.inspect()" 0 3 (fontified t) 3 5 (fontified t face font-lock-type-face) 5 6 (fontified t) 6 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t)) . 429)) nil (25412 35615 299385 123000) 0 nil])
([nil nil ((#("IO.inspect(quota_plan_list)" 0 1 (face font-lock-type-face fontified t) 1 2 (fontified t face font-lock-type-face) 2 10 (fontified t) 10 26 (fontified t) 26 27 (fontified t)) . 1892) (undo-tree-id3146 . -27) (t 25412 35615 341331 523000)) nil (25412 35628 647381 86000) 0 nil])
([nil nil ((400 . 405) (t 25412 35628 685448 454000)) nil (25412 35649 335257 73000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -419) (419 . 420) (#(")" 0 1 (fontified nil)) . -419) (419 . 420) (405 . 420)) nil (25412 35649 335247 325000) 0 nil])
([nil nil ((524 . 529) (t 25412 35649 365633 174000)) nil (25412 36137 813738 795000) 0 nil])
([nil nil ((529 . 539)) nil (25412 36137 813736 250000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -538) (undo-tree-id3147 . -1) 539) nil (25412 36137 813732 463000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -543) (543 . 544) (#(")" 0 1 (fontified nil)) . -543) (543 . 544) (538 . 544)) nil (25412 36409 333261 967000) 0 nil])
([nil nil ((468 . 473) (t 25412 36417 298389 251000)) nil (25412 36719 246368 515000) 0 nil] [nil nil ((404 . 405) (t 25412 36137 850899 378000)) ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 404)) (25412 36407 713535 489000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -485) (485 . 486) (#(")" 0 1 (fontified nil)) . -485) (485 . 486) (473 . 486)) nil (25412 36719 246364 217000) 0 nil])
([nil nil ((497 . 507) (t 25412 36196 875617 92000)) ((#("Enum.map()" 0 4 (fontified t face font-lock-type-face) 4 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t)) . 497) (undo-tree-id3160 . -9) (undo-tree-id3161 . -10)) (25412 36407 536666 330000) 0 nil])
([nil nil ((485 . 488)) nil (25412 36719 246359 287000) 0 nil])
([nil nil ((#("Map.keys(x) == [:Quota] end)" 0 3 (fontified t face font-lock-type-face) 3 16 (fontified t) 16 22 (fontified t face elixir-atom-face) 22 24 (fontified t) 24 27 (fontified t face font-lock-keyword-face) 27 28 (fontified t)) . 507) (undo-tree-id3148 . -28) (undo-tree-id3149 . -28) (undo-tree-id3150 . 1) (undo-tree-id3151 . -28) 535) ((507 . 535)) (25412 36407 385498 120000) 0 nil])
([nil nil ((488 . 498)) nil (25412 36719 246352 44000) 0 nil])
([nil nil ((nil rear-nonsticky nil 533 . 534) (nil fontified nil 533 . 534) (nil fontified nil 530 . 533) (nil fontified nil 528 . 530) (nil fontified nil 522 . 528) (nil fontified nil 509 . 522) (nil fontified nil 506 . 509) (506 . 534)) ((#("Map.keys(x) == [:Quota] end)" 0 3 (fontified nil face font-lock-type-face) 3 9 (fontified nil) 9 10 (fontified nil) 10 16 (fontified nil) 16 22 (fontified nil face elixir-atom-face) 22 24 (fontified nil) 24 27 (fontified nil face font-lock-keyword-face) 27 28 (fontified nil rear-nonsticky nil)) . 506) (nil rear-nonsticky t 533 . 534)) (25412 36407 219041 902000) 0 nil])
([nil nil ((494 . 500) (t 25412 36719 286350 825000)) nil (25412 36756 951899 153000) 0 nil])
([nil nil ((506 . 511)) ((#("fn y " 0 2 (fontified t face font-lock-keyword-face) 2 5 (fontified t)) . 506) (undo-tree-id3158 . -5) (undo-tree-id3159 . -5)) (25412 36407 42758 846000) 0 nil])
([nil nil ((505 . 510) (t 25412 36756 990854 565000)) nil (25412 36770 630448 404000) 0 nil])
([nil nil ((511 . 517)) ((#("- y|> " 0 6 (fontified t)) . 511)) (25412 36406 634896 905000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -521) (521 . 522) (#(")" 0 1 (fontified nil)) . -521) (521 . 522) (510 . 522)) nil (25412 36770 630443 204000) 0 nil])
([nil nil ((514 . 515)) ((#(" " 0 1 (fontified t)) . 514)) (25412 36404 266146 90000) 0 nil])
([nil nil ((404 . 405)) nil (25412 36770 630433 736000) 0 nil])
([nil nil ((512 . 513)) ((#(">" 0 1 (fontified t)) . 512)) (25412 36403 976491 259000) 0 nil])
([nil nil ((#("|> IO.inspect()" 0 3 (fontified t) 3 5 (fontified t face font-lock-type-face) 5 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t)) . 584) (undo-tree-id3162 . -15) (undo-tree-id3163 . -15) (t 25412 36770 655037 517000)) nil (25412 36782 280659 357000) 0 nil])
([nil nil ((547 . 552)) ((#(" end " 0 1 (fontified t) 1 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t)) . 547)) (25412 36403 820494 830000) 0 nil])
([nil nil ((511 . 514) (t 25412 36782 347194 218000)) nil (25412 36788 954700 153000) 0 nil])
([nil nil ((497 . 501) (t 25412 36349 529523 554000)) ((#("x|> " 0 4 (fontified t)) . 497) (undo-tree-id3152 . -1) (undo-tree-id3153 . -1)) (25412 36403 665643 295000) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -496) (undo-tree-id3164 . -1) (#(">" 0 1 (fontified t)) . -497) (undo-tree-id3165 . -1) (#(" " 0 1 (fontified t)) . -498) (undo-tree-id3166 . -1) (#("h" 0 1 (fontified t)) . -499) (undo-tree-id3167 . -1) (#("d" 0 1 (fontified t)) . -500) (undo-tree-id3168 . -1) (#(" " 0 1 (fontified t)) . -501) (undo-tree-id3169 . -1) 502 (t 25412 36788 983283 227000)) nil (25412 36815 972094 227000) 0 nil])
([nil nil ((498 . 499)) ((#(" " 0 1 (fontified t)) . 498)) (25412 36403 512458 484000) 0 nil])
([nil nil ((1001 . 1006) (t 25412 36816 11646 187000)) nil (25412 36871 539145 792000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . 533) (t 25412 36368 237761 486000)) ((533 . 534)) (25412 36403 365267 674000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1031 . 1032) (nil fontified nil 1031 . 1032) (nil fontified nil 1028 . 1031) (nil fontified nil 1020 . 1028) (nil fontified nil 1018 . 1020) (nil fontified nil 1017 . 1018) (nil fontified nil 1013 . 1017) (nil fontified nil 1009 . 1013) (nil fontified nil 1006 . 1009) (1006 . 1032)) nil (25412 36871 539136 946000) 0 nil])
([nil nil ((533 . 534)) ((#("y" 0 1 (fontified t)) . 533)) (25412 36403 205783 938000) 0 nil])
([nil nil ((#("I" 0 1 (fontified t face font-lock-type-face)) . -508) (undo-tree-id3170 . -1) (#("O" 0 1 (fontified t face font-lock-type-face)) . -509) (undo-tree-id3171 . -1) (#("." 0 1 (fontified t)) . -510) (undo-tree-id3172 . -1) (#("i" 0 1 (fontified t)) . -511) (undo-tree-id3173 . -1) (#("n" 0 1 (fontified t)) . -512) (undo-tree-id3174 . -1) (#("s" 0 1 (fontified t)) . -513) (undo-tree-id3175 . -1) (#("p" 0 1 (fontified t)) . -514) (undo-tree-id3176 . -1) (#("e" 0 1 (fontified t)) . -515) (undo-tree-id3177 . -1) (#("c" 0 1 (fontified t)) . -516) (undo-tree-id3178 . -1) (#("t" 0 1 (fontified t)) . -517) (undo-tree-id3179 . -1) (#("(" 0 1 (fontified t)) . -518) (undo-tree-id3180 . -1) (#(")" 0 1 (fontified t)) . -519) (undo-tree-id3181 . -1) (undo-tree-id3182 . 1) (undo-tree-id3183 . -1) 520 (t 25412 36871 580394 641000)) nil (25412 37399 730720 206000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . 533) (t 25412 36380 485917 701000)) ((533 . 534) (t 25412 36394 650098 781000)) (25412 36394 623744 132000) 0 nil])
([nil nil ((nil rear-nonsticky nil 593 . 594) (nil fontified nil 508 . 594) (508 . 594)) nil (25412 37399 730676 672000) 0 nil])
nil
([nil nil ((595 . 596)) nil (25412 37399 730668 486000) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -505) (undo-tree-id3184 . -1) (undo-tree-id3185 . -1) (#(">" 0 1 (fontified t)) . -506) (undo-tree-id3186 . -1) (undo-tree-id3187 . -1) (#(" " 0 1 (fontified t)) . -507) (undo-tree-id3188 . -1) (undo-tree-id3189 . -1) 508 (t 25412 37399 766157 315000)) nil (25412 37409 897236 247000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -609) (609 . 610) (#(")" 0 1 (fontified nil)) . -609) (609 . 610) (591 . 610) (t 25412 37409 938762 50000)) nil (25412 37458 733534 152000) 0 nil])
([nil nil ((670 . 674) (#("    " 0 4 (fontified t)) . 669) (undo-tree-id3206 . -1) (undo-tree-id3207 . -4) (670 . 674) (#("    " 0 4 (fontified nil)) . 668) (undo-tree-id3208 . -3) (671 . 672) (671 . 672) (t 25412 37458 777562 782000)) nil (25412 37783 365521 996000) 0 nil])
([nil nil ((670 . 674) (#("    " 0 4 (fontified nil)) . 669) (669 . 673) (669 . 670)) nil (25412 37783 365509 503000) 0 nil])
([nil nil ((nil rear-nonsticky nil 776 . 777) (nil fontified nil 674 . 777) (674 . 777)) nil (25412 37783 365506 166000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -769) (769 . 770) (#(")" 0 1 (fontified nil)) . -769) (769 . 770) (761 . 770)) nil (25412 37783 365502 700000) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -761) (undo-tree-id3194 . -1) (#(">" 0 1 (fontified t)) . -762) (undo-tree-id3195 . -1) (#(" " 0 1 (fontified t)) . -763) (undo-tree-id3196 . -1) (#("e" 0 1 (fontified t)) . -764) (undo-tree-id3197 . -1) (#("l" 0 1 (fontified t)) . -765) (undo-tree-id3198 . -1) (#("e" 0 1 (fontified t)) . -766) (undo-tree-id3199 . -1) (#("m" 0 1 (fontified t)) . -767) (undo-tree-id3200 . -1) (#("(" 0 1 (fontified t)) . -768) (undo-tree-id3201 . -1) (#(")" 0 1 (fontified t)) . -769) (undo-tree-id3202 . -1) (undo-tree-id3203 . 1) (undo-tree-id3204 . -1) (#(" " 0 1 (fontified t)) . -770) (undo-tree-id3205 . -1) 771) nil (25412 37783 365494 764000) 0 nil])
([nil nil ((761 . 765) (#(" " 0 1 (fontified t)) . 760) (undo-tree-id3193 . -1) (761 . 762)) nil (25412 37783 365468 214000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 760) (#(" " 0 1 (fontified t)) . 760) (#("
" 0 1 (fontified t)) . 760) (undo-tree-id3190 . -1) (undo-tree-id3191 . -1) (undo-tree-id3192 . -1)) nil (25412 37783 365460 720000) 0 nil])
([nil nil ((760 . 761)) nil (25412 37783 365436 584000) 0 nil])
([nil nil ((781 . 785) (#("    " 0 4 (fontified t)) . 780) (undo-tree-id3238 . -4) (undo-tree-id3239 . -4) (780 . 785) (#("    " 0 4 (fontified t)) . 779) (undo-tree-id3240 . -4) (undo-tree-id3241 . -4) (783 . 784) (t 25412 37783 396777 29000)) nil (25412 38323 605378 149000) 0 nil])
([nil nil ((781 . 785) (#("    " 0 4 (fontified nil)) . 780) (780 . 784) (780 . 781)) nil (25412 38323 605367 268000) 0 nil])
([nil nil ((nil rear-nonsticky nil 901 . 902) (nil fontified nil 785 . 902) (785 . 902)) nil (25412 38323 605363 551000) 0 nil])
([nil nil ((#("    Enum.map(fn x -> x |> Enum.map(y -> y |> Map.new(fn {k,v} -> {k |> String.to_atom(),v}   end)  end) end)

" 0 4 (fontified t) 4 8 (fontified t face font-lock-type-face) 8 13 (fontified t) 13 15 (fontified t face font-lock-keyword-face) 15 26 (fontified t) 26 30 (fontified t face font-lock-type-face) 30 45 (fontified t) 45 48 (fontified t face font-lock-type-face) 48 53 (fontified t) 53 55 (fontified t face font-lock-keyword-face) 55 71 (fontified t) 71 77 (fontified t face font-lock-type-face) 77 91 (fontified t) 91 93 (fontified t) 93 96 (fontified t face font-lock-keyword-face) 96 99 (fontified t) 99 102 (fontified t face font-lock-keyword-face) 102 104 (fontified t) 104 107 (fontified t face font-lock-keyword-face) 107 108 (fontified t rear-nonsticky t) 108 109 (fontified t) 109 110 (fontified t)) . -670) (undo-tree-id3224 . -109) (undo-tree-id3225 . -109) (undo-tree-id3226 . -110) (undo-tree-id3227 . -110) (undo-tree-id3228 . -110) (undo-tree-id3229 . -110) (undo-tree-id3230 . 1) (undo-tree-id3231 . -109) (undo-tree-id3232 . -109) (undo-tree-id3233 . -110) (undo-tree-id3234 . -110) (undo-tree-id3235 . -4) (undo-tree-id3236 . -110) (undo-tree-id3237 . -110) 780) nil (25412 38323 605358 401000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 668) (undo-tree-id3219 . -1) (undo-tree-id3220 . -1) (undo-tree-id3221 . -1) (undo-tree-id3222 . -1) (undo-tree-id3223 . -1)) nil (25412 38323 605329 537000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 668) (undo-tree-id3209 . -1) (undo-tree-id3210 . -1) (undo-tree-id3211 . -1) (undo-tree-id3212 . -1) (undo-tree-id3213 . -1) (undo-tree-id3214 . -1) (undo-tree-id3215 . -1) (undo-tree-id3216 . -1) (undo-tree-id3217 . -1) (undo-tree-id3218 . -1)) nil (25412 38323 605316 101000) 0 nil])
([nil nil ((796 . 797)) nil (25412 38323 605282 638000) 0 nil])
([nil nil ((#("    |> IO.inspect()" 0 7 (fontified t) 7 9 (fontified t face font-lock-type-face) 9 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t)) . 591) (undo-tree-id3243 . -19) (t 25412 38323 634528 83000)) nil (25412 38396 841338 147000) 0 nil])
([nil nil ((768 . 772) (#("    " 0 4 (fontified nil)) . -650) (undo-tree-id3242 . -4) (771 . 772)) nil (25412 38396 841332 436000) 0 nil])
([nil nil ((650 . 656)) nil (25412 38396 841316 366000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -794) (794 . 795) (#(")" 0 1 (fontified nil)) . -794) (794 . 795) (778 . 795)) nil (25412 38396 841307 780000) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -780) (undo-tree-id3250 . -1) (#(">" 0 1 (fontified t)) . -781) (undo-tree-id3251 . -1) (#(" " 0 1 (fontified t)) . -782) (undo-tree-id3252 . -1) (#("I" 0 1 (fontified t face font-lock-type-face)) . -783) (undo-tree-id3253 . -1) (#("O" 0 1 (fontified t face font-lock-type-face)) . -784) (undo-tree-id3254 . -1) (#("." 0 1 (fontified t)) . -785) (undo-tree-id3255 . -1) (#("i" 0 1 (fontified t)) . -786) (undo-tree-id3256 . -1) (#("n" 0 1 (fontified t)) . -787) (undo-tree-id3257 . -1) (#("s" 0 1 (fontified t)) . -788) (undo-tree-id3258 . -1) (#("p" 0 1 (fontified t)) . -789) (undo-tree-id3259 . -1) (#("e" 0 1 (fontified t)) . -790) (undo-tree-id3260 . -1) (#("c" 0 1 (fontified t)) . -791) (undo-tree-id3261 . -1) (#("t" 0 1 (fontified t)) . -792) (undo-tree-id3262 . -1) (#("(" 0 1 (fontified t)) . -793) (undo-tree-id3263 . -1) (#(")" 0 1 (fontified t)) . -794) (undo-tree-id3264 . -1) (undo-tree-id3265 . 1) (undo-tree-id3266 . -1) 795 (t 25412 38396 884548 329000)) nil (25412 38441 600598 87000) 0 nil])
([nil nil ((776 . 780) (#("    " 0 4 (fontified t)) . 775) (undo-tree-id3244 . -4) (undo-tree-id3245 . -4) (775 . 780) (#("    " 0 4 (fontified nil)) . 774) (undo-tree-id3246 . -4) (undo-tree-id3247 . -4) (#("  " 0 2 (fontified t)) . -778) (undo-tree-id3248 . -2) (undo-tree-id3249 . -2) (780 . 781)) nil (25412 38441 600559 925000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -790) (790 . 791) (#(")" 0 1 (fontified nil)) . -790) (790 . 791) (779 . 791)) nil (25412 38441 600526 912000) 0 nil])
([nil nil ((790 . 794)) nil (25412 38441 600517 805000) 0 nil])
([nil nil ((768 . 772) (#("      " 0 6 (fontified nil)) . -650) (773 . 774) (t 25412 38441 641754 190000)) nil (25412 40314 285703 129000) 0 nil])
([nil nil ((768 . 769) (t 25412 40314 324965 120000)) nil (25412 41402 684792 537000) 0 nil])
([nil nil ((768 . 779)) nil (25412 41402 684789 872000) 0 nil])
([nil nil ((#("     
" 0 5 (fontified t) 5 6 (fontified t)) . 445) (undo-tree-id3267 . -6) (undo-tree-id3268 . -6) (undo-tree-id3269 . -5) (undo-tree-id3270 . -5) (undo-tree-id3271 . -6)) nil (25412 41402 684786 176000) 0 nil])
([nil nil ((902 . 903)) nil (25412 41402 684760 499000) 0 nil])
([nil nil ((973 . 974)) nil (25412 41402 684757 694000) 0 nil])
([nil nil ((973 . 976) 974) nil (25412 41402 684750 60000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -807) (undo-tree-id3277 . -1) 808 (t 25412 41402 712072 341000)) nil (25412 41439 568856 203000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -901) (undo-tree-id3276 . -1) 902) nil (25412 41439 568849 330000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -971) (undo-tree-id3272 . -1) (#(" " 0 1 (fontified t)) . -972) (undo-tree-id3273 . -1) (#(" " 0 1 (fontified t)) . -973) (undo-tree-id3274 . -1) (#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -974) (undo-tree-id3275 . -1) 975) nil (25412 41439 568838 10000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 807) (t 25412 41439 606565 942000)) nil (25412 41450 29301 301000) 0 nil])
([nil nil ((807 . 808) (t 25412 41450 66163 985000)) nil (25412 43285 120135 400000) 0 nil])
([nil nil ((#("|> Enum.map     " 0 3 (fontified t) 3 7 (fontified t face font-lock-type-face) 7 11 (fontified t) 11 12 (fontified t) 12 16 (fontified t)) . 762) (t 25412 43285 159405 648000)) nil (25412 43306 708653 330000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 763) (undo-tree-id3278 . -1) (undo-tree-id3279 . -1) (undo-tree-id3280 . -1) (undo-tree-id3281 . -1) (t 25412 43306 735636 93000)) nil (25412 43511 107044 558000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -652) (undo-tree-id3282 . -1) (#("a" 0 1 (fontified t)) . -653) (undo-tree-id3283 . -1) (#("p" 0 1 (fontified t)) . -654) (undo-tree-id3284 . -1) 655 (t 25412 43511 149170 416000)) nil (25412 43600 233439 629000) 0 nil])
([nil nil ((652 . 656)) nil (25412 43600 233414 462000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -652) (undo-tree-id3285 . -1) (#("a" 0 1 (fontified t)) . -653) (undo-tree-id3286 . -1) (#("c" 0 1 (fontified t)) . -654) (undo-tree-id3287 . -1) (#("h" 0 1 (fontified t)) . -655) (undo-tree-id3288 . -1) 656 (t 25412 43600 261692 448000)) nil (25412 43622 569247 823000) 0 nil])
([nil nil ((652 . 655)) nil (25412 43622 569220 942000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -779) (779 . 780) (#(")" 0 1 (fontified nil)) . -779) (779 . 780) (763 . 780) (t 25412 43622 609834 852000)) nil (25412 43645 376171 138000) 0 nil])
([nil nil ((#("}" 0 1 (fontified nil)) . -781) (781 . 782) (#("}" 0 1 (fontified nil)) . -781) (781 . 782) (779 . 782)) nil (25412 43645 376159 446000) 0 nil])
([nil nil ((644 . 650) (t 25412 43645 409984 475000)) nil (25412 43678 366704 800000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 649)) nil (25412 43678 366702 285000) 0 nil])
([nil nil ((#("#    |> Enum.filter(fn x -> Map.keys(x) == [:Quota] end)" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 5 (fontified t face font-lock-comment-delimiter-face) 5 8 (fontified t face font-lock-comment-face) 8 12 (fontified t face font-lock-comment-face) 12 20 (fontified t face font-lock-comment-face) 20 22 (fontified t face font-lock-comment-face) 22 28 (fontified t face font-lock-comment-face) 28 31 (fontified t face font-lock-comment-face) 31 44 (fontified t face font-lock-comment-face) 44 50 (fontified t face font-lock-comment-face) 50 52 (fontified t face font-lock-comment-face) 52 55 (fontified t face font-lock-comment-face) 55 56 (fontified t face font-lock-comment-face)) . 586) (undo-tree-id3302 . -28) (undo-tree-id3303 . -28) (undo-tree-id3304 . -56)) nil (25412 43678 366699 680000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 586) (undo-tree-id3295 . -1) (undo-tree-id3296 . -1) (undo-tree-id3297 . -1) (undo-tree-id3298 . -1) (undo-tree-id3299 . -1) (undo-tree-id3300 . -1) (undo-tree-id3301 . -1)) nil (25412 43678 366691 575000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 586) (undo-tree-id3290 . -1) (undo-tree-id3291 . -1) (undo-tree-id3292 . -1) (undo-tree-id3293 . -1) (undo-tree-id3294 . -1)) nil (25412 43678 907124 970000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 585) (undo-tree-id3305 . -1) (undo-tree-id3306 . -1) (undo-tree-id3307 . -1) (undo-tree-id3308 . -1) (undo-tree-id3309 . -1) (undo-tree-id3310 . -1) (undo-tree-id3311 . -1) (undo-tree-id3312 . -1) (undo-tree-id3313 . -1) (undo-tree-id3314 . -1) (undo-tree-id3315 . -1) (undo-tree-id3316 . -1) (undo-tree-id3317 . -1) (undo-tree-id3318 . -1) (undo-tree-id3319 . -1) (undo-tree-id3320 . -1) (undo-tree-id3321 . -1) (undo-tree-id3322 . -1) (undo-tree-id3323 . -1)) nil (25412 43688 734514 312000) 0 nil] [nil nil ((#("     |> Enum.map(fn x -> x |> Enum.map(fn y -> y[:Quota] |> Map.new(fn {k,v} -> {k |> String.to_atom(),v}  end)  end) end)" 0 5 (fontified t) 5 8 (fontified t) 8 12 (fontified t face font-lock-type-face) 12 17 (fontified t) 17 19 (fontified t face font-lock-keyword-face) 19 30 (fontified t) 30 34 (fontified t face font-lock-type-face) 34 39 (fontified t) 39 41 (fontified t face font-lock-keyword-face) 41 49 (fontified t) 49 55 (fontified t face elixir-atom-face) 55 60 (fontified t) 60 63 (fontified t face font-lock-type-face) 63 68 (fontified t) 68 70 (fontified t face font-lock-keyword-face) 70 86 (fontified t) 86 92 (fontified t face font-lock-type-face) 92 107 (fontified t) 107 110 (fontified t face font-lock-keyword-face) 110 113 (fontified t) 113 116 (fontified t face font-lock-keyword-face) 116 118 (fontified t) 118 121 (fontified t face font-lock-keyword-face) 121 122 (rear-nonsticky t fontified t)) . 586) (undo-tree-id3289 . -122)) ((586 . 708)) (25412 43678 366658 403000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 585)) nil (25412 43688 734462 345000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . 707) (undo-tree-id3324 . -1) (undo-tree-id3325 . -1) (undo-tree-id3326 . -1) (t 25412 43688 802280 673000)) nil (25412 43694 344778 259000) 0 nil])
([nil nil ((713 . 723) (t 25412 43694 382319 808000)) nil (25412 43808 197190 116000) 0 nil])
([nil nil ((#("Enum.into(%{})" 0 4 (fontified t face font-lock-type-face) 4 9 (fontified t) 9 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t)) . 723) (undo-tree-id3327 . -14) (undo-tree-id3328 . 1) (undo-tree-id3329 . -14) (undo-tree-id3330 . 5) (undo-tree-id3331 . -10) (undo-tree-id3332 . -14) (undo-tree-id3333 . -14) 737) nil (25412 43808 197185 167000) 0 nil])
([nil nil ((nil rear-nonsticky nil 735 . 736) (nil fontified nil 735 . 736) (nil fontified nil 734 . 735) (nil fontified nil 733 . 734) (nil fontified nil 731 . 733) (nil fontified nil 726 . 731) (nil fontified nil 722 . 726) (722 . 736)) nil (25412 43808 197155 10000) 0 nil])
([nil nil ((722 . 735)) nil (25412 43808 197143 779000) 0 nil])
([nil nil ((749 . 754) (t 25412 43808 263164 909000)) nil (25412 43818 467569 921000) 0 nil])
([nil nil ((876 . 877) (t 25412 43818 495244 840000)) nil (25412 44438 445527 642000) 0 nil])
([nil nil ((947 . 948)) nil (25412 44438 445519 527000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -876) (undo-tree-id3335 . -1) 877 (t 25412 44438 476873 525000)) nil (25412 44479 659830 768000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -946) (undo-tree-id3334 . -1) 947) nil (25412 44479 659826 9000) 0 nil])
([nil nil ((876 . 877) (t 25412 44479 681283 222000)) nil (25412 44501 259302 680000) 0 nil])
([nil nil ((947 . 948)) nil (25412 44501 259301 467000) 0 nil])
([nil nil ((1736 . 1737)) nil (25412 44501 259296 909000) 0 nil])
([nil nil ((#("   |> Enum.map(fn x -> x |> Enum.into(%{}) end )" 0 6 (fontified t) 6 10 (fontified t face font-lock-type-face) 10 14 (fontified t) 14 15 (fontified t) 15 17 (fontified t face font-lock-keyword-face) 17 28 (fontified t) 28 32 (fontified t face font-lock-type-face) 32 37 (fontified t) 37 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t rear-nonsticky t) 42 43 (fontified t) 43 46 (fontified t face font-lock-keyword-face) 46 47 (fontified t) 47 48 (fontified t)) . 707) (undo-tree-id3336 . -15) (undo-tree-id3337 . -48) (undo-tree-id3338 . -48) (t 25412 44501 317499 439000)) nil (25412 44543 609928 460000) 0 nil])
([nil nil ((1352 . 1356) (#("    " 0 4 (fontified t)) . 1351) (undo-tree-id3339 . -4) (1350 . 1356) (t 25412 44543 649924 509000)) nil (25412 59832 377764 367000) 0 nil])
([nil nil ((1352 . 1356) (#("    " 0 4 (fontified nil)) . 1351) (1351 . 1355) (1351 . 1352)) nil (25412 59832 377747 856000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -1367) (1367 . 1368) (#(")" 0 1 (fontified nil)) . -1367) (1367 . 1368) (1352 . 1368)) nil (25412 59832 377741 865000) 0 nil])
([nil nil ((1367 . 1372)) nil (25412 59832 377731 806000) 0 nil])
([nil nil ((710 . 711) (t 25412 59832 452123 934000)) nil (25412 59837 488341 236000) 0 nil])
([nil nil ((#("I" 0 1 (fontified t face font-lock-type-face)) . -1357) (undo-tree-id3350 . -1) (#("O" 0 1 (fontified t face font-lock-type-face)) . -1358) (undo-tree-id3351 . -1) (#("." 0 1 (fontified t)) . -1359) (undo-tree-id3352 . -1) (#("i" 0 1 (fontified t)) . -1360) (undo-tree-id3353 . -1) (#("n" 0 1 (fontified t)) . -1361) (undo-tree-id3354 . -1) (#("s" 0 1 (fontified t)) . -1362) (undo-tree-id3355 . -1) (#("p" 0 1 (fontified t)) . -1363) (undo-tree-id3356 . -1) (#("e" 0 1 (fontified t)) . -1364) (undo-tree-id3357 . -1) (#("c" 0 1 (fontified t)) . -1365) (undo-tree-id3358 . -1) (#("t" 0 1 (fontified t)) . -1366) (undo-tree-id3359 . -1) (#("(" 0 1 (fontified t)) . -1367) (undo-tree-id3360 . -1) (#("q" 0 1 (fontified t)) . -1368) (undo-tree-id3361 . -1) (#("c" 0 1 (fontified t)) . -1369) (undo-tree-id3362 . -1) (#("m" 0 1 (fontified t)) . -1370) (undo-tree-id3363 . -1) (#("a" 0 1 (fontified t)) . -1371) (undo-tree-id3364 . -1) (#("p" 0 1 (fontified t)) . -1372) (undo-tree-id3365 . -1) (#(")" 0 1 (fontified t)) . -1373) (undo-tree-id3366 . -1) (undo-tree-id3367 . 1) (undo-tree-id3368 . -1) 1374 (t 25412 59837 520183 872000)) nil (25412 59901 88169 940000) 0 nil])
([nil nil ((#("   # |> IO.inspect()
   # |> parse_params()
" 0 3 (fontified t) 3 4 (fontified t face font-lock-comment-delimiter-face) 4 5 (fontified t face font-lock-comment-delimiter-face) 5 8 (fontified t face font-lock-comment-face) 8 10 (fontified t face font-lock-comment-face) 10 18 (fontified t face font-lock-comment-face) 18 19 (fontified t face font-lock-comment-face) 19 20 (fontified t face font-lock-comment-face) 20 21 (fontified t face font-lock-comment-face) 21 24 (fontified t) 24 26 (fontified t face font-lock-comment-delimiter-face) 26 43 (fontified t face font-lock-comment-face) 43 44 (fontified t face font-lock-comment-face)) . -401) (undo-tree-id3340 . -44) (undo-tree-id3341 . -44) (undo-tree-id3342 . -44) (undo-tree-id3343 . -44) (undo-tree-id3344 . -44) (undo-tree-id3345 . -21) (undo-tree-id3346 . -21) (undo-tree-id3347 . -44) (undo-tree-id3348 . -44) (undo-tree-id3349 . -44) 445) nil (25412 59901 88121 349000) 0 nil])
([nil nil ((1143 . 1148) (t 25412 59901 128936 135000)) nil (25412 60299 911055 219000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -1162) (1162 . 1163) (#(")" 0 1 (fontified nil)) . -1162) (1162 . 1163) (1148 . 1163)) nil (25412 60299 911045 361000) 0 nil])
([nil nil ((286 . 288) (t 25412 60299 949653 392000)) nil (25412 60309 356340 171000) 0 nil])
([nil nil ((#("I" 0 1 (fontified t face font-lock-type-face)) . -286) (undo-tree-id3369 . -1) (#("O" 0 1 (fontified t face font-lock-type-face)) . -287) (undo-tree-id3370 . -1) 288) nil (25412 60309 356331 675000) 0 nil])
([nil nil ((3720 . 3725) (t 25412 60309 397765 151000)) nil (25412 60502 385133 997000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -3739) (3739 . 3740) (#(")" 0 1 (fontified nil)) . -3739) (3739 . 3740) (3725 . 3740)) nil (25412 60502 385128 387000) 0 nil])
([nil nil ((1144 . 1145)) nil (25412 60502 385119 249000) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -3726) (undo-tree-id3371 . -1) (undo-tree-id3372 . -1) (#(">" 0 1 (fontified t)) . -3727) (undo-tree-id3373 . -1) (undo-tree-id3374 . -1) (#(" " 0 1 (fontified t)) . -3728) (undo-tree-id3375 . -1) (undo-tree-id3376 . -1) (#("I" 0 1 (fontified t face font-lock-type-face)) . -3729) (undo-tree-id3377 . -1) (undo-tree-id3378 . -1) (#("O" 0 1 (fontified t face font-lock-type-face)) . -3730) (undo-tree-id3379 . -1) (undo-tree-id3380 . -1) (#("." 0 1 (fontified t)) . -3731) (undo-tree-id3381 . -1) (undo-tree-id3382 . -1) (#("i" 0 1 (fontified t)) . -3732) (undo-tree-id3383 . -1) (undo-tree-id3384 . -1) (#("n" 0 1 (fontified t)) . -3733) (undo-tree-id3385 . -1) (undo-tree-id3386 . -1) (#("s" 0 1 (fontified t)) . -3734) (undo-tree-id3387 . -1) (undo-tree-id3388 . -1) (#("p" 0 1 (fontified t)) . -3735) (undo-tree-id3389 . -1) (undo-tree-id3390 . -1) (#("e" 0 1 (fontified t)) . -3736) (undo-tree-id3391 . -1) (undo-tree-id3392 . -1) (#("c" 0 1 (fontified t)) . -3737) (undo-tree-id3393 . -1) (undo-tree-id3394 . -1) (#("t" 0 1 (fontified t)) . -3738) (undo-tree-id3395 . -1) (undo-tree-id3396 . -1) (#("(" 0 1 (fontified t)) . -3739) (undo-tree-id3397 . -1) (undo-tree-id3398 . -1) (#(")" 0 1 (fontified t)) . -3740) (undo-tree-id3399 . -1) (undo-tree-id3400 . -1) (undo-tree-id3401 . 1) (undo-tree-id3402 . -1) 3741 (t 25412 60502 416048 336000)) nil (25412 60609 18150 267000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -2158) (2158 . 2159) (#(")" 0 1 (fontified nil)) . -2158) (2158 . 2159) (2143 . 2159)) nil (25412 60609 17968 555000) 0 nil])
([nil nil ((2158 . 2162)) nil (25412 60609 17959 48000) 0 nil])
([nil nil ((#("I" 0 1 (fontified t face font-lock-type-face)) . -2147) (undo-tree-id3404 . -1) (#("O" 0 1 (fontified t face font-lock-type-face)) . -2148) (undo-tree-id3405 . -1) (#("." 0 1 (fontified t)) . -2149) (undo-tree-id3406 . -1) (#("i" 0 1 (fontified t)) . -2150) (undo-tree-id3407 . -1) (#("n" 0 1 (fontified t)) . -2151) (undo-tree-id3408 . -1) (#("s" 0 1 (fontified t)) . -2152) (undo-tree-id3409 . -1) (#("p" 0 1 (fontified t)) . -2153) (undo-tree-id3410 . -1) (#("e" 0 1 (fontified t)) . -2154) (undo-tree-id3411 . -1) (#("c" 0 1 (fontified t)) . -2155) (undo-tree-id3412 . -1) (#("t" 0 1 (fontified t)) . -2156) (undo-tree-id3413 . -1) (#("(" 0 1 (fontified t)) . -2157) (undo-tree-id3414 . -1) (#("d" 0 1 (fontified t)) . -2158) (undo-tree-id3415 . -1) (#("a" 0 1 (fontified t)) . -2159) (undo-tree-id3416 . -1) (#("t" 0 1 (fontified t)) . -2160) (undo-tree-id3417 . -1) (#("a" 0 1 (fontified t)) . -2161) (undo-tree-id3418 . -1) (#(")" 0 1 (fontified t)) . -2162) (undo-tree-id3419 . -1) (undo-tree-id3420 . 1) (undo-tree-id3421 . -1) 2163 (t 25412 60609 57309 827000)) nil (25412 60672 924348 175000) 0 nil])
([nil nil ((2148 . 2153)) nil (25412 60672 924308 250000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -2152) (undo-tree-id3403 . -1) 2153) nil (25412 60672 924304 864000) 0 nil])
([nil nil ((2163 . 2164) (2152 . 2164)) nil (25412 60672 924288 603000) 0 nil])
([nil nil ((2163 . 2177)) nil (25412 60672 924285 136000) 0 nil])
([nil nil ((2177 . 2178)) nil (25412 60672 924277 392000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -2178) (undo-tree-id3422 . -1) 2179 (t 25412 60672 962065 788000)) nil (25412 60674 36109 26000) 0 nil])
([nil nil ((#("q" 0 1 (fontified t)) . -2163) (undo-tree-id3431 . -1) (#("u" 0 1 (fontified t)) . -2164) (undo-tree-id3432 . -1) (#("o" 0 1 (fontified t)) . -2165) (undo-tree-id3433 . -1) (#("t" 0 1 (fontified t)) . -2166) (undo-tree-id3434 . -1) (#("a" 0 1 (fontified t)) . -2167) (undo-tree-id3435 . -1) (#("_" 0 1 (fontified t)) . -2168) (undo-tree-id3436 . -1) (#("p" 0 1 (fontified t)) . -2169) (undo-tree-id3437 . -1) (#("l" 0 1 (fontified t)) . -2170) (undo-tree-id3438 . -1) (#("a" 0 1 (fontified t)) . -2171) (undo-tree-id3439 . -1) (#("n" 0 1 (fontified t)) . -2172) (undo-tree-id3440 . -1) (#("_" 0 1 (fontified t)) . -2173) (undo-tree-id3441 . -1) (#("l" 0 1 (fontified t)) . -2174) (undo-tree-id3442 . -1) (#("i" 0 1 (fontified t)) . -2175) (undo-tree-id3443 . -1) (#("s" 0 1 (fontified t)) . -2176) (undo-tree-id3444 . -1) (#("t" 0 1 (fontified t)) . -2177) (undo-tree-id3445 . -1) 2178 (t 25412 60674 74078 940000)) nil (25412 60791 240610 41000) 0 nil])
([nil nil ((2163 . 2167)) nil (25412 60791 240574 725000) 0 nil])
([nil nil ((2167 . 2172)) nil (25412 60791 240571 920000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2167) (undo-tree-id3423 . 1) (#(" " 0 1 (fontified t)) . 2167) (undo-tree-id3424 . 1) (#(" " 0 1 (fontified t)) . 2167) (undo-tree-id3425 . 1) (#(" " 0 1 (fontified t)) . 2167) (undo-tree-id3426 . 1) (#("
" 0 1 (fontified t)) . 2167) (undo-tree-id3427 . -1) (undo-tree-id3428 . -1) (undo-tree-id3429 . -1) (undo-tree-id3430 . 1)) nil (25412 60791 240562 732000) 0 nil])
([nil nil ((#("I" 0 1 (fontified t face font-lock-type-face)) . -2152) (undo-tree-id3446 . -1) (#("O" 0 1 (fontified t face font-lock-type-face)) . -2153) (undo-tree-id3447 . -1) (#("." 0 1 (fontified t)) . -2154) (undo-tree-id3448 . -1) (#("i" 0 1 (fontified t)) . -2155) (undo-tree-id3449 . -1) (#("n" 0 1 (fontified t)) . -2156) (undo-tree-id3450 . -1) (#("s" 0 1 (fontified t)) . -2157) (undo-tree-id3451 . -1) (#("p" 0 1 (fontified t)) . -2158) (undo-tree-id3452 . -1) (#("e" 0 1 (fontified t)) . -2159) (undo-tree-id3453 . -1) (#("c" 0 1 (fontified t)) . -2160) (undo-tree-id3454 . -1) (#("t" 0 1 (fontified t)) . -2161) (undo-tree-id3455 . -1) (#("(" 0 1 (fontified t)) . -2162) (undo-tree-id3456 . -1) (#("d" 0 1 (fontified t)) . -2163) (undo-tree-id3457 . -1) (#("a" 0 1 (fontified t)) . -2164) (undo-tree-id3458 . -1) (#("t" 0 1 (fontified t)) . -2165) (undo-tree-id3459 . -1) (#("a" 0 1 (fontified t)) . -2166) (undo-tree-id3460 . -1) (#(")" 0 1 (fontified t)) . -2167) (undo-tree-id3461 . -1) (undo-tree-id3462 . 1) (undo-tree-id3463 . 1) (undo-tree-id3464 . -1) 2168 (t 25412 60791 275465 339000)) nil (25412 60911 779276 679000) 0 nil])
([nil nil ((400 . 405) (t 25412 60911 816385 826000)) nil (25412 60934 91924 495000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -419) (419 . 420) (#(")" 0 1 (fontified nil)) . -419) (419 . 420) (405 . 420)) nil (25412 60934 91915 248000) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -405) (undo-tree-id3465 . -1) (#(">" 0 1 (fontified t)) . -406) (undo-tree-id3466 . -1) (#(" " 0 1 (fontified t)) . -407) (undo-tree-id3467 . -1) (#("I" 0 1 (fontified t face font-lock-type-face)) . -408) (undo-tree-id3468 . -1) (#("O" 0 1 (fontified t face font-lock-type-face)) . -409) (undo-tree-id3469 . -1) (#("." 0 1 (fontified t)) . -410) (undo-tree-id3470 . -1) (#("i" 0 1 (fontified t)) . -411) (undo-tree-id3471 . -1) (#("n" 0 1 (fontified t)) . -412) (undo-tree-id3472 . -1) (#("s" 0 1 (fontified t)) . -413) (undo-tree-id3473 . -1) (#("p" 0 1 (fontified t)) . -414) (undo-tree-id3474 . -1) (#("e" 0 1 (fontified t)) . -415) (undo-tree-id3475 . -1) (#("c" 0 1 (fontified t)) . -416) (undo-tree-id3476 . -1) (#("t" 0 1 (fontified t)) . -417) (undo-tree-id3477 . -1) (#("(" 0 1 (fontified t)) . -418) (undo-tree-id3478 . -1) (#(")" 0 1 (fontified t)) . -419) (undo-tree-id3479 . -1) (undo-tree-id3480 . 1) (undo-tree-id3481 . -1) 420 (t 25412 60934 118767 872000)) nil (25412 60986 900570 181000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -671) (undo-tree-id3482 . -1) 672 (t 25412 60986 931208 542000)) nil (25412 61123 557714 974000) 0 nil])
([nil nil ((1117 . 1118) (t 25412 61123 587548 745000)) nil (25412 61933 306072 840000) 0 nil])
([nil nil ((405 . 406) (#("    " 0 4 (fontified nil)) . 401) (undo-tree-id3483 . -1) (undo-tree-id3484 . -1) (402 . 405) (402 . 403) (t 25412 61933 379921 716000)) nil (25412 62014 129284 858000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -419) (419 . 420) (#(")" 0 1 (fontified nil)) . -419) (419 . 420) (401 . 420)) nil (25412 62014 129260 362000) 0 nil])
([nil nil ((#("IO.inspect(qmap) " 0 2 (fontified t face font-lock-type-face) 2 10 (fontified t) 10 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t)) . 692) (undo-tree-id3485 . -17) (t 25412 62014 155208 279000)) nil (25412 62063 283379 383000) 0 nil])
([nil nil ((688 . 692) (t 25412 62063 310829 362000)) nil (25413 36355 616318 376000) 0 nil])
([nil nil ((696 . 697)) nil (25413 36355 616316 412000) 0 nil])
([nil nil ((#("I" 0 1 (fontified t face font-lock-type-face)) . -408) (undo-tree-id3489 . -1) (#("O" 0 1 (fontified t face font-lock-type-face)) . -409) (undo-tree-id3490 . -1) (#("." 0 1 (fontified t)) . -410) (undo-tree-id3491 . -1) (#("i" 0 1 (fontified t)) . -411) (undo-tree-id3492 . -1) (#("n" 0 1 (fontified t)) . -412) (undo-tree-id3493 . -1) (#("s" 0 1 (fontified t)) . -413) (undo-tree-id3494 . -1) (#("p" 0 1 (fontified t)) . -414) (undo-tree-id3495 . -1) (#("e" 0 1 (fontified t)) . -415) (undo-tree-id3496 . -1) (#("c" 0 1 (fontified t)) . -416) (undo-tree-id3497 . -1) (#("t" 0 1 (fontified t)) . -417) (undo-tree-id3498 . -1) (#("(" 0 1 (fontified t)) . -418) (undo-tree-id3499 . -1) (#(")" 0 1 (fontified t)) . -419) (undo-tree-id3500 . -1) (undo-tree-id3501 . 1) (undo-tree-id3502 . -1) 420) nil (25413 36355 616309 519000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -420) (420 . 421) (#(")" 0 1 (fontified nil)) . -420) (420 . 421) (408 . 421)) nil (25413 36355 616279 643000) 0 nil])
([nil nil ((421 . 426)) nil (25413 36355 616276 347000) 0 nil])
([nil nil ((426 . 428)) nil (25413 36355 616274 764000) 0 nil])
([nil nil ((#("?" 0 1 (fontified t)) . -427) (undo-tree-id3488 . -1) 428) nil (25413 36355 616272 489000) 0 nil])
([nil nil ((427 . 432)) nil (25413 36355 616268 822000) 0 nil])
([nil nil ((#("U" 0 1 (fontified t face font-lock-type-face)) . -430) (undo-tree-id3486 . -1) (#("O" 0 1 (fontified t face font-lock-type-face)) . -431) (undo-tree-id3487 . -1) 432) nil (25413 36355 616265 707000) 0 nil])
([nil nil ((430 . 431)) nil (25413 36355 616243 915000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -440) (440 . 441) (#(")" 0 1 (fontified nil)) . -440) (440 . 441) (431 . 441)) nil (25413 36355 616234 37000) 0 nil])
([nil nil ((419 . 420) (t 25413 36355 651565 182000)) nil (25413 36366 623635 517000) 0 nil])
([nil nil ((453 . 454) (t 25413 36366 663794 193000)) nil (25413 36425 710431 535000) 0 nil])
([nil nil ((468 . 469)) nil (25413 36425 710430 773000) 0 nil])
([nil nil ((500 . 501)) nil (25413 36425 710430 162000) 0 nil])
([nil nil ((591 . 592)) nil (25413 36425 710429 401000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -453) (undo-tree-id3506 . -1) 454) nil (25413 36425 710428 218000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -467) (undo-tree-id3505 . -1) 468) nil (25413 36425 710426 255000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -498) (undo-tree-id3504 . -1) 499) nil (25413 36425 710424 351000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -588) (undo-tree-id3503 . -1) 589) nil (25413 36425 710421 65000) 0 nil])
([nil nil ((467 . 468)) nil (25413 36425 710398 623000) 0 nil])
([nil nil ((585 . 589) (#("    " 0 4 (fontified nil)) . -499) (undo-tree-id3540 . -4) (undo-tree-id3541 . -4) (588 . 589) (t 25413 36425 745005 696000)) nil (25413 41806 455330 51000) 0 nil])
([nil nil ((nil rear-nonsticky nil 673 . 674) (nil fontified nil 672 . 674) (nil fontified nil 669 . 672) (nil fontified nil 665 . 669) (nil fontified nil 662 . 665) (nil fontified nil 660 . 662) (nil fontified nil 654 . 660) (nil fontified nil 642 . 654) (nil fontified nil 639 . 642) (nil fontified nil 628 . 639) (nil fontified nil 626 . 628) (nil fontified nil 618 . 626) (nil fontified nil 614 . 618) (nil fontified nil 603 . 614) (nil fontified nil 601 . 603) (nil fontified nil 596 . 601) (nil fontified nil 592 . 596) (nil fontified nil 589 . 592) (589 . 674)) nil (25413 41806 455326 134000) 0 nil])
([nil nil ((499 . 500)) nil (25413 41806 455322 517000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t face font-lock-type-face)) . -594) (undo-tree-id3519 . -1) (#("u" 0 1 (fontified t face font-lock-type-face)) . -595) (undo-tree-id3520 . -1) (#("m" 0 1 (fontified t face font-lock-type-face)) . -596) (undo-tree-id3521 . -1) (#("." 0 1 (fontified t face font-lock-type-face)) . -597) (undo-tree-id3522 . -1) (#("m" 0 1 (fontified t)) . -598) (undo-tree-id3523 . -1) (#("a" 0 1 (fontified t)) . -599) (undo-tree-id3524 . -1) (#("p" 0 1 (fontified t)) . -600) (undo-tree-id3525 . -1) (#("(" 0 1 (fontified t)) . -601) (undo-tree-id3526 . -1) (#("f" 0 1 (fontified t)) . -602) (undo-tree-id3527 . -1) (#("n" 0 1 (fontified t)) . -603) (undo-tree-id3528 . -1) (#(" " 0 1 (fontified t)) . -604) (undo-tree-id3529 . -1) (#("x" 0 1 (fontified t)) . -605) (undo-tree-id3530 . -1) (#(" " 0 1 (fontified t)) . -606) (undo-tree-id3531 . -1) (#("-" 0 1 (fontified t)) . -607) (undo-tree-id3532 . -1) (#(">" 0 1 (fontified t)) . -608) (undo-tree-id3533 . -1) (#(" " 0 1 (fontified t)) . -609) (undo-tree-id3534 . -1) (#("x" 0 1 (fontified t)) . -610) (undo-tree-id3535 . -1) (#(" " 0 1 (fontified t)) . -611) (undo-tree-id3536 . -1) (#("|" 0 1 (fontified t)) . -612) (undo-tree-id3537 . -1) (#(">" 0 1 (fontified t)) . -613) (undo-tree-id3538 . -1) (#(" " 0 1 (fontified t)) . -614) (undo-tree-id3539 . -1) 615) nil (25413 41806 455315 704000) 0 nil])
([nil nil ((#("E" 0 1 (fontified t face font-lock-type-face)) . -593) (undo-tree-id3518 . -1) 594) nil (25413 41806 455295 506000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -645) (undo-tree-id3507 . -1) (#(" " 0 1 (fontified t)) . -646) (undo-tree-id3508 . -1) (#(" " 0 1 (fontified t)) . -647) (undo-tree-id3509 . -1) (#("e" 0 1 (fontified t)) . -648) (undo-tree-id3510 . -1) (#("n" 0 1 (fontified t)) . -649) (undo-tree-id3511 . -1) (#("d" 0 1 (fontified t face font-lock-keyword-face)) . -650) (undo-tree-id3512 . -1) (undo-tree-id3513 . -1) (#(" " 0 1 (fontified t)) . -651) (undo-tree-id3514 . -1) (#(")" 0 1 (rear-nonsticky t fontified t)) . -652) (undo-tree-id3515 . -1) (undo-tree-id3516 . 1) (undo-tree-id3517 . -1) 653) nil (25413 41806 455288 503000) 0 nil])
([nil nil ((645 . 650) (t 25413 41806 485922 319000)) nil (25413 41832 641434 511000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -664) (664 . 665) (#(")" 0 1 (fontified nil)) . -664) (664 . 665) (650 . 665)) nil (25413 41832 641432 738000) 0 nil])
([nil nil ((#("    |> IO.inspect()" 0 7 (fontified t) 7 9 (fontified t face font-lock-type-face) 9 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t)) . 423) (undo-tree-id3542 . -19)) nil (25413 41832 641425 143000) 0 nil])
([nil nil ((#(">" 0 1 (fontified t)) . -652) (undo-tree-id3553 . -1) (#(" " 0 1 (fontified t)) . -653) (undo-tree-id3554 . -1) (#("E" 0 1 (fontified t face font-lock-type-face)) . -654) (undo-tree-id3555 . -1) (#("n" 0 1 (fontified t face font-lock-type-face)) . -655) (undo-tree-id3556 . -1) (#("u" 0 1 (fontified t face font-lock-type-face)) . -656) (undo-tree-id3557 . -1) (#("m" 0 1 (fontified t face font-lock-type-face)) . -657) (undo-tree-id3558 . -1) (#("." 0 1 (fontified t)) . -658) (undo-tree-id3559 . -1) (#("m" 0 1 (fontified t)) . -659) (undo-tree-id3560 . -1) (#("a" 0 1 (fontified t)) . -660) (undo-tree-id3561 . -1) (#("p" 0 1 (fontified t)) . -661) (undo-tree-id3562 . -1) (#("(" 0 1 (fontified t)) . -662) (undo-tree-id3563 . -1) (#("f" 0 1 (fontified t)) . -663) (undo-tree-id3564 . -1) (#("n" 0 1 (fontified t face font-lock-keyword-face)) . -664) (undo-tree-id3565 . -1) (#(" " 0 1 (fontified t)) . -665) (undo-tree-id3566 . -1) (#("x" 0 1 (fontified t)) . -666) (undo-tree-id3567 . -1) (#(" " 0 1 (fontified t)) . -667) (undo-tree-id3568 . -1) (#("-" 0 1 (fontified t)) . -668) (undo-tree-id3569 . -1) (#(">" 0 1 (fontified t)) . -669) (undo-tree-id3570 . -1) (#(" " 0 1 (fontified t)) . -670) (undo-tree-id3571 . -1) (#("x" 0 1 (fontified t)) . -671) (undo-tree-id3572 . -1) (#(" " 0 1 (fontified t)) . -672) (undo-tree-id3573 . -1) 673 (t 25413 41832 674386 578000)) nil (25413 41868 76194 251000) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -651) (undo-tree-id3552 . -1) 652) nil (25413 41868 76174 193000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -741) (undo-tree-id3543 . -1) (#("e" 0 1 (fontified t)) . -742) (undo-tree-id3544 . -1) (#("n" 0 1 (fontified t)) . -743) (undo-tree-id3545 . -1) (undo-tree-id3546 . -1) (#("d" 0 1 (fontified t face font-lock-keyword-face)) . -744) (undo-tree-id3547 . -1) (undo-tree-id3548 . -1) (#(")" 0 1 (rear-nonsticky t fontified t)) . -745) (undo-tree-id3549 . -1) (undo-tree-id3550 . 1) (undo-tree-id3551 . -1) 746) nil (25413 41868 76165 206000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -851) (undo-tree-id3575 . -1) 852 (t 25413 41868 111011 993000)) nil (25413 41935 849197 592000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -757) (undo-tree-id3574 . -1) 758) nil (25413 41935 849188 956000) 0 nil])
([nil nil ((757 . 758) (t 25413 41935 884199 899000)) nil (25413 41970 434884 254000) 0 nil])
([nil nil ((851 . 852)) nil (25413 41970 434875 848000) 0 nil])
([nil nil ((#("#    |> Enum.map(fn y -> y end)
#|> Enum.map(fn x -> x |> Enum.filter(fn z -> z |> Map.keys() == [:Quota] end)   end )" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 5 (fontified t face font-lock-comment-delimiter-face) 5 8 (fontified t face font-lock-comment-face) 8 12 (fontified t face font-lock-comment-face) 12 16 (fontified t face font-lock-comment-face) 16 17 (fontified t face font-lock-comment-face) 17 19 (fontified t face font-lock-comment-face) 19 27 (fontified t face font-lock-comment-face) 27 30 (fontified t face font-lock-comment-face) 30 31 (fontified t face font-lock-comment-face) 31 32 (fontified t face font-lock-comment-face) 32 33 (fontified t face font-lock-comment-delimiter-face) 33 36 (fontified t face font-lock-comment-face) 36 40 (fontified t face font-lock-comment-face) 40 45 (fontified t face font-lock-comment-face) 45 47 (fontified t face font-lock-comment-face) 47 58 (fontified t face font-lock-comment-face) 58 62 (fontified t face font-lock-comment-face) 62 70 (fontified t face font-lock-comment-face) 70 72 (fontified t face font-lock-comment-face) 72 83 (fontified t face font-lock-comment-face) 83 86 (fontified t face font-lock-comment-face) 86 98 (fontified t face font-lock-comment-face) 98 104 (fontified t face font-lock-comment-face) 104 106 (fontified t face font-lock-comment-face) 106 109 (fontified t face font-lock-comment-face) 109 113 (fontified t face font-lock-comment-face) 113 116 (fontified t face font-lock-comment-face) 116 118 (fontified t face font-lock-comment-face)) . -448) (undo-tree-id3579 . -32) (undo-tree-id3580 . -32) (undo-tree-id3581 . -32) (undo-tree-id3582 . -32) (undo-tree-id3583 . -118) (undo-tree-id3584 . -32) (undo-tree-id3585 . -118) (undo-tree-id3586 . 1) (undo-tree-id3587 . -118) (undo-tree-id3588 . 74) (undo-tree-id3589 . -45) 566 (t 25413 41970 468802 297000)) nil (25413 42025 323677 590000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 448) (undo-tree-id3576 . -1) (undo-tree-id3577 . -1) (undo-tree-id3578 . -1)) nil (25413 42025 323652 51000) 0 nil])
([nil nil ((622 . 627)) nil (25413 42025 323627 746000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -640) (640 . 641) (#(")" 0 1 (fontified nil)) . -640) (640 . 641) (627 . 641)) nil (25413 42025 323616 675000) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -512) (undo-tree-id3590 . -1) (#(">" 0 1 (fontified t)) . -513) (undo-tree-id3591 . -1) (#(" " 0 1 (fontified t)) . -514) (undo-tree-id3592 . -1) (#("I" 0 1 (fontified t face font-lock-type-face)) . -515) (undo-tree-id3593 . -1) (#("O" 0 1 (fontified t face font-lock-type-face)) . -516) (undo-tree-id3594 . -1) (#("." 0 1 (fontified t)) . -517) (undo-tree-id3595 . -1) (#("i" 0 1 (fontified t)) . -518) (undo-tree-id3596 . -1) (#("n" 0 1 (fontified t)) . -519) (undo-tree-id3597 . -1) (#("s" 0 1 (fontified t)) . -520) (undo-tree-id3598 . -1) (#("p" 0 1 (fontified t)) . -521) (undo-tree-id3599 . -1) (#("e" 0 1 (fontified t)) . -522) (undo-tree-id3600 . -1) (#("c" 0 1 (fontified t)) . -523) (undo-tree-id3601 . -1) (#("t" 0 1 (fontified t)) . -524) (undo-tree-id3602 . -1) (#("(" 0 1 (fontified t)) . -525) (undo-tree-id3603 . -1) (#(")" 0 1 (fontified t)) . -526) (undo-tree-id3604 . -1) (undo-tree-id3605 . 1) (undo-tree-id3606 . -1) 527 (t 25413 42025 345753 386000)) nil (25413 42035 10556 652000) 0 nil])
([nil nil ((617 . 618) (t 25413 42035 77921 493000)) nil (25413 42061 848443 469000) 0 nil])
([nil nil ((510 . 514) (#("    " 0 4 (fontified t)) . 509) (undo-tree-id3618 . -4) (509 . 514) (#("    " 0 4 (fontified t)) . 508) (undo-tree-id3619 . -4) (512 . 513) (t 25413 42061 870383 450000)) nil (25413 42143 331409 819000) 0 nil])
([nil nil ((510 . 514) (#("    " 0 4 (fontified nil)) . 509) (509 . 513) (509 . 510)) nil (25413 42143 331402 986000) 0 nil])
([nil nil ((nil rear-nonsticky nil 603 . 604) (nil fontified nil 603 . 604) (nil fontified nil 600 . 603) (nil fontified nil 597 . 600) (nil fontified nil 594 . 597) (nil fontified nil 579 . 594) (nil fontified nil 573 . 579) (nil fontified nil 557 . 573) (nil fontified nil 555 . 557) (nil fontified nil 550 . 555) (nil fontified nil 547 . 550) (nil fontified nil 542 . 547) (nil fontified nil 536 . 542) (nil fontified nil 528 . 536) (nil fontified nil 526 . 528) (nil fontified nil 521 . 526) (nil fontified nil 517 . 521) (nil fontified nil 514 . 517) (514 . 604)) nil (25413 42143 331398 227000) 0 nil])
([nil nil ((510 . 511)) nil (25413 42143 331390 232000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -636) (undo-tree-id3607 . -1) (#(":" 0 1 (fontified t)) . -637) (undo-tree-id3608 . -1) (#("Q" 0 1 (fontified t face elixir-atom-face)) . -638) (undo-tree-id3609 . -1) (#("u" 0 1 (fontified t face elixir-atom-face)) . -639) (undo-tree-id3610 . -1) (#("o" 0 1 (fontified t face elixir-atom-face)) . -640) (undo-tree-id3611 . -1) (#("t" 0 1 (fontified t face elixir-atom-face)) . -641) (undo-tree-id3612 . -1) (#("a" 0 1 (fontified t face elixir-atom-face)) . -642) (undo-tree-id3613 . -1) (#("]" 0 1 (fontified t)) . -643) (undo-tree-id3614 . -1) (undo-tree-id3615 . 1) (undo-tree-id3616 . -1) (#(" " 0 1 (fontified t)) . -644) (undo-tree-id3617 . -1) 645) nil (25413 42143 331383 500000) 0 nil])
([nil nil ((636 . 637)) nil (25413 42143 331340 348000) 0 nil])
([nil nil ((#("]" 0 1 (fontified nil)) . -637) (637 . 638) (#("]" 0 1 (fontified nil)) . -637) (637 . 638) (636 . 638) (t 25413 42143 351781 341000)) nil (25413 42359 543802 678000) 0 nil])
([nil nil ((637 . 643)) nil (25413 42359 543794 663000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 423) (undo-tree-id3631 . -1) (undo-tree-id3632 . -1) (undo-tree-id3633 . -1) (undo-tree-id3634 . -1) (undo-tree-id3635 . -1) (t 25413 42359 607449 890000)) nil (25413 42660 523745 239000) 0 nil])
([nil nil ((#("    
" 0 4 (fontified t) 4 5 (fontified t)) . 423) (undo-tree-id3624 . -5) (undo-tree-id3625 . -5) (undo-tree-id3626 . -5) (undo-tree-id3627 . -5) (undo-tree-id3628 . -5) (undo-tree-id3629 . -5) (undo-tree-id3630 . -5)) nil (25413 42660 523736 673000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 502) (undo-tree-id3620 . -1) (undo-tree-id3621 . -1) (undo-tree-id3622 . -1) (undo-tree-id3623 . -1)) nil (25413 42660 523723 819000) 0 nil])
([nil nil ((#("
#    |> Enum.map(fn y -> y[:Quota] |> Map.new(fn {k,v} -> {k |> String.to_atom(),v}  end)  end)
" 0 1 (fontified t) 1 2 (fontified t face font-lock-comment-delimiter-face) 2 6 (fontified t face font-lock-comment-delimiter-face) 6 9 (fontified t face font-lock-comment-face) 9 13 (fontified t face font-lock-comment-face) 13 18 (fontified t face font-lock-comment-face) 18 20 (fontified t face font-lock-comment-face) 20 28 (fontified t face font-lock-comment-face) 28 34 (fontified t face font-lock-comment-face) 34 39 (fontified t face font-lock-comment-face) 39 42 (fontified t face font-lock-comment-face) 42 47 (fontified t face font-lock-comment-face) 47 49 (fontified t face font-lock-comment-face) 49 65 (fontified t face font-lock-comment-face) 65 71 (fontified t face font-lock-comment-face) 71 86 (fontified t face font-lock-comment-face) 86 89 (fontified t face font-lock-comment-face) 89 92 (fontified t face font-lock-comment-face) 92 95 (fontified t face font-lock-comment-face) 95 96 (rear-nonsticky t fontified t face font-lock-comment-face) 96 97 (fontified t face font-lock-comment-face)) . -502) (undo-tree-id3640 . -97) (undo-tree-id3641 . -97) (undo-tree-id3642 . -97) (undo-tree-id3643 . -97) (undo-tree-id3644 . -1) (undo-tree-id3645 . -1) (undo-tree-id3646 . -6) (undo-tree-id3647 . -97) 599 (t 25413 42660 556486 269000)) nil (25413 42714 677311 801000) 0 nil])
([nil nil ((#("    
" 0 4 (fontified t) 4 5 (rear-nonsticky t fontified t)) . 502) (undo-tree-id3637 . -5) (undo-tree-id3638 . -5) (undo-tree-id3639 . -5)) nil (25413 42714 677302 63000) 0 nil])
([nil nil ((1034 . 1038) (#("    " 0 4 (fontified nil)) . 1033) (1033 . 1037) (1033 . 1034)) nil (25413 42714 677297 53000) 0 nil])
([nil nil ((1034 . 1038) (#("    " 0 4 (fontified nil)) . 1033) (1033 . 1037) (1033 . 1034)) nil (25413 42714 677294 879000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1226 . 1227) (nil fontified nil 1226 . 1227) (nil fontified nil 1225 . 1226) (nil fontified nil 1224 . 1225) (nil fontified nil 1216 . 1224) (nil fontified nil 1214 . 1216) (nil fontified nil 1207 . 1214) (nil fontified nil 1206 . 1207) (nil fontified nil 1205 . 1206) (nil fontified nil 1202 . 1205) (nil fontified nil 1199 . 1202) (nil fontified nil 1196 . 1199) (nil fontified nil 1181 . 1196) (nil fontified nil 1175 . 1181) (nil fontified nil 1159 . 1175) (nil fontified nil 1157 . 1159) (nil fontified nil 1152 . 1157) (nil fontified nil 1149 . 1152) (nil fontified nil 1146 . 1149) (nil fontified nil 1145 . 1146) (nil fontified nil 1144 . 1145) (nil fontified nil 1138 . 1144) (nil fontified nil 1137 . 1138) (nil fontified nil 1130 . 1137) (nil fontified nil 1128 . 1130) (nil fontified nil 1123 . 1128) (nil fontified nil 1119 . 1123) (nil fontified nil 1116 . 1119) (nil fontified nil 1112 . 1116) (nil fontified nil 1111 . 1112) (nil fontified nil 1110 . 1111) (nil fontified nil 1107 . 1110) (nil fontified nil 1105 . 1107) (nil fontified nil 1099 . 1105) (nil fontified nil 1087 . 1099) (nil fontified nil 1084 . 1087) (nil fontified nil 1073 . 1084) (nil fontified nil 1071 . 1073) (nil fontified nil 1063 . 1071) (nil fontified nil 1059 . 1063) (nil fontified nil 1056 . 1059) (nil fontified nil 1052 . 1056) (nil fontified nil 1051 . 1052) (nil fontified nil 1046 . 1051) (nil fontified nil 1042 . 1046) (nil fontified nil 1038 . 1042) (1038 . 1227)) nil (25413 42714 677291 262000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1034) (undo-tree-id3636 . -1) (#(" " 0 1 (fontified t)) . 1034) (#(" " 0 1 (fontified t)) . 1034) (#(" " 0 1 (fontified t)) . 1034)) nil (25413 42714 677279 681000) 0 nil])
([nil nil ((1039 . 1040)) nil (25413 42714 677262 328000) 0 nil])
([nil nil ((1097 . 1104)) nil (25413 42714 677260 985000) 0 nil])
([nil nil ((1143 . 1150)) nil (25413 42714 677259 302000) 0 nil])
([nil nil ((1249 . 1250)) nil (25413 42714 677258 70000) 0 nil])
([nil nil ((1318 . 1319)) nil (25413 42714 677256 327000) 0 nil])
([nil nil ((1382 . 1383)) nil (25413 42714 677250 295000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -726) (undo-tree-id3648 . -1) 727 (t 25413 42714 717386 850000)) nil (25413 42802 10921 856000) 0 nil])
([nil nil ((#("    
" 0 4 (fontified t) 4 5 (fontified t)) . 617) (undo-tree-id3667 . -5) (undo-tree-id3668 . -5) (undo-tree-id3669 . -5) (t 25413 42802 42836 82000)) nil (25413 42848 186905 887000) 0 nil])
([nil nil ((#("    
" 0 2 (fontified t) 2 4 (fontified t) 4 5 (fontified t)) . 617) (undo-tree-id3661 . -5) (undo-tree-id3662 . -5) (undo-tree-id3663 . -5) (undo-tree-id3664 . -5) (undo-tree-id3665 . -5) (undo-tree-id3666 . -5)) nil (25413 42848 186901 659000) 0 nil])
([nil nil ((#("#   |> Enum.map(fn x -> x[:Quota] |> Map.new(fn {k,v} -> {k |> String.to_atom(),v}  end) end)" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 4 (fontified t face font-lock-comment-delimiter-face) 4 7 (fontified t face font-lock-comment-face) 7 11 (fontified t face font-lock-comment-face) 11 16 (fontified t face font-lock-comment-face) 16 18 (fontified t face font-lock-comment-face) 18 26 (fontified t face font-lock-comment-face) 26 32 (fontified t face font-lock-comment-face) 32 37 (fontified t face font-lock-comment-face) 37 40 (fontified t face font-lock-comment-face) 40 45 (fontified t face font-lock-comment-face) 45 47 (fontified t face font-lock-comment-face) 47 63 (fontified t face font-lock-comment-face) 63 69 (fontified t face font-lock-comment-face) 69 84 (fontified t face font-lock-comment-face) 84 87 (fontified t face font-lock-comment-face) 87 89 (fontified t face font-lock-comment-face) 89 92 (fontified t face font-lock-comment-face) 92 93 (rear-nonsticky t fontified t face font-lock-comment-face)) . -622) (undo-tree-id3655 . -93) (undo-tree-id3656 . -93) (undo-tree-id3657 . 1) (undo-tree-id3658 . -93) (undo-tree-id3659 . 78) (undo-tree-id3660 . -16) 715) nil (25413 42848 186894 987000) 0 nil])
([nil nil ((#("    
" 0 4 (fontified t) 4 5 (fontified t)) . 617) (undo-tree-id3650 . -5) (undo-tree-id3651 . -5) (undo-tree-id3652 . -5) (undo-tree-id3653 . -5) (undo-tree-id3654 . -5)) nil (25413 42848 186883 525000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -688) (undo-tree-id3649 . -1) 689) nil (25413 42848 186870 912000) 0 nil])
([nil nil ((#("    
    
#    qcmap = qm
#    |> Enum.map(fn y -> y end)
#    |> IO.inspect()
#    |> Enum.filter(fn x -> Map.keys(x) == [:ClientsQuota] end)
#    |> Enum.map(fn x -> x[:ClientsQuota] |> Map.new(fn {k,v} -> {k |> String.to_atom(),v}  end) end)

" 0 4 (fontified t) 4 5 (fontified t) 5 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t face font-lock-comment-delimiter-face) 11 12 (fontified t face font-lock-comment-delimiter-face) 12 15 (fontified t face font-lock-comment-delimiter-face) 15 20 (fontified t face font-lock-comment-face) 20 25 (fontified t face font-lock-comment-face) 25 26 (fontified t face font-lock-comment-face) 26 27 (fontified t face font-lock-comment-delimiter-face) 27 31 (fontified t face font-lock-comment-delimiter-face) 31 34 (fontified t face font-lock-comment-face) 34 38 (fontified t face font-lock-comment-face) 38 42 (fontified t face font-lock-comment-face) 42 43 (fontified t face font-lock-comment-face) 43 44 (fontified t face font-lock-comment-face) 44 45 (fontified t face font-lock-comment-face) 45 46 (fontified t face font-lock-comment-face) 46 53 (fontified t face font-lock-comment-face) 53 56 (fontified t face font-lock-comment-face) 56 57 (rear-nonsticky t fontified t face font-lock-comment-face) 57 58 (fontified t face font-lock-comment-face) 58 59 (fontified t face font-lock-comment-delimiter-face) 59 63 (fontified t face font-lock-comment-delimiter-face) 63 66 (fontified t face font-lock-comment-face) 66 68 (fontified t face font-lock-comment-face) 68 69 (fontified t face font-lock-comment-face) 69 74 (fontified t face font-lock-comment-face) 74 76 (face font-lock-comment-face fontified t) 76 77 (face font-lock-comment-face fontified t) 77 78 (face font-lock-comment-face fontified t) 78 79 (face font-lock-comment-face fontified t) 79 80 (fontified t face font-lock-comment-delimiter-face) 80 81 (fontified t face font-lock-comment-delimiter-face) 81 83 (fontified t face font-lock-comment-delimiter-face) 83 84 (fontified t face font-lock-comment-delimiter-face) 84 85 (fontified t face font-lock-comment-face) 85 87 (fontified t face font-lock-comment-face) 87 90 (fontified t face font-lock-comment-face) 90 91 (fontified t face font-lock-comment-face) 91 96 (fontified t face font-lock-comment-face) 96 99 (fontified t face font-lock-comment-face) 99 100 (fontified t face font-lock-comment-face) 100 101 (fontified t face font-lock-comment-face) 101 103 (fontified t face font-lock-comment-face) 103 107 (fontified t face font-lock-comment-face) 107 108 (fontified t face font-lock-comment-face) 108 110 (fontified t face font-lock-comment-face) 110 121 (fontified t face font-lock-comment-face) 121 122 (fontified t face font-lock-comment-face) 122 123 (fontified t face font-lock-comment-face) 123 124 (fontified t face font-lock-comment-face) 124 128 (fontified t face font-lock-comment-face) 128 136 (fontified t face font-lock-comment-face) 136 138 (fontified t face font-lock-comment-face) 138 140 (fontified t face font-lock-comment-face) 140 141 (fontified t face font-lock-comment-face) 141 142 (fontified t face font-lock-comment-face) 142 143 (fontified t face font-lock-comment-face) 143 144 (fontified t face font-lock-comment-delimiter-face) 144 148 (fontified t face font-lock-comment-delimiter-face) 148 151 (fontified t face font-lock-comment-face) 151 155 (fontified t face font-lock-comment-face) 155 160 (fontified t face font-lock-comment-face) 160 161 (fontified t face font-lock-comment-face) 161 162 (fontified t face font-lock-comment-face) 162 170 (fontified t face font-lock-comment-face) 170 172 (fontified t face font-lock-comment-face) 172 183 (fontified t face font-lock-comment-face) 183 188 (fontified t face font-lock-comment-face) 188 191 (fontified t face font-lock-comment-face) 191 196 (fontified t face font-lock-comment-face) 196 198 (fontified t face font-lock-comment-face) 198 201 (fontified t face font-lock-comment-face) 201 209 (fontified t face font-lock-comment-face) 209 214 (fontified t face font-lock-comment-face) 214 219 (fontified t face font-lock-comment-face) 219 220 (fontified t face font-lock-comment-face) 220 224 (fontified t face font-lock-comment-face) 224 235 (fontified t face font-lock-comment-face) 235 238 (fontified t face font-lock-comment-face) 238 240 (fontified t face font-lock-comment-face) 240 243 (fontified t face font-lock-comment-face) 243 244 (rear-nonsticky t fontified t face font-lock-comment-face) 244 245 (fontified t face font-lock-comment-face) 245 246 (fontified t)) . -1129) (undo-tree-id3700 . -246) (undo-tree-id3701 . -68) (undo-tree-id3702 . -59) (undo-tree-id3703 . -26) (undo-tree-id3704 . -26) (undo-tree-id3705 . -10) (undo-tree-id3706 . -10) (undo-tree-id3707 . -5) (undo-tree-id3708 . -5) (undo-tree-id3709 . -246) (undo-tree-id3710 . -246) (undo-tree-id3711 . -245) (undo-tree-id3712 . -245) (undo-tree-id3713 . -246) (undo-tree-id3714 . -58) (undo-tree-id3715 . -58) (undo-tree-id3716 . -79) (undo-tree-id3717 . -79) (undo-tree-id3718 . -143) (undo-tree-id3719 . -143) (undo-tree-id3720 . -246) 1375 (t 25413 42848 223601 254000)) nil (25413 42925 985724 626000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1128) (undo-tree-id3696 . -1) (undo-tree-id3697 . -1) (undo-tree-id3698 . -1) (undo-tree-id3699 . -1)) nil (25413 42925 985458 94000) 0 nil])
([nil nil ((#("        
" 0 4 (fontified t) 4 8 (fontified t) 8 9 (fontified t)) . 1128) (undo-tree-id3693 . -9) (undo-tree-id3694 . -9) (undo-tree-id3695 . -9)) nil (25413 42925 985453 245000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1228) (undo-tree-id3690 . -1) (undo-tree-id3691 . -1) (undo-tree-id3692 . -1)) nil (25413 42925 985449 658000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1545) (undo-tree-id3686 . -1) (undo-tree-id3687 . -1) (undo-tree-id3688 . -1) (undo-tree-id3689 . -1)) nil (25413 42925 985446 21000) 0 nil])
([nil nil ((#("    
" 0 4 (fontified t) 4 5 (rear-nonsticky t fontified t)) . 1545) (undo-tree-id3678 . -5) (undo-tree-id3679 . -5) (undo-tree-id3680 . -5) (undo-tree-id3681 . -5) (undo-tree-id3682 . -5) (undo-tree-id3683 . -5) (undo-tree-id3684 . -5) (undo-tree-id3685 . -5)) nil (25413 42925 985440 802000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 617) (undo-tree-id3674 . -1) (undo-tree-id3675 . -1) (undo-tree-id3676 . -1) (undo-tree-id3677 . -1)) nil (25413 42925 985433 137000) 0 nil])
([nil nil ((#("    
" 0 4 (fontified t) 4 5 (fontified t)) . 1127) (undo-tree-id3670 . -5) (undo-tree-id3671 . -5) (undo-tree-id3672 . -5) (undo-tree-id3673 . -5)) nil (25413 42925 985419 742000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 182) (undo-tree-id3730 . -1) (undo-tree-id3731 . -1) (undo-tree-id3732 . -1) (undo-tree-id3733 . -1) (t 25413 42926 24888 710000)) nil (25413 43050 377405 384000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 69) (undo-tree-id3726 . -1) (undo-tree-id3727 . -1) (undo-tree-id3728 . -1) (undo-tree-id3729 . -1)) nil (25413 43050 377400 125000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 283) (undo-tree-id3721 . -1) (undo-tree-id3722 . -1) (undo-tree-id3723 . -1) (undo-tree-id3724 . -1) (undo-tree-id3725 . -1)) nil (25413 43050 377389 805000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -704) (undo-tree-id3738 . -1) 705 (t 25413 43050 402943 268000)) nil (25413 43109 754633 161000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -713) (undo-tree-id3737 . -1) 714) nil (25413 43109 754630 446000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -741) (undo-tree-id3736 . -1) 742) nil (25413 43109 754627 851000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -823) (undo-tree-id3735 . -1) 824) nil (25413 43109 754625 447000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -860) (undo-tree-id3734 . -1) 861) nil (25413 43109 754618 614000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -1224) (undo-tree-id3743 . -1) 1225 (t 25413 43109 779922 727000)) nil (25413 43177 935968 91000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -1233) (undo-tree-id3742 . -1) 1234) nil (25413 43177 935965 747000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -1261) (undo-tree-id3741 . -1) 1262) nil (25413 43177 935962 892000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -1344) (undo-tree-id3740 . -1) 1345) nil (25413 43177 935959 245000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -1388) (undo-tree-id3739 . -1) 1389) nil (25413 43177 935951 671000) 0 nil])
([nil nil ((1534 . 1535) (t 25413 43177 997047 86000)) nil (25413 43184 352320 757000) 0 nil])
([nil nil ((1574 . 1575) (t 25413 43184 389152 397000)) nil (25413 43198 908859 156000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -1534) (undo-tree-id3760 . -1) 1535 (t 25413 43198 933391 983000)) nil (25413 43248 91782 502000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -1573) (undo-tree-id3759 . -1) 1574) nil (25413 43248 91777 242000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -1651) (undo-tree-id3758 . -1) 1652) nil (25413 43248 91775 68000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -1660) (undo-tree-id3757 . -1) 1661) nil (25413 43248 91773 225000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -1682) (undo-tree-id3756 . -1) 1683) nil (25413 43248 91769 848000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1572) (undo-tree-id3753 . -1) (undo-tree-id3754 . -1) (undo-tree-id3755 . -1)) nil (25413 43259 114938 47000) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil nil ((#("
" 0 1 (fontified t)) . 1640)) ((1640 . 1641)) (25413 43259 451475 49000) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil nil ((#("    
" 0 4 (fontified t) 4 5 (fontified t)) . 1640)) ((1640 . 1645)) (25413 43259 618494 131000) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil current (("    
" . -3501) (undo-tree-id3761 . -4) (#("

    
" 0 1 (fontified t) 1 6 (fontified t) 6 7 (fontified t)) . -2068) (undo-tree-id3762 . -1) (undo-tree-id3763 . -1) (undo-tree-id3764 . -2) (undo-tree-id3765 . -2) (undo-tree-id3766 . -7) (undo-tree-id3767 . -7) (#("    
        
    
" 0 4 (fontified t) 4 5 (fontified t) 5 9 (fontified t) 9 13 (fontified t) 13 14 (fontified t) 14 18 (fontified t) 18 19 (fontified t)) . -1940) (undo-tree-id3768 . -5) (undo-tree-id3769 . -5) (undo-tree-id3770 . -14) (undo-tree-id3771 . -14) (undo-tree-id3772 . -19) (undo-tree-id3773 . -19) (#("  def parse_response(cnx,data,view)do
   Phoenix.View.render_many(data,view,\"show_many.json\", as: :data )
     cnx
     |>put_view(view)
     |> render(\"show_many.json\", credits: data)
    end
  
  
  
" 0 2 (fontified t) 2 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 19 (fontified t face font-lock-function-name-face) 19 20 (rear-nonsticky t fontified t face font-lock-function-name-face) 20 31 (fontified t) 31 34 (fontified t) 34 35 (fontified t) 35 37 (fontified t face font-lock-keyword-face) 37 38 (fontified t) 38 41 (fontified t) 41 42 (fontified t face font-lock-type-face) 42 48 (fontified t face font-lock-type-face) 48 53 (fontified t face font-lock-type-face) 53 65 (fontified t) 65 67 (fontified t) 67 72 (fontified t) 72 73 (fontified t) 73 76 (fontified t) 76 77 (fontified t syntax-table (15) face font-lock-string-face) 77 87 (fontified t face font-lock-string-face) 87 88 (fontified t face font-lock-string-face) 88 90 (fontified t face font-lock-string-face) 90 91 (fontified t face font-lock-string-face) 91 92 (rear-nonsticky t fontified t syntax-table (15) face font-lock-string-face) 92 94 (fontified t) 94 97 (fontified t face elixir-atom-face) 97 98 (fontified t) 98 99 (fontified t face elixir-atom-face) 99 103 (fontified t face elixir-atom-face) 103 104 (fontified t) 104 105 (fontified t) 105 106 (fontified t) 106 110 (fontified t) 110 111 (fontified t) 111 114 (fontified t) 114 115 (fontified t) 115 119 (fontified t) 119 120 (fontified t) 120 122 (fontified t) 122 125 (fontified t) 125 126 (fontified t) 126 127 (fontified t) 127 128 (fontified t) 128 130 (fontified t) 130 135 (fontified t) 135 136 (fontified t) 136 137 (fontified t) 137 141 (fontified t) 141 142 (fontified t) 142 143 (fontified t) 143 144 (fontified t) 144 145 (fontified t) 145 147 (fontified t) 147 148 (fontified t) 148 149 (fontified t) 149 150 (fontified t) 150 152 (fontified t) 152 153 (syntax-table (15) fontified t face font-lock-string-face) 153 158 (fontified t face font-lock-string-face) 158 163 (fontified t face font-lock-string-face) 163 164 (fontified t face font-lock-string-face) 164 166 (fontified t face font-lock-string-face) 166 167 (fontified t face font-lock-string-face) 167 168 (syntax-table (15) fontified t face font-lock-string-face) 168 169 (fontified t) 169 170 (fontified t) 170 177 (fontified t face elixir-atom-face) 177 178 (fontified t face elixir-atom-face) 178 179 (fontified t) 179 182 (fontified t) 182 183 (rear-nonsticky t fontified t) 183 184 (rear-nonsticky t fontified t) 184 185 (fontified t) 185 189 (fontified t) 189 192 (fontified t face font-lock-keyword-face) 192 193 (fontified t) 193 194 (fontified t) 194 195 (rear-nonsticky t fontified t) 195 196 (fontified t) 196 198 (fontified t) 198 199 (fontified t) 199 201 (fontified t) 201 202 (fontified t)) . -1780) (undo-tree-id3774 . -106) (undo-tree-id3775 . -185) (undo-tree-id3776 . -185) (undo-tree-id3777 . -137) (undo-tree-id3778 . -137) (undo-tree-id3779 . -115) (undo-tree-id3780 . -115) (undo-tree-id3781 . -106) (undo-tree-id3782 . -106) (undo-tree-id3783 . -38) (undo-tree-id3784 . -38) (undo-tree-id3785 . -199) (undo-tree-id3786 . -199) (undo-tree-id3787 . -196) (undo-tree-id3788 . -196) (undo-tree-id3789 . -193) (undo-tree-id3790 . -193) (undo-tree-id3791 . -202) (undo-tree-id3792 . -202) (undo-tree-id3793 . -38) (undo-tree-id3794 . -106) (undo-tree-id3795 . -38) (undo-tree-id3796 . -102) (undo-tree-id3797 . -102) (undo-tree-id3798 . -102) (undo-tree-id3799 . -102) (undo-tree-id3800 . -102) (1584 . 1779) (1497 . 1577) (#("#    parse_response(conn,resp_q_data ++ resp_cq_data,CabbotWeb.CreditsView)
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 5 (fontified t face font-lock-comment-delimiter-face) 5 19 (fontified t face font-lock-comment-face) 19 25 (fontified t face font-lock-comment-face) 25 30 (fontified t face font-lock-comment-face) 30 47 (fontified t face font-lock-comment-face) 47 53 (fontified t face font-lock-comment-face) 53 60 (fontified t face font-lock-comment-face) 60 62 (fontified t face font-lock-comment-face) 62 63 (fontified t face font-lock-comment-face) 63 70 (fontified t face font-lock-comment-face) 70 73 (fontified t face font-lock-comment-face) 73 74 (rear-nonsticky t fontified t face font-lock-comment-face) 74 75 (fontified t face font-lock-comment-face) 75 76 (rear-nonsticky t fontified t face font-lock-comment-face)) . -1497) (undo-tree-id3801 . -76) (undo-tree-id3802 . -76) (undo-tree-id3803 . -76) (undo-tree-id3804 . -76) (undo-tree-id3805 . -76) (undo-tree-id3806 . -76) (1309 . 1391) (#("    |> put_resp_header(\"location\", Routes.quota_path(conn, :index, resp_cq_data ))
" 0 4 (fontified t) 4 6 (fontified t) 6 9 (fontified t) 9 12 (fontified t) 12 13 (fontified t) 13 17 (fontified t) 17 23 (fontified t) 23 24 (fontified t syntax-table (15) face font-lock-string-face) 24 25 (fontified t face font-lock-string-face) 25 27 (fontified t face font-lock-string-face) 27 32 (fontified t face font-lock-string-face) 32 33 (fontified t syntax-table (15) face font-lock-string-face) 33 35 (fontified t) 35 36 (fontified t face font-lock-type-face) 36 41 (fontified t face font-lock-type-face) 41 46 (fontified t) 46 47 (fontified t) 47 53 (fontified t) 53 57 (fontified t) 57 58 (fontified t) 58 59 (fontified t) 59 64 (fontified t face elixir-atom-face) 64 65 (fontified t face elixir-atom-face) 65 67 (fontified t) 67 73 (fontified t) 73 76 (fontified t) 76 78 (fontified t) 78 79 (rear-nonsticky t fontified t) 79 80 (fontified t) 80 82 (fontified t) 82 83 (fontified t)) . -1309) (#("    qcmap = qm
    |> Enum.filter(fn z -> z |> Map.keys() == [:ClientsQuota] end)
    |> Enum.map(fn y -> y[:ClientsQuota] |> Map.new(fn {k,v} -> {k |> String.to_atom(),v}  end)  end)
    |> IO.inspect()
    resp_cq_data = Cabbot.Repo.insert_all(ClientsQuota,qcmap, returning: true )
    |> elem(1)
    
    
" 0 4 (fontified t) 4 9 (fontified t face font-lock-variable-name-face) 9 14 (fontified t) 14 15 (fontified t) 15 19 (fontified t) 19 22 (fontified t) 22 26 (fontified t face font-lock-type-face) 26 34 (fontified t) 34 36 (fontified t face font-lock-keyword-face) 36 47 (fontified t) 47 50 (fontified t face font-lock-type-face) 50 62 (fontified t) 62 75 (fontified t face elixir-atom-face) 75 77 (fontified t) 77 80 (fontified t face font-lock-keyword-face) 80 81 (fontified t) 81 82 (fontified t) 82 86 (fontified t) 86 89 (fontified t) 89 93 (fontified t face font-lock-type-face) 93 98 (fontified t) 98 99 (fontified t face font-lock-keyword-face) 99 100 (fontified t face font-lock-keyword-face) 100 107 (fontified t) 107 108 (fontified t) 108 121 (fontified t face elixir-atom-face) 121 122 (fontified t) 122 123 (fontified t) 123 126 (fontified t) 126 129 (fontified t face font-lock-type-face) 129 134 (fontified t) 134 136 (fontified t face font-lock-keyword-face) 136 152 (fontified t) 152 158 (fontified t face font-lock-type-face) 158 173 (fontified t) 173 176 (fontified t face font-lock-keyword-face) 176 179 (fontified t) 179 182 (fontified t face font-lock-keyword-face) 182 183 (fontified t) 183 184 (fontified t) 184 191 (fontified t) 191 193 (fontified t face font-lock-type-face) 193 194 (fontified t) 194 201 (fontified t) 201 202 (fontified t) 202 203 (fontified t) 203 204 (rear-nonsticky t fontified t) 204 208 (fontified t) 208 215 (fontified t face font-lock-variable-name-face) 215 217 (fontified t face font-lock-variable-name-face) 217 220 (fontified t face font-lock-variable-name-face) 220 223 (fontified t) 223 229 (fontified t face font-lock-type-face) 229 230 (fontified t face font-lock-type-face) 230 234 (fontified t face font-lock-type-face) 234 245 (fontified t) 245 246 (fontified t) 246 250 (fontified t face font-lock-type-face) 250 252 (fontified t face font-lock-type-face) 252 253 (fontified t face font-lock-type-face) 253 254 (fontified t face font-lock-type-face) 254 256 (fontified t face font-lock-type-face) 256 258 (fontified t face font-lock-type-face) 258 259 (fontified t) 259 265 (fontified t) 265 266 (fontified t) 266 268 (fontified t face elixir-atom-face) 268 271 (fontified t face elixir-atom-face) 271 275 (fontified t face elixir-atom-face) 275 276 (fontified t face elixir-atom-face) 276 277 (fontified t) 277 281 (fontified t face elixir-atom-face) 281 282 (fontified t) 282 283 (fontified t) 283 284 (fontified t) 284 285 (fontified t) 285 291 (fontified t) 291 292 (fontified t) 292 295 (fontified t) 295 297 (fontified t) 297 298 (fontified t) 298 299 (fontified t) 299 303 (fontified t) 303 304 (fontified t) 304 308 (fontified t) 308 309 (fontified t)) . -1272) (undo-tree-id3807 . -204) (undo-tree-id3808 . -204) (undo-tree-id3809 . -204) (937 . 1271) (765 . 846) (#("    |> put_resp_header(\"location\", Routes.quota_path(conn, :index, resp_q_data ))
" 0 1 (fontified t) 1 4 (fontified t) 4 6 (fontified t) 6 9 (fontified t) 9 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 17 (fontified t) 17 23 (fontified t) 23 24 (fontified t syntax-table (15) face font-lock-string-face) 24 25 (fontified t face font-lock-string-face) 25 27 (fontified t face font-lock-string-face) 27 32 (fontified t face font-lock-string-face) 32 33 (fontified t syntax-table (15) face font-lock-string-face) 33 35 (fontified t) 35 36 (fontified t face font-lock-type-face) 36 40 (fontified t face font-lock-type-face) 40 41 (fontified t face font-lock-type-face) 41 42 (fontified t) 42 43 (fontified t) 43 47 (fontified t) 47 53 (fontified t) 53 57 (fontified t) 57 58 (fontified t) 58 59 (fontified t) 59 65 (fontified t face elixir-atom-face) 65 67 (fontified t) 67 77 (fontified t) 77 78 (rear-nonsticky t fontified t) 78 79 (fontified t) 79 80 (fontified t) 80 82 (fontified t)) . -765) (339 . 728) (#("    qm = credits_params
    |> Enum.map(&parse_params(&1))
    |> List.flatten()
    
    qmap = qm
    |> Enum.filter(fn z -> z |> Map.keys() == [:Quota] end)
    |> Enum.map(fn y -> y[:Quota] |> Map.new(fn {k,v} -> {k |> String.to_atom(),v}  end)  end)
    |> IO.inspect()
    resp_q_data = Cabbot.Repo.insert_all(Quota,qmap, returning: true)
    |> elem(1)
    
" 0 4 (fontified t) 4 6 (fontified t face font-lock-variable-name-face) 6 23 (fontified t) 23 24 (fontified t) 24 31 (fontified t) 31 35 (fontified t face font-lock-type-face) 35 39 (fontified t) 39 53 (fontified t) 53 56 (fontified t) 56 57 (fontified t) 57 58 (fontified t) 58 59 (fontified t) 59 66 (fontified t) 66 70 (fontified t face font-lock-type-face) 70 78 (fontified t) 78 79 (fontified t) 79 80 (fontified t) 80 81 (fontified t) 81 85 (fontified t) 85 86 (fontified t) 86 90 (fontified t) 90 94 (fontified t face font-lock-variable-name-face) 94 99 (fontified t) 99 100 (fontified t) 100 104 (fontified t) 104 107 (fontified t) 107 111 (fontified t face font-lock-type-face) 111 119 (fontified t) 119 121 (fontified t face font-lock-keyword-face) 121 132 (fontified t) 132 135 (fontified t face font-lock-type-face) 135 147 (fontified t) 147 153 (fontified t face elixir-atom-face) 153 155 (fontified t) 155 158 (fontified t face font-lock-keyword-face) 158 159 (fontified t) 159 160 (fontified t) 160 164 (fontified t) 164 167 (fontified t) 167 171 (fontified t face font-lock-type-face) 171 176 (fontified t) 176 178 (fontified t face font-lock-keyword-face) 178 185 (fontified t) 185 186 (fontified t) 186 192 (fontified t face elixir-atom-face) 192 193 (fontified t) 193 194 (fontified t) 194 197 (fontified t) 197 200 (fontified t face font-lock-type-face) 200 205 (fontified t) 205 207 (fontified t face font-lock-keyword-face) 207 223 (fontified t) 223 229 (fontified t face font-lock-type-face) 229 244 (fontified t) 244 247 (fontified t face font-lock-keyword-face) 247 250 (fontified t) 250 253 (fontified t face font-lock-keyword-face) 253 254 (fontified t) 254 255 (fontified t) 255 260 (fontified t) 260 262 (fontified t) 262 264 (fontified t face font-lock-type-face) 264 272 (fontified t) 272 273 (fontified t) 273 274 (fontified t) 274 275 (fontified t) 275 276 (fontified t) 276 279 (fontified t) 279 290 (fontified t face font-lock-variable-name-face) 290 293 (fontified t) 293 299 (fontified t face font-lock-type-face) 299 300 (fontified t face font-lock-type-face) 300 304 (fontified t face font-lock-type-face) 304 315 (fontified t) 315 316 (fontified t) 316 320 (fontified t face font-lock-type-face) 320 321 (fontified t face font-lock-type-face) 321 323 (fontified t) 323 328 (fontified t) 328 338 (fontified t face elixir-atom-face) 338 339 (fontified t) 339 343 (fontified t face elixir-atom-face) 343 344 (fontified t) 344 345 (fontified t) 345 349 (fontified t) 349 356 (fontified t) 356 359 (fontified t) 359 360 (fontified t) 360 364 (fontified t) 364 365 (fontified t)) . -339) (undo-tree-id3810 . -87) (undo-tree-id3811 . -81) (undo-tree-id3812 . -275) (undo-tree-id3813 . -81) (undo-tree-id3814 . -100) (undo-tree-id3815 . -104) (undo-tree-id3816 . -100) (undo-tree-id3817 . -164) (undo-tree-id3818 . -160) (undo-tree-id3819 . -160) (undo-tree-id3820 . -86) (undo-tree-id3821 . -275) (t 25413 43263 198450 180000)) nil (25413 43268 120909 919000) 0 nil] [nil nil ((#("     cnx" 0 4 (fontified t) 4 5 (fontified t) 5 8 (fontified t)) . 1640) (undo-tree-id3744 . -8)) ((1640 . 1648)) (25413 43248 91747 396000) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
nil
nil
