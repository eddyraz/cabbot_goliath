(undo-tree-save-format-version . 1)
"fa7f479c0d8852092f8095237e774b03bea8bbf3"
[nil nil nil nil (25409 54927 413381 311000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]
([nil nil ((#("Q" 0 1 (fontified t face font-lock-type-face)) . -21) (undo-tree-id6 . -1) (#("u" 0 1 (fontified t face font-lock-type-face)) . -22) (undo-tree-id7 . -1) (#("o" 0 1 (fontified t face font-lock-type-face)) . -23) (undo-tree-id8 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -24) (undo-tree-id9 . -1) (#("a" 0 1 (fontified t face font-lock-type-face)) . -25) (undo-tree-id10 . -1) 26 (t 25409 54889 794460 183000)) nil (25409 54927 413379 197000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((21 . 28)) nil (25409 54927 413373 617000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((#("Q" 0 1 (fontified t face font-lock-type-face)) . -77) (undo-tree-id1 . -1) (#("u" 0 1 (fontified t face font-lock-type-face)) . -78) (undo-tree-id2 . -1) (#("o" 0 1 (fontified t face font-lock-type-face)) . -79) (undo-tree-id3 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -80) (undo-tree-id4 . -1) (#("a" 0 1 (fontified t face font-lock-type-face)) . -81) (undo-tree-id5 . -1) 82) nil (25409 54927 413371 503000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((77 . 83)) nil (25409 54927 413363 958000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((#("s" 0 1 (fontified t face font-lock-type-face)) . -27) (undo-tree-id0 . -1) 28) nil (25409 54927 413360 161000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((#("q" 0 1 (fontified t face font-lock-string-face)) . -322) (undo-tree-id18 . -1) (#("u" 0 1 (fontified t face font-lock-string-face)) . -323) (undo-tree-id19 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -324) (undo-tree-id20 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -325) (undo-tree-id21 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -326) (undo-tree-id22 . -1) 327 (t 25409 54927 422689 729000)) nil (25410 8063 41822 625000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((322 . 329)) nil (25410 8063 41818 427000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((#("q" 0 1 (fontified t face font-lock-string-face)) . -178) (undo-tree-id13 . -1) (#("u" 0 1 (fontified t face font-lock-string-face)) . -179) (undo-tree-id14 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -180) (undo-tree-id15 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -181) (undo-tree-id16 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -182) (undo-tree-id17 . -1) 183) nil (25410 8063 41816 965000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((178 . 185)) nil (25410 8063 41812 65000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((193 . 198)) nil (25410 8063 41811 214000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((198 . 203)) nil (25410 8063 41810 362000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((199 . 201)) nil (25410 8063 41809 420000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((#("data" 0 4 (fontified t)) . 201) (undo-tree-id11 . -4) (undo-tree-id12 . -4) 205) nil (25410 8063 41807 767000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((nil rear-nonsticky nil 203 . 204) (nil fontified nil 200 . 204) (200 . 204)) nil (25410 8063 41795 13000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((204 . 206)) nil (25410 8063 41793 691000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((nil rear-nonsticky nil 250 . 251) (nil fontified nil 250 . 251) (nil fontified nil 249 . 250) (nil fontified nil 237 . 249) (nil fontified nil 236 . 237) (nil fontified nil 234 . 236) (nil fontified nil 225 . 234) (nil fontified nil 206 . 225) (206 . 251)) nil (25410 8063 41792 58000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((225 . 232)) nil (25410 8063 41789 523000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((397 . 403)) nil (25410 8063 41785 536000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((185 . 191) (t 25410 8063 51352 502000)) nil (25410 8125 424661 33000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((257 . 271)) nil (25410 8125 424658 699000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((#("c" 0 1 (fontified t face font-lock-string-face)) . -186) (undo-tree-id23 . -1) 187) nil (25410 8125 424654 952000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((186 . 187)) nil (25410 8125 424635 455000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((1209 . 1211) (#("  " 0 2 (fontified t)) . 1208) (undo-tree-id24 . -2) (1208 . 1211) (#("  " 0 2 (fontified t)) . 1207) (undo-tree-id25 . -2) (1207 . 1210) (#("  " 0 2 (fontified t)) . 1206) (undo-tree-id26 . -2) (1205 . 1209) (t 25410 8125 459781 50000)) nil (25410 8181 442851 811000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((1209 . 1211) (#("  " 0 2 (fontified nil)) . 1208) (1208 . 1210) (1208 . 1209)) nil (25410 8181 442837 945000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((1209 . 1211) (#("  " 0 2 (fontified nil)) . 1208) (1208 . 1210) (1208 . 1209)) nil (25410 8181 442835 560000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((nil rear-nonsticky nil 2409 . 2410) (nil fontified nil 2409 . 2410) (nil fontified nil 2406 . 2409) (nil fontified nil 2398 . 2406) (nil fontified nil 2371 . 2398) (nil fontified nil 2361 . 2371) (nil fontified nil 2359 . 2361) (nil fontified nil 2324 . 2359) (nil fontified nil 2311 . 2324) (nil fontified nil 2266 . 2311) (nil fontified nil 2243 . 2266) (nil fontified nil 2200 . 2243) (nil fontified nil 2179 . 2200) (nil fontified nil 2136 . 2179) (nil fontified nil 2115 . 2136) (nil fontified nil 2071 . 2115) (nil fontified nil 2049 . 2071) (nil fontified nil 2004 . 2049) (nil fontified nil 1981 . 2004) (nil fontified nil 1938 . 1981) (nil fontified nil 1917 . 1938) (nil fontified nil 1881 . 1917) (nil fontified nil 1867 . 1881) (nil fontified nil 1861 . 1867) (nil fontified nil 1835 . 1861) (nil fontified nil 1832 . 1835) (nil fontified nil 1819 . 1832) (nil fontified nil 1785 . 1819) (nil fontified nil 1773 . 1785) (nil fontified nil 1735 . 1773) (nil fontified nil 1719 . 1735) (nil fontified nil 1685 . 1719) (nil fontified nil 1673 . 1685) (nil fontified nil 1637 . 1673) (nil fontified nil 1623 . 1637) (nil fontified nil 1588 . 1623) (nil fontified nil 1575 . 1588) (nil fontified nil 1536 . 1575) (nil fontified nil 1519 . 1536) (nil fontified nil 1487 . 1519) (nil fontified nil 1477 . 1487) (nil fontified nil 1442 . 1477) (nil fontified nil 1429 . 1442) (nil fontified nil 1397 . 1429) (nil fontified nil 1387 . 1397) (nil fontified nil 1353 . 1387) (nil fontified nil 1341 . 1353) (nil fontified nil 1335 . 1341) (nil fontified nil 1314 . 1335) (nil fontified nil 1309 . 1314) (nil fontified nil 1299 . 1309) (nil fontified nil 1283 . 1299) (nil fontified nil 1281 . 1283) (nil fontified nil 1264 . 1281) (nil fontified nil 1250 . 1264) (nil fontified nil 1246 . 1250) (nil fontified nil 1245 . 1246) (nil fontified nil 1227 . 1245) (nil fontified nil 1226 . 1227) (nil fontified nil 1225 . 1226) (nil fontified nil 1219 . 1225) (nil fontified nil 1218 . 1219) (nil fontified nil 1215 . 1218) (nil fontified nil 1211 . 1215) (1211 . 2410)) nil (25410 8181 442831 372000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((1227 . 1235)) nil (25410 8181 442817 266000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((224 . 232) (t 25410 8181 440167 138000)) nil (25410 8210 412387 429000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((203 . 204) (t 25410 8210 448367 732000)) nil (25410 8243 472965 576000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((27 . 28) (t 25410 8243 472596 490000)) nil (25410 10594 989036 605000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((83 . 84)) nil (25410 10594 989031 797000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((#("   # %{data: render_many(clients_quota, ClientsQuotaView, \"credits_clients_quota.json\")}" 0 3 (fontified t) 3 5 (fontified t face font-lock-comment-delimiter-face) 5 6 (fontified t face font-lock-comment-face) 6 7 (fontified t face font-lock-comment-face) 7 10 (fontified t face font-lock-comment-face) 10 11 (rear-nonsticky t fontified t face font-lock-comment-face) 11 12 (fontified t face font-lock-comment-face) 12 13 (fontified t face font-lock-comment-face) 13 40 (fontified t face font-lock-comment-face) 40 47 (fontified t face font-lock-comment-face) 47 56 (fontified t face font-lock-comment-face) 56 58 (fontified t face font-lock-comment-face) 58 59 (syntax-table (15) fontified t face font-lock-comment-face) 59 85 (fontified t face font-lock-comment-face) 85 86 (syntax-table (15) fontified t face font-lock-comment-face) 86 87 (rear-nonsticky t fontified t face font-lock-comment-face) 87 88 (fontified t face font-lock-comment-face)) . 202) (undo-tree-id30 . -88) (undo-tree-id31 . -7) (undo-tree-id32 . -13) (undo-tree-id33 . -3) (undo-tree-id34 . -3) (undo-tree-id35 . -88) (t 25410 10594 998683 742000)) nil (25412 14004 489532 241000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((#("
" 0 1 (fontified t)) . 202) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1)) nil (25412 14004 489515 9000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((201 . 206) (t 25412 14004 499128 268000)) nil (25412 15909 480871 45000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((201 . 206)) nil (25412 15909 480868 781000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((nil rear-nonsticky nil 265 . 266) (nil fontified nil 264 . 266) (nil fontified nil 263 . 264) (nil fontified nil 245 . 263) (nil fontified nil 244 . 245) (nil fontified nil 242 . 244) (nil fontified nil 233 . 242) (nil fontified nil 213 . 233) (nil fontified nil 208 . 213) (nil fontified nil 206 . 208) (206 . 266)) nil (25412 15909 480865 795000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((226 . 231)) nil (25412 15909 480859 724000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((#("t" 0 1 (fontified t)) . -230) (undo-tree-id58 . -1) 231) nil (25412 15909 480857 439000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((230 . 234)) nil (25412 15909 480853 322000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((241 . 248)) nil (25412 15909 480851 158000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((#("Q" 0 1 (fontified t face font-lock-type-face)) . -168) (undo-tree-id53 . -1) (#("u" 0 1 (fontified t face font-lock-type-face)) . -169) (undo-tree-id54 . -1) (#("o" 0 1 (fontified t face font-lock-type-face)) . -170) (undo-tree-id55 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -171) (undo-tree-id56 . -1) (#("a" 0 1 (fontified t face font-lock-type-face)) . -172) (undo-tree-id57 . -1) 173) nil (25412 15909 480846 930000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((168 . 169)) nil (25412 15909 480835 608000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((#("c" 0 1 (fontified t)) . -168) (undo-tree-id52 . -1) 169) nil (25412 15909 480833 434000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((168 . 175)) nil (25412 15909 480829 657000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((#("e" 0 1 (fontified t face font-lock-type-face)) . -246) (undo-tree-id48 . -1) (#("n" 0 1 (fontified t face font-lock-type-face)) . -247) (undo-tree-id49 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -248) (undo-tree-id50 . -1) (#("s" 0 1 (fontified t face font-lock-type-face)) . -249) (undo-tree-id51 . -1) 250) nil (25412 15909 480826 261000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((#("l" 0 1 (fontified t face font-lock-type-face)) . -244) (undo-tree-id41 . -1) (#("i" 0 1 (fontified t face font-lock-type-face)) . -245) (undo-tree-id42 . -1) (#("Q" 0 1 (fontified t face font-lock-type-face)) . -246) (undo-tree-id43 . -1) (#("u" 0 1 (fontified t face font-lock-type-face)) . -247) (undo-tree-id44 . -1) (#("o" 0 1 (fontified t face font-lock-type-face)) . -248) (undo-tree-id45 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -249) (undo-tree-id46 . -1) (#("a" 0 1 (fontified t face font-lock-type-face)) . -250) (undo-tree-id47 . -1) 251) nil (25412 15909 480814 88000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((244 . 250)) nil (25412 15909 480796 565000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((#("x" 0 1 (fontified t face font-lock-string-face)) . -108) (undo-tree-id40 . -1) 109) nil (25412 15909 480793 970000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((#("i" 0 1 (fontified t face font-lock-string-face)) . -104) (undo-tree-id36 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -105) (undo-tree-id37 . -1) (#("d" 0 1 (fontified t face font-lock-string-face)) . -106) (undo-tree-id38 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -107) (undo-tree-id39 . -1) 108) nil (25412 15909 480786 155000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((104 . 113)) nil (25412 15909 480757 732000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((#("s" 0 1 (fontified t face font-lock-string-face)) . -104) (undo-tree-id60 . -1) (#("h" 0 1 (fontified t face font-lock-string-face)) . -105) (undo-tree-id61 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -106) (undo-tree-id62 . -1) (#("w" 0 1 (fontified t face font-lock-string-face)) . -107) (undo-tree-id63 . -1) 108 (t 25412 15909 491255 11000)) nil (25412 15914 680066 591000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((104 . 107)) nil (25412 15914 680053 396000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((#("d" 0 1 (fontified t face font-lock-string-face)) . -106) (undo-tree-id59 . -1) 107) nil (25412 15914 680049 128000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((106 . 110)) nil (25412 15914 680027 217000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((123 . 126) (t 25412 15914 691309 100000)) nil (25412 15988 995422 492000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((#("%{quota: quota}" 0 2 (fontified t) 2 8 (fontified t face elixir-atom-face) 8 15 (fontified t)) . 126) (undo-tree-id64 . -15) (undo-tree-id65 . -15) (undo-tree-id66 . 1) (undo-tree-id67 . -15) (undo-tree-id68 . 14) (undo-tree-id69 . -2) 141) nil (25412 15988 995420 598000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((nil rear-nonsticky nil 139 . 140) (nil fontified nil 133 . 140) (nil fontified nil 127 . 133) (nil fontified nil 125 . 127) (125 . 140)) nil (25412 15988 995406 312000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((140 . 141)) nil (25412 15988 995404 909000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((nil rear-nonsticky nil 155 . 156) (nil fontified nil 149 . 156) (nil fontified nil 143 . 149) (nil fontified nil 141 . 143) (141 . 156)) nil (25412 15988 995403 657000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((125 . 131)) nil (25412 15988 995399 48000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((125 . 132) (t 25412 15989 4085 862000)) nil (25412 15996 690886 513000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((156 . 164) (t 25412 15996 700166 695000)) nil (25412 16008 418606 543000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((171 . 179)) nil (25412 34623 615595 369000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((#("%{" 0 1 (fontified t) 1 2 (fontified t)) . 123) (undo-tree-id169 . -2) (undo-tree-id170 . -2) (undo-tree-id171 . -2)) ((123 . 125)) (25412 34628 822444 442000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((123 . 125)) ((#("[]" 0 1 (fontified t) 1 2 (fontified t)) . 123) (undo-tree-id174 . -1) (undo-tree-id175 . -2) (undo-tree-id176 . -2) (undo-tree-id177 . -2)) (25412 34629 459242 238000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((#("render_data: %{quota: quota},%{clients_quota: clients_quota}" 0 7 (fontified t face elixir-atom-face) 7 12 (fontified t face elixir-atom-face) 12 13 (fontified t) 13 15 (fontified t) 15 21 (fontified t face elixir-atom-face) 21 27 (fontified t) 27 28 (fontified t rear-nonsticky t) 28 29 (fontified t) 29 31 (fontified t) 31 39 (fontified t face elixir-atom-face) 39 45 (fontified t face elixir-atom-face) 45 59 (fontified t) 59 60 (fontified t rear-nonsticky t)) . 125) (undo-tree-id178 . -29)) ((125 . 185)) (25412 34629 640624 324000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((#("}" 0 1 (fontified t)) . 125) (undo-tree-id179 . -1)) ((125 . 126)) (25412 34629 809286 965000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((nil fontified nil 183 . 184) (124 . 184)) ((#("render_data: %{quota: quota},%{clients_quota: clients_quota}" 0 1 (fontified nil face elixir-atom-face) 1 2 (fontified nil face elixir-atom-face) 2 3 (fontified nil face elixir-atom-face) 3 4 (fontified nil face elixir-atom-face) 4 5 (fontified nil face elixir-atom-face) 5 6 (fontified nil face elixir-atom-face) 6 7 (fontified nil face elixir-atom-face) 7 8 (fontified nil face elixir-atom-face) 8 9 (fontified nil face elixir-atom-face) 9 10 (fontified nil face elixir-atom-face) 10 11 (fontified nil face elixir-atom-face) 11 12 (fontified nil face elixir-atom-face) 12 13 (fontified nil) 13 14 (fontified nil) 14 15 (fontified nil) 15 16 (fontified nil face elixir-atom-face) 16 17 (fontified nil face elixir-atom-face) 17 18 (fontified nil face elixir-atom-face) 18 19 (fontified nil face elixir-atom-face) 19 20 (fontified nil face elixir-atom-face) 20 21 (fontified nil face elixir-atom-face) 21 22 (fontified nil) 22 23 (fontified nil) 23 24 (fontified nil) 24 25 (fontified nil) 25 26 (fontified nil) 26 27 (fontified nil) 27 28 (rear-nonsticky t fontified nil) 28 29 (fontified nil) 29 30 (fontified nil) 30 31 (fontified nil) 31 32 (fontified nil face elixir-atom-face) 32 33 (fontified nil face elixir-atom-face) 33 34 (fontified nil face elixir-atom-face) 34 35 (fontified nil face elixir-atom-face) 35 36 (fontified nil face elixir-atom-face) 36 37 (fontified nil face elixir-atom-face) 37 38 (fontified nil face elixir-atom-face) 38 39 (fontified nil face elixir-atom-face) 39 40 (fontified nil face elixir-atom-face) 40 41 (fontified nil face elixir-atom-face) 41 42 (fontified nil face elixir-atom-face) 42 43 (fontified nil face elixir-atom-face) 43 44 (fontified nil face elixir-atom-face) 44 45 (fontified nil face elixir-atom-face) 45 46 (fontified nil) 46 47 (fontified nil) 47 48 (fontified nil) 48 49 (fontified nil) 49 50 (fontified nil) 50 51 (fontified nil) 51 52 (fontified nil) 52 53 (fontified nil) 53 54 (fontified nil) 54 55 (fontified nil) 55 56 (fontified nil) 56 57 (fontified nil) 57 58 (fontified nil) 58 59 (fontified nil) 59 60 (rear-nonsticky t fontified nil)) . 124) (nil fontified t 183 . 184)) (25412 34629 961231 202000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((#("[render_data: " 0 1 (fontified t) 1 2 (fontified t face elixir-atom-face) 2 3 (fontified t face elixir-atom-face) 3 4 (fontified t face elixir-atom-face) 4 5 (fontified t face elixir-atom-face) 5 6 (fontified t face elixir-atom-face) 6 7 (fontified t face elixir-atom-face) 7 8 (fontified t face elixir-atom-face) 8 9 (fontified t face elixir-atom-face) 9 10 (fontified t face elixir-atom-face) 10 11 (fontified t face elixir-atom-face) 11 12 (fontified t face elixir-atom-face) 12 13 (fontified t face elixir-atom-face) 13 14 (fontified t)) . 123) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1)) ((123 . 137)) (25412 34630 295373 851000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((123 . 124)) ((#("[" 0 1 (fontified t)) . 123) (t 25412 16062 76855 982000)) (25412 34646 403220 613000) 0 (:visualizer [1 0 1 #<marker in no buffer>])])
([nil nil ((nil fontified nil 154 . 155) (nil fontified nil 153 . 154) (nil fontified nil 152 . 153) (nil fontified nil 151 . 152) (nil fontified nil 150 . 151) (nil fontified nil 149 . 150) (nil fontified nil 148 . 149) (nil fontified nil 147 . 148) (nil fontified nil 146 . 147) (nil fontified nil 145 . 146) (nil fontified nil 144 . 145) (nil fontified nil 143 . 144) (nil fontified nil 142 . 143) (nil fontified nil 141 . 142) (nil fontified nil 140 . 141) (140 . 155) (t 25412 16062 76855 982000)) nil (25412 34743 913395 976000) 0 nil] [nil nil ((123 . 124) (t 25412 16062 76855 982000)) ((#("n" 0 1 (fontified t)) . 123) (undo-tree-id191 . -1) (undo-tree-id192 . -1)) (25412 34646 126801 976000) 0 (:visualizer [0 1 0 #<marker in no buffer>])] [nil nil ((#("i" 0 1 (fontified t face elixir-atom-face)) . 124) (undo-tree-id131 . 1) (undo-tree-id132 . 1) (#("l" 0 1 (fontified t face elixir-atom-face)) . 124) (undo-tree-id133 . 1) (undo-tree-id134 . 1) (#("c" 0 1 (fontified t face elixir-atom-face)) . 124) (undo-tree-id135 . 1) (undo-tree-id136 . 1) (#("{" 0 1 (fontified t)) . 124) (undo-tree-id137 . 1) (undo-tree-id138 . 1) (#("%" 0 1 (fontified t)) . 124) (undo-tree-id139 . 1) (undo-tree-id140 . 1) (#("," 0 1 (fontified t)) . 124) (undo-tree-id141 . 1) (undo-tree-id142 . 1) (#("}" 0 1 (rear-nonsticky t fontified t)) . 124) (undo-tree-id143 . 1) (undo-tree-id144 . 1) (undo-tree-id145 . -1) (#("a" 0 1 (fontified t)) . 124) (undo-tree-id146 . 1) (#("t" 0 1 (fontified t)) . 124) (undo-tree-id147 . 1) (#("o" 0 1 (fontified t)) . 124) (undo-tree-id148 . 1) (#("u" 0 1 (fontified t)) . 124) (undo-tree-id149 . 1) (#("q" 0 1 (fontified t)) . 124) (undo-tree-id150 . 1) (#(" " 0 1 (fontified t)) . 124) (undo-tree-id151 . 1) (#(":" 0 1 (fontified t)) . 124) (undo-tree-id152 . 1) (#("a" 0 1 (fontified t face elixir-atom-face)) . 124) (undo-tree-id153 . 1) (#("t" 0 1 (fontified t face elixir-atom-face)) . 124) (undo-tree-id154 . 1) (#("o" 0 1 (fontified t face elixir-atom-face)) . 124) (undo-tree-id155 . 1) (#("u" 0 1 (fontified t face elixir-atom-face)) . 124) (undo-tree-id156 . 1) (#("q" 0 1 (fontified t face elixir-atom-face)) . 124) (undo-tree-id157 . 1) (#("{" 0 1 (fontified t)) . 124) (undo-tree-id158 . 1) (undo-tree-id159 . -1) (#("%" 0 1 (fontified t)) . 124) (t 25412 16062 76855 982000)) ((124 . 125) (124 . 125) (124 . 125) (124 . 125) (124 . 125) (124 . 125) (124 . 125) (124 . 125) (124 . 125) (124 . 125) (124 . 125) (124 . 125) (124 . 125) (124 . 125) (124 . 125) (124 . 125) (124 . 125) (124 . 125) (124 . 125) (124 . 125) (124 . 125)) (25412 34606 680822 960000) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil nil ((140 . 147)) nil (25412 34743 913387 99000) 0 nil])
([nil nil ((124 . 129)) ((#("
    " 0 1 (fontified t) 1 5 (fontified t)) . 124)) (25412 34645 679079 356000) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil nil ((#("q" 0 1 (fontified t)) . 124) (#("_" 0 1 (fontified t face font-lock-comment-face)) . 124) (#("s" 0 1 (fontified t)) . 124) (#("t" 0 1 (fontified t)) . 124) (#("n" 0 1 (fontified t)) . 124) (#("e" 0 1 (fontified t)) . 124) (#("i" 0 1 (fontified t)) . 124) (undo-tree-id101 . 1) (undo-tree-id102 . 1) (#("l" 0 1 (fontified t)) . 124) (undo-tree-id103 . 1) (undo-tree-id104 . 1) (#("c" 0 1 (fontified t)) . 124) (undo-tree-id105 . 1) (undo-tree-id106 . 1) (#(" " 0 1 (fontified t)) . 124) (undo-tree-id107 . 1) (undo-tree-id108 . 1) (#(":" 0 1 (fontified t)) . 124) (undo-tree-id109 . 1) (undo-tree-id110 . 1) (#("a" 0 1 (fontified t face elixir-atom-face)) . 124) (undo-tree-id111 . 1) (undo-tree-id112 . 1) (#("t" 0 1 (fontified t face elixir-atom-face)) . 124) (undo-tree-id113 . 1) (undo-tree-id114 . 1) (#("o" 0 1 (fontified t face elixir-atom-face)) . 124) (undo-tree-id115 . 1) (undo-tree-id116 . 1) (#("u" 0 1 (fontified t face elixir-atom-face)) . 124) (undo-tree-id117 . 1) (undo-tree-id118 . 1) (#("q" 0 1 (fontified t face elixir-atom-face)) . 124) (undo-tree-id119 . 1) (undo-tree-id120 . 1) (#("_" 0 1 (fontified t face font-lock-comment-face)) . 124) (undo-tree-id121 . 1) (undo-tree-id122 . 1) (#("s" 0 1 (fontified t face elixir-atom-face)) . 124) (undo-tree-id123 . 1) (undo-tree-id124 . 1) (#("t" 0 1 (fontified t face elixir-atom-face)) . 124) (undo-tree-id125 . 1) (undo-tree-id126 . 1) (#("n" 0 1 (fontified t face elixir-atom-face)) . 124) (undo-tree-id127 . 1) (undo-tree-id128 . 1) (#("e" 0 1 (fontified t face elixir-atom-face)) . 124) (undo-tree-id129 . 1) (undo-tree-id130 . 1)) ((124 . 125) (124 . 125) (124 . 125) (124 . 125) (124 . 125) (124 . 125) (124 . 125) (124 . 125) (124 . 125) (124 . 125) (124 . 125) (124 . 125) (124 . 125) (124 . 125) (124 . 125) (124 . 125) (124 . 125) (124 . 125) (124 . 125) (124 . 125) (124 . 125)) (25412 34606 481913 613000) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil nil ((162 . 163)) nil (25412 34743 913385 386000) 0 nil])
nil
([nil nil ((#("}" 0 1 (rear-nonsticky t fontified t)) . 124) (#("a" 0 1 (fontified t)) . 124) (#("t" 0 1 (fontified t)) . 124) (#("o" 0 1 (fontified t)) . 124) (#("u" 0 1 (fontified t)) . 124)) ((124 . 125) (124 . 125) (124 . 125) (124 . 125) (124 . 125)) (25412 34606 284122 527000) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil nil ((163 . 170)) nil (25412 34743 913383 733000) 0 nil])
([nil nil ((124 . 128)) ((#("data" 0 4 (fontified t)) . 124)) (25412 34605 767190 5000) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil nil ((201 . 202)) nil (25412 34743 913382 89000) 0 nil])
nil
([nil nil ((nil fontified nil 232 . 233) (nil fontified nil 231 . 232) (nil fontified nil 230 . 231) (nil fontified nil 229 . 230) (nil fontified nil 228 . 229) (nil fontified nil 227 . 228) (nil fontified nil 226 . 227) (nil fontified nil 225 . 226) (nil fontified nil 224 . 225) (nil fontified nil 223 . 224) (nil fontified nil 222 . 223) (nil fontified nil 221 . 222) (nil fontified nil 220 . 221) (nil fontified nil 219 . 220) (nil fontified nil 218 . 219) (nil fontified nil 217 . 218) (nil fontified nil 216 . 217) (nil fontified nil 215 . 216) (nil fontified nil 214 . 215) (nil fontified nil 213 . 214) (nil fontified nil 212 . 213) (nil fontified nil 211 . 212) (nil fontified nil 210 . 211) (nil fontified nil 209 . 210) (nil fontified nil 208 . 209) (nil fontified nil 207 . 208) (nil fontified nil 206 . 207) (nil fontified nil 205 . 206) (nil fontified nil 204 . 205) (nil fontified nil 203 . 204) (nil fontified nil 202 . 203) (202 . 233)) nil (25412 34743 913376 549000) 0 nil])
([nil nil ((233 . 234)) nil (25412 34743 913361 691000) 0 nil])
([nil nil ((nil fontified nil 264 . 265) (nil fontified nil 263 . 264) (nil fontified nil 262 . 263) (nil fontified nil 261 . 262) (nil fontified nil 260 . 261) (nil fontified nil 259 . 260) (nil fontified nil 258 . 259) (nil fontified nil 257 . 258) (nil fontified nil 256 . 257) (nil fontified nil 255 . 256) (nil fontified nil 254 . 255) (nil fontified nil 253 . 254) (nil fontified nil 252 . 253) (nil fontified nil 251 . 252) (nil fontified nil 250 . 251) (nil fontified nil 249 . 250) (nil fontified nil 248 . 249) (nil fontified nil 247 . 248) (nil fontified nil 246 . 247) (nil fontified nil 245 . 246) (nil fontified nil 244 . 245) (nil fontified nil 243 . 244) (nil fontified nil 242 . 243) (nil fontified nil 241 . 242) (nil fontified nil 240 . 241) (nil fontified nil 239 . 240) (nil fontified nil 238 . 239) (nil fontified nil 237 . 238) (nil fontified nil 236 . 237) (nil fontified nil 235 . 236) (nil fontified nil 234 . 235) (234 . 265)) nil (25412 34743 913356 161000) 0 nil])
([nil nil ((265 . 266)) nil (25412 34743 913341 743000) 0 nil])
([nil nil ((nil fontified nil 296 . 297) (nil fontified nil 295 . 296) (nil fontified nil 294 . 295) (nil fontified nil 293 . 294) (nil fontified nil 292 . 293) (nil fontified nil 291 . 292) (nil fontified nil 290 . 291) (nil fontified nil 289 . 290) (nil fontified nil 288 . 289) (nil fontified nil 287 . 288) (nil fontified nil 286 . 287) (nil fontified nil 285 . 286) (nil fontified nil 284 . 285) (nil fontified nil 283 . 284) (nil fontified nil 282 . 283) (nil fontified nil 281 . 282) (nil fontified nil 280 . 281) (nil fontified nil 279 . 280) (nil fontified nil 278 . 279) (nil fontified nil 277 . 278) (nil fontified nil 276 . 277) (nil fontified nil 275 . 276) (nil fontified nil 274 . 275) (nil fontified nil 273 . 274) (nil fontified nil 272 . 273) (nil fontified nil 271 . 272) (nil fontified nil 270 . 271) (nil fontified nil 269 . 270) (nil fontified nil 268 . 269) (nil fontified nil 267 . 268) (nil fontified nil 266 . 267) (266 . 297)) nil (25412 34743 913336 383000) 0 nil])
([nil nil ((297 . 298)) nil (25412 34743 913321 876000) 0 nil])
([nil nil ((nil fontified nil 328 . 329) (nil fontified nil 327 . 328) (nil fontified nil 326 . 327) (nil fontified nil 325 . 326) (nil fontified nil 324 . 325) (nil fontified nil 323 . 324) (nil fontified nil 322 . 323) (nil fontified nil 321 . 322) (nil fontified nil 320 . 321) (nil fontified nil 319 . 320) (nil fontified nil 318 . 319) (nil fontified nil 317 . 318) (nil fontified nil 316 . 317) (nil fontified nil 315 . 316) (nil fontified nil 314 . 315) (nil fontified nil 313 . 314) (nil fontified nil 312 . 313) (nil fontified nil 311 . 312) (nil fontified nil 310 . 311) (nil fontified nil 309 . 310) (nil fontified nil 308 . 309) (nil fontified nil 307 . 308) (nil fontified nil 306 . 307) (nil fontified nil 305 . 306) (nil fontified nil 304 . 305) (nil fontified nil 303 . 304) (nil fontified nil 302 . 303) (nil fontified nil 301 . 302) (nil fontified nil 300 . 301) (nil fontified nil 299 . 300) (nil fontified nil 298 . 299) (298 . 329)) nil (25412 34743 913316 456000) 0 nil])
([nil nil ((329 . 330)) nil (25412 34743 913302 59000) 0 nil])
([nil nil ((nil fontified nil 360 . 361) (nil fontified nil 359 . 360) (nil fontified nil 358 . 359) (nil fontified nil 357 . 358) (nil fontified nil 356 . 357) (nil fontified nil 355 . 356) (nil fontified nil 354 . 355) (nil fontified nil 353 . 354) (nil fontified nil 352 . 353) (nil fontified nil 351 . 352) (nil fontified nil 350 . 351) (nil fontified nil 349 . 350) (nil fontified nil 348 . 349) (nil fontified nil 347 . 348) (nil fontified nil 346 . 347) (nil fontified nil 345 . 346) (nil fontified nil 344 . 345) (nil fontified nil 343 . 344) (nil fontified nil 342 . 343) (nil fontified nil 341 . 342) (nil fontified nil 340 . 341) (nil fontified nil 339 . 340) (nil fontified nil 338 . 339) (nil fontified nil 337 . 338) (nil fontified nil 336 . 337) (nil fontified nil 335 . 336) (nil fontified nil 334 . 335) (nil fontified nil 333 . 334) (nil fontified nil 332 . 333) (nil fontified nil 331 . 332) (nil fontified nil 330 . 331) (330 . 361)) nil (25412 34743 913296 628000) 0 nil])
([nil nil ((201 . 202)) nil (25412 34743 913282 251000) 0 nil])
([nil nil ((202 . 223)) nil (25412 34743 913280 448000) 0 nil])
([nil nil ((223 . 234)) nil (25412 34743 913278 594000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 201) (#(" " 0 1 (fontified t)) . 201) (#(" " 0 1 (fontified t)) . 201) (#(" " 0 1 (fontified t)) . 201) (#(" " 0 1 (fontified t)) . 201) (#(" " 0 1 (fontified t)) . 201) (#(" " 0 1 (fontified t)) . 201) (#(" " 0 1 (fontified t)) . 201) (#(" " 0 1 (fontified t)) . 201) (#(" " 0 1 (fontified t)) . 201) (#(" " 0 1 (fontified t)) . 201) (#(" " 0 1 (fontified t)) . 201) (#(" " 0 1 (fontified t)) . 201) (#(" " 0 1 (fontified t)) . 201) (#(" " 0 1 (fontified t)) . 201) (#(" " 0 1 (fontified t)) . 201) (#(" " 0 1 (fontified t)) . 201) (#(" " 0 1 (fontified t)) . 201) (#(" " 0 1 (fontified t)) . 201) (#(" " 0 1 (fontified t)) . 201)) nil (25412 34743 913271 60000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 201) (#(" " 0 1 (fontified t)) . 201) (#(" " 0 1 (fontified t)) . 201) (#(" " 0 1 (fontified t)) . 201) (#(" " 0 1 (fontified t)) . 201) (#(" " 0 1 (fontified t)) . 201) (#(" " 0 1 (fontified t)) . 201) (#(" " 0 1 (fontified t)) . 201) (#(" " 0 1 (fontified t)) . 201) (#(" " 0 1 (fontified t)) . 201) (#(" " 0 1 (fontified t)) . 201) (#(" " 0 1 (fontified t)) . 201) (#(" " 0 1 (fontified t)) . 201)) nil (25412 34743 913256 853000) 0 nil])
([nil current (("
  
  
" . -2707) (1504 . 1583) (#("

      def render(\"credits_clients_quota.json\", %{clients_quota: clients_quota}) do


" 8 11 (face font-lock-keyword-face) 12 18 (face font-lock-function-name-face) 19 20 (face font-lock-string-face syntax-table (15)) 20 37 (face font-lock-string-face) 37 46 (face font-lock-string-face) 46 47 (face font-lock-string-face syntax-table (15)) 51 65 (face elixir-atom-face) 82 84 (face font-lock-keyword-face)) . -1504) (undo-tree-id193 . -4) (1454 . 1497) (#("      bill_number: quota.bill_number,
}
" 6 18 (face elixir-atom-face)) . -1454) (#("    
" 0 4 (fontified t) 4 5 (fontified t)) . -574) (undo-tree-id194 . -5) (undo-tree-id195 . -5) (undo-tree-id196 . -5) (90 . 432) (#("  def render(\"render_many.json\", [%{quota: quota},
				  %{quota: quota},
				  %{clients_quota: clients_quota},%{clients_quota: clients_quota},%{clients_quota: clients_quota},%{clients_quota: clients_quota},%{clients_quota: clients_quota},%{clients_quota: clients_quota}]) do
" 0 2 (fontified t) 2 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 12 (fontified t face font-lock-function-name-face) 12 13 (fontified t) 13 14 (fontified t syntax-table (15) face font-lock-string-face) 14 30 (fontified t face font-lock-string-face) 30 31 (fontified t syntax-table (15) face font-lock-string-face) 31 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t face elixir-atom-face) 37 38 (fontified t face elixir-atom-face) 38 39 (fontified t face elixir-atom-face) 39 40 (fontified t face elixir-atom-face) 40 41 (fontified t face elixir-atom-face) 41 42 (fontified t face elixir-atom-face) 42 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t) 46 47 (fontified t) 47 48 (fontified t) 48 49 (rear-nonsticky t fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 57 (fontified t) 57 58 (fontified t) 58 59 (fontified t) 59 60 (fontified t face elixir-atom-face) 60 61 (fontified t face elixir-atom-face) 61 62 (fontified t face elixir-atom-face) 62 63 (fontified t face elixir-atom-face) 63 64 (fontified t face elixir-atom-face) 64 65 (fontified t face elixir-atom-face) 65 66 (fontified t) 66 67 (fontified t) 67 68 (fontified t) 68 69 (fontified t) 69 70 (fontified t) 70 71 (fontified t) 71 72 (rear-nonsticky t fontified t) 72 73 (fontified t) 73 74 (fontified t) 74 80 (fontified t) 80 81 (fontified t) 81 82 (fontified t) 82 83 (fontified t face elixir-atom-face) 83 84 (fontified t face elixir-atom-face) 84 85 (fontified t face elixir-atom-face) 85 86 (fontified t face elixir-atom-face) 86 87 (fontified t face elixir-atom-face) 87 88 (fontified t face elixir-atom-face) 88 89 (fontified t face elixir-atom-face) 89 90 (fontified t face elixir-atom-face) 90 91 (fontified t face elixir-atom-face) 91 92 (fontified t face elixir-atom-face) 92 93 (fontified t face elixir-atom-face) 93 94 (fontified t face elixir-atom-face) 94 95 (fontified t face elixir-atom-face) 95 96 (fontified t face elixir-atom-face) 96 97 (fontified t) 97 98 (fontified t) 98 99 (fontified t) 99 100 (fontified t) 100 101 (fontified t) 101 102 (fontified t) 102 103 (fontified t) 103 104 (fontified t) 104 105 (fontified t) 105 106 (fontified t) 106 107 (fontified t) 107 108 (fontified t) 108 109 (fontified t) 109 110 (fontified t) 110 111 (rear-nonsticky t fontified t) 111 112 (fontified t) 112 113 (fontified t) 113 114 (fontified t) 114 115 (fontified t face elixir-atom-face) 115 116 (fontified t face elixir-atom-face) 116 117 (fontified t face elixir-atom-face) 117 118 (fontified t face elixir-atom-face) 118 119 (fontified t face elixir-atom-face) 119 120 (fontified t face elixir-atom-face) 120 121 (fontified t face elixir-atom-face) 121 122 (fontified t face elixir-atom-face) 122 123 (fontified t face elixir-atom-face) 123 124 (fontified t face elixir-atom-face) 124 125 (fontified t face elixir-atom-face) 125 126 (fontified t face elixir-atom-face) 126 127 (fontified t face elixir-atom-face) 127 128 (fontified t face elixir-atom-face) 128 129 (fontified t) 129 130 (fontified t) 130 131 (fontified t) 131 132 (fontified t) 132 133 (fontified t) 133 134 (fontified t) 134 135 (fontified t) 135 136 (fontified t) 136 137 (fontified t) 137 138 (fontified t) 138 139 (fontified t) 139 140 (fontified t) 140 141 (fontified t) 141 142 (fontified t) 142 143 (rear-nonsticky t fontified t) 143 144 (fontified t) 144 145 (fontified t) 145 146 (fontified t) 146 147 (fontified t face elixir-atom-face) 147 148 (fontified t face elixir-atom-face) 148 149 (fontified t face elixir-atom-face) 149 150 (fontified t face elixir-atom-face) 150 151 (fontified t face elixir-atom-face) 151 152 (fontified t face elixir-atom-face) 152 153 (fontified t face elixir-atom-face) 153 154 (fontified t face elixir-atom-face) 154 155 (fontified t face elixir-atom-face) 155 156 (fontified t face elixir-atom-face) 156 157 (fontified t face elixir-atom-face) 157 158 (fontified t face elixir-atom-face) 158 159 (fontified t face elixir-atom-face) 159 160 (fontified t face elixir-atom-face) 160 161 (fontified t) 161 162 (fontified t) 162 163 (fontified t) 163 164 (fontified t) 164 165 (fontified t) 165 166 (fontified t) 166 167 (fontified t) 167 168 (fontified t) 168 169 (fontified t) 169 170 (fontified t) 170 171 (fontified t) 171 172 (fontified t) 172 173 (fontified t) 173 174 (fontified t) 174 175 (rear-nonsticky t fontified t) 175 176 (fontified t) 176 177 (fontified t) 177 178 (fontified t) 178 179 (fontified t face elixir-atom-face) 179 180 (fontified t face elixir-atom-face) 180 181 (fontified t face elixir-atom-face) 181 182 (fontified t face elixir-atom-face) 182 183 (fontified t face elixir-atom-face) 183 184 (fontified t face elixir-atom-face) 184 185 (fontified t face elixir-atom-face) 185 186 (fontified t face elixir-atom-face) 186 187 (fontified t face elixir-atom-face) 187 188 (fontified t face elixir-atom-face) 188 189 (fontified t face elixir-atom-face) 189 190 (fontified t face elixir-atom-face) 190 191 (fontified t face elixir-atom-face) 191 192 (fontified t face elixir-atom-face) 192 193 (fontified t) 193 194 (fontified t) 194 195 (fontified t) 195 196 (fontified t) 196 197 (fontified t) 197 198 (fontified t) 198 199 (fontified t) 199 200 (fontified t) 200 201 (fontified t) 201 202 (fontified t) 202 203 (fontified t) 203 204 (fontified t) 204 205 (fontified t) 205 206 (fontified t) 206 207 (rear-nonsticky t fontified t) 207 208 (fontified t) 208 209 (fontified t) 209 210 (fontified t) 210 211 (fontified t face elixir-atom-face) 211 212 (fontified t face elixir-atom-face) 212 213 (fontified t face elixir-atom-face) 213 214 (fontified t face elixir-atom-face) 214 215 (fontified t face elixir-atom-face) 215 216 (fontified t face elixir-atom-face) 216 217 (fontified t face elixir-atom-face) 217 218 (fontified t face elixir-atom-face) 218 219 (fontified t face elixir-atom-face) 219 220 (fontified t face elixir-atom-face) 220 221 (fontified t face elixir-atom-face) 221 222 (fontified t face elixir-atom-face) 222 223 (fontified t face elixir-atom-face) 223 224 (fontified t face elixir-atom-face) 224 225 (fontified t) 225 226 (fontified t) 226 227 (fontified t) 227 228 (fontified t) 228 229 (fontified t) 229 230 (fontified t) 230 231 (fontified t) 231 232 (fontified t) 232 233 (fontified t) 233 234 (fontified t) 234 235 (fontified t) 235 236 (fontified t) 236 237 (fontified t) 237 238 (fontified t) 238 239 (rear-nonsticky t fontified t) 239 240 (fontified t) 240 241 (fontified t) 241 242 (fontified t) 242 243 (fontified t face elixir-atom-face) 243 244 (fontified t face elixir-atom-face) 244 245 (fontified t face elixir-atom-face) 245 246 (fontified t face elixir-atom-face) 246 247 (fontified t face elixir-atom-face) 247 248 (fontified t face elixir-atom-face) 248 249 (fontified t face elixir-atom-face) 249 250 (fontified t face elixir-atom-face) 250 251 (fontified t face elixir-atom-face) 251 252 (fontified t face elixir-atom-face) 252 253 (fontified t face elixir-atom-face) 253 254 (fontified t face elixir-atom-face) 254 255 (fontified t face elixir-atom-face) 255 256 (fontified t face elixir-atom-face) 256 257 (fontified t) 257 258 (fontified t) 258 259 (fontified t) 259 260 (fontified t) 260 261 (fontified t) 261 262 (fontified t) 262 263 (fontified t) 263 264 (fontified t) 264 265 (fontified t) 265 266 (fontified t) 266 267 (fontified t) 267 268 (fontified t) 268 269 (fontified t) 269 270 (fontified t) 270 271 (rear-nonsticky t fontified t) 271 272 (fontified t) 272 274 (fontified t) 274 276 (fontified t face font-lock-keyword-face) 276 277 (fontified t)) . -90) (undo-tree-id197 . -240) (undo-tree-id198 . -33) (undo-tree-id199 . -272) (undo-tree-id200 . -33) (undo-tree-id201 . -272) (undo-tree-id202 . -272) (undo-tree-id203 . -74) (undo-tree-id204 . -74) (undo-tree-id205 . -277) (undo-tree-id206 . -277) (undo-tree-id207 . -51) (undo-tree-id208 . -51) (undo-tree-id209 . -74) (undo-tree-id210 . -277) (undo-tree-id211 . -33) (undo-tree-id212 . -34) (undo-tree-id213 . -34) (undo-tree-id214 . -50) (undo-tree-id215 . -80) (undo-tree-id216 . -112) (undo-tree-id217 . -144) (undo-tree-id218 . -176) (undo-tree-id219 . -208) (undo-tree-id220 . -74) (undo-tree-id221 . -241) (undo-tree-id222 . -241) (undo-tree-id223 . -241) (undo-tree-id224 . -241) (undo-tree-id225 . -241)) nil (25412 34743 913239 731000) 0 nil])
nil
