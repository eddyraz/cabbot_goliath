(undo-tree-save-format-version . 1)
"63e91b6e84302694c70eb5b1c2a84044351f6ff3"
[nil nil nil nil (25416 41048 704185 630000) 0 nil]
([nil nil ((234 . 235) (t 25416 23265 620764 994000)) nil (25416 41048 704184 408000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -160) (undo-tree-id2 . -1) 161) nil (25416 41048 704182 975000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -185) (undo-tree-id1 . -1) 186) nil (25416 41048 704178 727000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -211) (undo-tree-id0 . -1) 212) nil (25416 41048 704173 758000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -209) (undo-tree-id3 . -1) (#(" " 0 1 (fontified t)) . -210) (undo-tree-id4 . -1) 211 (t 25416 41048 704396 14000)) nil (25416 41050 897321 629000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 209) (#(" " 0 1 (fontified t)) . 209)) nil (25416 41050 897295 871000) 0 nil])
([nil nil ((207 . 208) (t 25416 41050 908393 67000)) nil (25416 41060 819353 776000) 0 nil])
([nil nil ((163 . 177) (t 25416 41060 820381 678000)) nil (25416 42152 725603 765000) 0 nil])
([nil nil ((#("data[:credits] |> hd" 0 4 (fontified t) 4 5 (fontified t) 5 13 (fontified t face elixir-atom-face) 13 20 (fontified t)) . 177) (undo-tree-id39 . -20) (undo-tree-id40 . -20) (undo-tree-id41 . -20) 197) nil (25416 42152 725600 619000) 0 nil])
([nil nil ((nil rear-nonsticky nil 195 . 196) (nil fontified nil 189 . 196) (nil fontified nil 181 . 189) (nil fontified nil 180 . 181) (nil fontified nil 176 . 180) (176 . 196)) nil (25416 42152 725592 984000) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -202) (undo-tree-id21 . -1) (#(">" 0 1 (fontified t)) . -203) (undo-tree-id22 . -1) (#(" " 0 1 (fontified t)) . -204) (undo-tree-id23 . -1) (#("M" 0 1 (fontified t face font-lock-type-face)) . -205) (undo-tree-id24 . -1) (#("a" 0 1 (fontified t face font-lock-type-face)) . -206) (undo-tree-id25 . -1) (#("p" 0 1 (fontified t face font-lock-type-face)) . -207) (undo-tree-id26 . -1) (#("." 0 1 (fontified t)) . -208) (undo-tree-id27 . -1) (#("f" 0 1 (fontified t)) . -209) (undo-tree-id28 . -1) (#("r" 0 1 (fontified t)) . -210) (undo-tree-id29 . -1) (#("o" 0 1 (fontified t)) . -211) (undo-tree-id30 . -1) (#("m" 0 1 (fontified t)) . -212) (undo-tree-id31 . -1) (#("_" 0 1 (fontified t)) . -213) (undo-tree-id32 . -1) (#("s" 0 1 (fontified t)) . -214) (undo-tree-id33 . -1) (#("t" 0 1 (fontified t)) . -215) (undo-tree-id34 . -1) (#("r" 0 1 (fontified t)) . -216) (undo-tree-id35 . -1) (#("u" 0 1 (fontified t)) . -217) (undo-tree-id36 . -1) (#("c" 0 1 (fontified t)) . -218) (undo-tree-id37 . -1) (#("t" 0 1 (fontified t)) . -219) (undo-tree-id38 . -1) 220) nil (25416 42152 725581 543000) 0 nil])
([nil nil ((#("
#    |> IO.inspect()
#    data[:credits] |> Enum.filter(fn x -> x.__meta__[:loaded] == \"quota\"  end )
    |> IO.inspect()
#     |> Enum.split_with(fn x -> x.__schema__(:fields) == \"quota\" end )
    " 0 1 (fontified t) 1 2 (fontified t face font-lock-comment-delimiter-face) 2 4 (fontified t face font-lock-comment-delimiter-face) 4 6 (fontified t face font-lock-comment-delimiter-face) 6 9 (fontified t face font-lock-comment-face) 9 11 (fontified t face font-lock-comment-face) 11 22 (fontified t face font-lock-comment-face) 22 23 (fontified t face font-lock-comment-delimiter-face) 23 27 (fontified t face font-lock-comment-delimiter-face) 27 32 (fontified t face font-lock-comment-face) 32 40 (fontified t face font-lock-comment-face) 40 45 (fontified t face font-lock-comment-face) 45 49 (fontified t face font-lock-comment-face) 49 57 (fontified t face font-lock-comment-face) 57 59 (fontified t face font-lock-comment-face) 59 76 (fontified t face font-lock-comment-face) 76 83 (fontified t face font-lock-comment-face) 83 88 (fontified t face font-lock-comment-face) 88 89 (syntax-table (15) fontified t face font-lock-comment-face) 89 94 (fontified t face font-lock-comment-face) 94 95 (syntax-table (15) fontified t face font-lock-comment-face) 95 97 (fontified t face font-lock-comment-face) 97 100 (fontified t face font-lock-comment-face) 100 103 (fontified t face font-lock-comment-face) 103 110 (fontified t) 110 112 (fontified t face font-lock-type-face) 112 123 (fontified t) 123 129 (fontified t face font-lock-comment-delimiter-face) 129 181 (fontified t face font-lock-comment-face) 181 182 (syntax-table (15) fontified t face font-lock-comment-face) 182 187 (fontified t face font-lock-comment-face) 187 188 (syntax-table (15) fontified t face font-lock-comment-face) 188 195 (fontified t face font-lock-comment-face) 195 199 (fontified t)) . -202) (undo-tree-id5 . -2) (undo-tree-id6 . -2) (undo-tree-id7 . -199) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -22) (undo-tree-id11 . -22) (undo-tree-id12 . -103) (undo-tree-id13 . -103) (undo-tree-id14 . -123) (undo-tree-id15 . -123) (undo-tree-id16 . -195) (undo-tree-id17 . -195) (undo-tree-id18 . -195) (undo-tree-id19 . -199) (undo-tree-id20 . -195) 401) nil (25416 42152 725535 697000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -190) (undo-tree-id42 . -1) (#("|" 0 1 (fontified t)) . -191) (undo-tree-id43 . -1) (#(">" 0 1 (fontified t)) . -192) (undo-tree-id44 . -1) (#(" " 0 1 (fontified t)) . -193) (undo-tree-id45 . -1) (#("h" 0 1 (fontified t)) . -194) (undo-tree-id46 . -1) (#("d" 0 1 (fontified t rear-nonsticky t)) . -195) (undo-tree-id47 . -1) 196 (t 25416 42152 724210 644000)) nil (25416 42181 601355 921000) 0 nil])
([nil nil ((190 . 195) (t 25416 42181 612369 608000)) nil (25416 42207 724721 66000) 0 nil])
([nil nil ((196 . 204) (t 25416 42207 724523 258000)) nil (25416 42222 732843 449000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -203) (undo-tree-id49 . -1) 204) nil (25416 42222 732840 573000) 0 nil])
([nil nil ((203 . 204)) nil (25416 42222 732833 59000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -203) (undo-tree-id48 . -1) 204) nil (25416 42222 732828 571000) 0 nil])
([nil nil ((204 . 205) (203 . 205)) nil (25416 42222 732808 984000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -204) (undo-tree-id50 . -1) 205 (t 25416 42222 772615 914000)) nil (25416 42227 876790 619000) 0 nil])
([nil nil ((204 . 205)) nil (25416 42227 876768 347000) 0 nil])
([nil nil ((163 . 177) (t 25416 42227 916648 253000)) nil (25416 42253 51456 734000) 0 nil])
([nil nil ((#("Jason.encode(data[:credits]|> hd)|> elem(1)" 0 5 (fontified t face font-lock-type-face) 5 12 (fontified t) 12 13 (fontified t) 13 17 (fontified t) 17 18 (fontified t) 18 26 (fontified t face elixir-atom-face) 26 32 (fontified t) 32 40 (fontified t) 40 43 (fontified t)) . 177) (undo-tree-id51 . -43) (undo-tree-id52 . -33) (undo-tree-id53 . -33) (undo-tree-id54 . -13) (undo-tree-id55 . 1) (undo-tree-id56 . -43) (undo-tree-id57 . 3) (undo-tree-id58 . -41) (undo-tree-id59 . -43) (undo-tree-id60 . -43) 220) nil (25416 42253 51450 833000) 0 nil])
([nil nil ((nil rear-nonsticky nil 218 . 219) (nil fontified nil 216 . 219) (nil fontified nil 208 . 216) (nil fontified nil 202 . 208) (nil fontified nil 194 . 202) (nil fontified nil 193 . 194) (nil fontified nil 189 . 193) (nil fontified nil 188 . 189) (nil fontified nil 181 . 188) (nil fontified nil 176 . 181) (176 . 219)) nil (25416 42253 51415 556000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -219) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . 1) (undo-tree-id96 . -1) 220 (t 25416 42253 64811 120000)) nil (25416 42291 747267 922000) 0 nil])
([nil nil ((#("J" 0 1 (fontified t face font-lock-type-face)) . -163) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (#("a" 0 1 (fontified t face font-lock-type-face)) . -164) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (#("s" 0 1 (fontified t face font-lock-type-face)) . -165) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (#("o" 0 1 (fontified t face font-lock-type-face)) . -166) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (#("n" 0 1 (fontified t face font-lock-type-face)) . -167) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (#("." 0 1 (fontified t face font-lock-type-face)) . -168) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (#("e" 0 1 (fontified t)) . -169) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (#("n" 0 1 (fontified t)) . -170) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (#("c" 0 1 (fontified t)) . -171) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (#("o" 0 1 (fontified t)) . -172) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (#("d" 0 1 (fontified t)) . -173) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (#("e" 0 1 (fontified t)) . -174) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (#("(" 0 1 (fontified t)) . -175) (undo-tree-id88 . -1) (undo-tree-id89 . -1) 176) nil (25416 42291 747246 762000) 0 nil])
([nil nil ((196 . 201)) nil (25416 42291 747197 129000) 0 nil])
([nil nil ((211 . 216)) nil (25416 42291 747195 145000) 0 nil])
([nil nil ((216 . 227)) nil (25416 42291 747193 362000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -225) (undo-tree-id62 . -1) (#("o" 0 1 (fontified t)) . -226) (undo-tree-id63 . -1) 227) nil (25416 42291 747190 817000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -232) (232 . 233) (#(")" 0 1 (fontified nil)) . -232) (232 . 233) (225 . 233)) nil (25416 42291 747183 814000) 0 nil])
([nil nil ((233 . 238)) nil (25416 42291 747180 287000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -246) (246 . 247) (#(")" 0 1 (fontified nil)) . -246) (246 . 247) (238 . 247)) nil (25416 42291 747177 512000) 0 nil])
([nil nil ((246 . 247)) nil (25416 42291 747173 604000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . -246) (undo-tree-id61 . -1) 247) nil (25416 42291 747168 956000) 0 nil])
([nil nil ((246 . 247)) nil (25416 42291 747147 85000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -145) (undo-tree-id165 . -1) (#(" " 0 1 (fontified t face font-lock-comment-delimiter-face)) . -146) (undo-tree-id166 . -1) (#("r" 0 1 (fontified t face font-lock-comment-face)) . -147) (undo-tree-id167 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -148) (undo-tree-id168 . -1) (#("n" 0 1 (fontified t face font-lock-comment-face)) . -149) (undo-tree-id169 . -1) (#("d" 0 1 (fontified t face font-lock-comment-face)) . -150) (undo-tree-id170 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -151) (undo-tree-id171 . -1) (#("r" 0 1 (fontified t face font-lock-comment-face)) . -152) (undo-tree-id172 . -1) (#("_" 0 1 (fontified t face font-lock-comment-face)) . -153) (undo-tree-id173 . -1) (#("l" 0 1 (fontified t face font-lock-comment-face)) . -154) (undo-tree-id174 . -1) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -155) (undo-tree-id175 . -1) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -156) (undo-tree-id176 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -157) (undo-tree-id177 . -1) 158 (t 25416 42291 761076 469000)) nil (25416 43173 274549 514000) 0 nil])
([nil nil ((145 . 151)) nil (25416 43173 274522 193000) 0 nil])
([nil nil ((#("data[:credits]|> hd)" 0 4 (fontified t) 4 5 (fontified t) 5 13 (fontified t face elixir-atom-face) 13 19 (fontified t) 19 20 (fontified t)) . 169) (undo-tree-id161 . -20) (undo-tree-id162 . -20) (undo-tree-id163 . 1) (undo-tree-id164 . -20) 189) nil (25416 43173 274519 458000) 0 nil])
([nil nil ((169 . 170) (#(")" 0 1 (fontified nil)) . -169) (169 . 170)) nil (25416 43173 274511 122000) 0 nil])
([nil nil ((#("E" 0 1 (fontified t face font-lock-type-face)) . -146) (undo-tree-id156 . -1) (#("n" 0 1 (fontified t face font-lock-type-face)) . -147) (undo-tree-id157 . -1) (#("u" 0 1 (fontified t face font-lock-type-face)) . -148) (undo-tree-id158 . -1) (#("m" 0 1 (fontified t face font-lock-type-face)) . -149) (undo-tree-id159 . -1) (#("." 0 1 (fontified t)) . -150) (undo-tree-id160 . -1) 151) nil (25416 43173 274506 483000) 0 nil])
([nil nil ((nil rear-nonsticky nil 172 . 173) (nil fontified nil 146 . 173) (146 . 173)) nil (25416 43173 274494 601000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t face font-lock-constant-face)) . -152) (undo-tree-id135 . -1) (#("_" 0 1 (fontified t)) . -153) (undo-tree-id136 . -1) (#("s" 0 1 (fontified t)) . -154) (undo-tree-id137 . -1) (#("t" 0 1 (fontified t)) . -155) (undo-tree-id138 . -1) (#("r" 0 1 (fontified t)) . -156) (undo-tree-id139 . -1) (#("u" 0 1 (fontified t)) . -157) (undo-tree-id140 . -1) (#("c" 0 1 (fontified t)) . -158) (undo-tree-id141 . -1) (#("t" 0 1 (fontified t)) . -159) (undo-tree-id142 . -1) (#("_" 0 1 (fontified t)) . -160) (undo-tree-id143 . -1) (#("_" 0 1 (fontified t)) . -161) (undo-tree-id144 . -1) (#(" " 0 1 (fontified t)) . -162) (undo-tree-id145 . -1) (#("i" 0 1 (fontified t)) . -163) (undo-tree-id146 . -1) (#("n" 0 1 (fontified t face font-lock-keyword-face)) . -164) (undo-tree-id147 . -1) (#(" " 0 1 (fontified t)) . -165) (undo-tree-id148 . -1) (#("p" 0 1 (fontified t)) . -166) (undo-tree-id149 . -1) (#("h" 0 1 (fontified t)) . -167) (undo-tree-id150 . -1) (#("o" 0 1 (fontified t)) . -168) (undo-tree-id151 . -1) (#("e" 0 1 (fontified t)) . -169) (undo-tree-id152 . -1) (#("n" 0 1 (fontified t)) . -170) (undo-tree-id153 . -1) (#("i" 0 1 (fontified t)) . -171) (undo-tree-id154 . -1) (#("x" 0 1 (fontified t rear-nonsticky t)) . -172) (undo-tree-id155 . -1) 173) nil (25416 43173 274483 850000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -146) (undo-tree-id129 . -1) (#("s" 0 1 (fontified t)) . -147) (undo-tree-id130 . -1) (#("i" 0 1 (fontified t)) . -148) (undo-tree-id131 . -1) (#("n" 0 1 (fontified t)) . -149) (undo-tree-id132 . -1) (#("g" 0 1 (fontified t)) . -150) (undo-tree-id133 . -1) (#(" " 0 1 (fontified t)) . -151) (undo-tree-id134 . -1) 152) nil (25416 43173 274434 467000) 0 nil])
([nil nil ((nil rear-nonsticky nil 172 . 173) (nil fontified nil 146 . 173) (146 . 173)) nil (25416 43173 274420 90000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t face font-lock-constant-face)) . -152) (undo-tree-id108 . -1) (#("_" 0 1 (fontified t)) . -153) (undo-tree-id109 . -1) (#("s" 0 1 (fontified t)) . -154) (undo-tree-id110 . -1) (#("t" 0 1 (fontified t)) . -155) (undo-tree-id111 . -1) (#("r" 0 1 (fontified t)) . -156) (undo-tree-id112 . -1) (#("u" 0 1 (fontified t)) . -157) (undo-tree-id113 . -1) (#("c" 0 1 (fontified t)) . -158) (undo-tree-id114 . -1) (#("t" 0 1 (fontified t)) . -159) (undo-tree-id115 . -1) (#("_" 0 1 (fontified t)) . -160) (undo-tree-id116 . -1) (#("_" 0 1 (fontified t)) . -161) (undo-tree-id117 . -1) (#(" " 0 1 (fontified t)) . -162) (undo-tree-id118 . -1) (#("i" 0 1 (fontified t)) . -163) (undo-tree-id119 . -1) (#("n" 0 1 (fontified t face font-lock-keyword-face)) . -164) (undo-tree-id120 . -1) (#(" " 0 1 (fontified t)) . -165) (undo-tree-id121 . -1) (#("p" 0 1 (fontified t)) . -166) (undo-tree-id122 . -1) (#("h" 0 1 (fontified t)) . -167) (undo-tree-id123 . -1) (#("o" 0 1 (fontified t)) . -168) (undo-tree-id124 . -1) (#("e" 0 1 (fontified t)) . -169) (undo-tree-id125 . -1) (#("n" 0 1 (fontified t)) . -170) (undo-tree-id126 . -1) (#("i" 0 1 (fontified t)) . -171) (undo-tree-id127 . -1) (#("x" 0 1 (fontified t rear-nonsticky t)) . -172) (undo-tree-id128 . -1) 173) nil (25416 43173 274408 839000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -146) (undo-tree-id102 . -1) (#("s" 0 1 (fontified t)) . -147) (undo-tree-id103 . -1) (#("i" 0 1 (fontified t)) . -148) (undo-tree-id104 . -1) (#("n" 0 1 (fontified t)) . -149) (undo-tree-id105 . -1) (#("g" 0 1 (fontified t)) . -150) (undo-tree-id106 . -1) (#(" " 0 1 (fontified t)) . -151) (undo-tree-id107 . -1) 152) nil (25416 43173 274359 716000) 0 nil])
([nil nil ((146 . 149)) nil (25416 43173 274349 597000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -147) (undo-tree-id100 . -1) (#("a" 0 1 (fontified t)) . -148) (undo-tree-id101 . -1) 149) nil (25416 43173 274347 233000) 0 nil])
([nil nil ((147 . 150)) nil (25416 43173 274314 431000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -148) (undo-tree-id98 . -1) (#("a" 0 1 (fontified t)) . -149) (undo-tree-id99 . -1) 150) nil (25416 43173 274312 227000) 0 nil])
([nil nil ((#("]" 0 1 (fontified nil)) . -151) (151 . 152) (#("]" 0 1 (fontified nil)) . -151) (151 . 152) (148 . 152)) nil (25416 43173 274306 706000) 0 nil])
([nil nil ((151 . 153)) nil (25416 43173 274303 891000) 0 nil])
([nil nil ((153 . 154)) nil (25416 43173 274302 498000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face elixir-atom-face)) . -153) (undo-tree-id97 . -1) 154) nil (25416 43173 274299 643000) 0 nil])
([nil nil ((153 . 158)) nil (25416 43173 274287 89000) 0 nil])
([nil nil ((164 . 167)) nil (25416 43173 274281 549000) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -164) (undo-tree-id178 . -1) (#(">" 0 1 (fontified t)) . -165) (undo-tree-id179 . -1) (#(" " 0 1 (fontified t)) . -166) (undo-tree-id180 . -1) 167 (t 25416 43173 309951 281000)) nil (25416 43184 233034 477000) 0 nil])
([nil nil ((159 . 162) (t 25416 43184 242080 79000)) nil (25416 43215 362211 704000) 0 nil])
([nil nil ((160 . 161)) nil (25416 43215 362208 267000) 0 nil])
([nil nil ((159 . 160)) nil (25416 43215 362200 633000) 0 nil])
([nil nil ((161 . 162) (t 25416 43215 370448 55000)) nil (25416 43224 782699 797000) 0 nil])
([nil nil ((158 . 159) (t 25416 43224 794559 817000)) nil (25416 43234 956438 271000) 0 nil])
([nil nil ((171 . 174) (t 25416 43234 966680 631000)) nil (25416 43242 727343 997000) 0 nil])
([nil nil ((161 . 173) (t 25416 43242 726772 923000)) nil (25416 43329 938269 577000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -169) (undo-tree-id191 . -1) (#("a" 0 1 (fontified t)) . -170) (undo-tree-id192 . -1) (#("p" 0 1 (fontified t)) . -171) (undo-tree-id193 . -1) (#(" " 0 1 (fontified t)) . -172) (undo-tree-id194 . -1) 173) nil (25416 43329 938265 499000) 0 nil])
([nil nil ((169 . 176)) nil (25416 43329 938147 727000) 0 nil])
([nil nil ((#("    " 0 1 (fontified t) 1 4 (fontified t)) . 182) (undo-tree-id188 . -4) (undo-tree-id189 . -4) (undo-tree-id190 . -4) (186 . 187)) nil (25416 43329 938145 142000) 0 nil])
([nil nil ((183 . 187)) nil (25416 43329 938137 878000) 0 nil])
([nil nil ((142 . 144)) nil (25416 43329 938136 125000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 142) (#(" " 0 1 (fontified t)) . 142)) nil (25416 43329 938133 790000) 0 nil])
([nil nil ((182 . 189)) nil (25416 43329 938131 486000) 0 nil])
([nil nil ((189 . 193) (#(" " 0 1 (fontified nil)) . 188) (undo-tree-id187 . -1) (189 . 190)) nil (25416 43329 938129 152000) 0 nil])
([nil nil ((188 . 194)) nil (25416 43329 938124 363000) 0 nil])
([nil nil ((194 . 199)) nil (25416 43329 938121 948000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t face font-lock-type-face)) . -193) (undo-tree-id181 . -1) (#("f" 0 1 (fontified t face font-lock-type-face)) . -194) (undo-tree-id182 . -1) (#("r" 0 1 (fontified t face font-lock-type-face)) . -195) (undo-tree-id183 . -1) (#("o" 0 1 (fontified t face font-lock-type-face)) . -196) (undo-tree-id184 . -1) (#("m" 0 1 (fontified t face font-lock-type-face)) . -197) (undo-tree-id185 . -1) (#("_" 0 1 (fontified t face font-lock-type-face)) . -198) (undo-tree-id186 . -1) 199) nil (25416 43329 938116 498000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -205) (205 . 206) (#(")" 0 1 (fontified nil)) . -205) (205 . 206) (193 . 206)) nil (25416 43329 938081 391000) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -161) (undo-tree-id195 . -1) (#(">" 0 1 (fontified t)) . -162) (undo-tree-id196 . -1) (#(" " 0 1 (fontified t)) . -163) (undo-tree-id197 . -1) (#("E" 0 1 (fontified t face font-lock-type-face)) . -164) (undo-tree-id198 . -1) (#("n" 0 1 (fontified t face font-lock-type-face)) . -165) (undo-tree-id199 . -1) (#("u" 0 1 (fontified t face font-lock-type-face)) . -166) (undo-tree-id200 . -1) (#("m" 0 1 (fontified t face font-lock-type-face)) . -167) (undo-tree-id201 . -1) (#("." 0 1 (fontified t)) . -168) (undo-tree-id202 . -1) (#("f" 0 1 (fontified t)) . -169) (undo-tree-id203 . -1) (#("i" 0 1 (fontified t)) . -170) (undo-tree-id204 . -1) (#("l" 0 1 (fontified t)) . -171) (undo-tree-id205 . -1) (#("t" 0 1 (fontified t)) . -172) (undo-tree-id206 . -1) (#("e" 0 1 (fontified t)) . -173) (undo-tree-id207 . -1) (#("r" 0 1 (fontified t)) . -174) (undo-tree-id208 . -1) (#(" " 0 1 (fontified t)) . -175) (undo-tree-id209 . -1) 176 (t 25416 43329 947817 74000)) nil (25416 43345 732647 689000) 0 nil])
([nil nil ((#("M" 0 1 (fontified t face font-lock-type-face)) . -174) (undo-tree-id241 . -1) (#("a" 0 1 (fontified t face font-lock-type-face)) . -175) (undo-tree-id242 . -1) (#("p" 0 1 (fontified t face font-lock-type-face)) . -176) (undo-tree-id243 . -1) (#("." 0 1 (fontified t)) . -177) (undo-tree-id244 . -1) (#("f" 0 1 (fontified t)) . -178) (undo-tree-id245 . -1) (#("r" 0 1 (fontified t)) . -179) (undo-tree-id246 . -1) (#("o" 0 1 (fontified t)) . -180) (undo-tree-id247 . -1) (#("m" 0 1 (fontified t)) . -181) (undo-tree-id248 . -1) (#("_" 0 1 (fontified t)) . -182) (undo-tree-id249 . -1) (#("s" 0 1 (fontified t)) . -183) (undo-tree-id250 . -1) (#("t" 0 1 (fontified t)) . -184) (undo-tree-id251 . -1) (#("r" 0 1 (fontified t)) . -185) (undo-tree-id252 . -1) (#("u" 0 1 (fontified t)) . -186) (undo-tree-id253 . -1) (#("c" 0 1 (fontified t)) . -187) (undo-tree-id254 . -1) (#("t" 0 1 (fontified t)) . -188) (undo-tree-id255 . -1) (#("(" 0 1 (fontified t)) . -189) (undo-tree-id256 . -1) (#(")" 0 1 (fontified t)) . -190) (undo-tree-id257 . -1) (undo-tree-id258 . 1) (undo-tree-id259 . -1) 191 (t 25416 43345 744007 426000)) nil (25416 43425 246040 801000) 0 nil])
([nil nil ((174 . 185)) nil (25416 43425 246000 465000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -182) (undo-tree-id238 . -1) (#("r" 0 1 (fontified t)) . -183) (undo-tree-id239 . -1) (#("e" 0 1 (fontified t)) . -184) (undo-tree-id240 . -1) 185) nil (25416 43425 245997 429000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -186) (186 . 187) (#(")" 0 1 (fontified nil)) . -186) (186 . 187) (182 . 187)) nil (25416 43425 245988 272000) 0 nil])
([nil nil ((186 . 194)) nil (25416 43425 245984 194000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -160) (undo-tree-id232 . -1) (#("|" 0 1 (fontified t)) . -161) (undo-tree-id233 . -1) (#(">" 0 1 (fontified t)) . -162) (undo-tree-id234 . -1) (#(" " 0 1 (fontified t)) . -163) (undo-tree-id235 . -1) (#("h" 0 1 (fontified t)) . -164) (undo-tree-id236 . -1) (#("d" 0 1 (fontified t)) . -165) (undo-tree-id237 . -1) 166) nil (25416 43425 245979 816000) 0 nil])
([nil nil ((188 . 196)) nil (25416 43425 245965 889000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -173) (undo-tree-id226 . -1) (#("i" 0 1 (fontified t)) . -174) (undo-tree-id227 . -1) (#("l" 0 1 (fontified t)) . -175) (undo-tree-id228 . -1) (#("t" 0 1 (fontified t)) . -176) (undo-tree-id229 . -1) (#("e" 0 1 (fontified t)) . -177) (undo-tree-id230 . -1) (#("r" 0 1 (fontified t)) . -178) (undo-tree-id231 . -1) 179) nil (25416 43425 245961 421000) 0 nil])
([nil nil ((173 . 177)) nil (25416 43425 245947 475000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -178) (undo-tree-id210 . -1) (#("n" 0 1 (fontified t face font-lock-keyword-face)) . -179) (undo-tree-id211 . -1) (#(" " 0 1 (fontified t)) . -180) (undo-tree-id212 . -1) (#("x" 0 1 (fontified t)) . -181) (undo-tree-id213 . -1) (#(" " 0 1 (fontified t)) . -182) (undo-tree-id214 . -1) (#("-" 0 1 (fontified t)) . -183) (undo-tree-id215 . -1) (#(">" 0 1 (fontified t)) . -184) (undo-tree-id216 . -1) (#(" " 0 1 (fontified t)) . -185) (undo-tree-id217 . -1) (#("x" 0 1 (fontified t)) . -186) (undo-tree-id218 . -1) (#("." 0 1 (fontified t)) . -187) (undo-tree-id219 . -1) (#("_" 0 1 (fontified t face font-lock-constant-face)) . -188) (undo-tree-id220 . -1) (#("_" 0 1 (fontified t)) . -189) (undo-tree-id221 . -1) (#("m" 0 1 (fontified t)) . -190) (undo-tree-id222 . -1) (#("e" 0 1 (fontified t)) . -191) (undo-tree-id223 . -1) (#("t" 0 1 (fontified t)) . -192) (undo-tree-id224 . -1) (#("a" 0 1 (fontified t)) . -193) (undo-tree-id225 . -1) 194) nil (25416 43425 245938 167000) 0 nil])
([nil nil ((178 . 184)) nil (25416 43425 245718 572000) 0 nil])
([nil nil ((184 . 186)) nil (25416 43425 245715 416000) 0 nil])
([nil nil ((178 . 179)) nil (25416 43425 245708 83000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -173) (undo-tree-id271 . -1) (#("r" 0 1 (fontified t)) . -174) (undo-tree-id272 . -1) (#("o" 0 1 (fontified t)) . -175) (undo-tree-id273 . -1) (#("p" 0 1 (fontified t)) . -176) (undo-tree-id274 . -1) 177 (t 25416 43425 248970 685000)) nil (25416 44081 842375 995000) 0 nil])
([nil nil ((173 . 183)) nil (25416 44081 842364 565000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -184) (undo-tree-id262 . -1) (#("_" 0 1 (fontified t face elixir-atom-face)) . -185) (undo-tree-id263 . -1) (#("_" 0 1 (fontified t face elixir-atom-face)) . -186) (undo-tree-id264 . -1) (#("m" 0 1 (fontified t face elixir-atom-face)) . -187) (undo-tree-id265 . -1) (#("e" 0 1 (fontified t face elixir-atom-face)) . -188) (undo-tree-id266 . -1) (#("t" 0 1 (fontified t face elixir-atom-face)) . -189) (undo-tree-id267 . -1) (#("a" 0 1 (fontified t face elixir-atom-face)) . -190) (undo-tree-id268 . -1) (#("_" 0 1 (fontified t face elixir-atom-face)) . -191) (undo-tree-id269 . -1) (#("_" 0 1 (fontified t face elixir-atom-face)) . -192) (undo-tree-id270 . -1) 193) nil (25416 44081 842358 53000) 0 nil])
([nil nil ((187 . 191) (#("    " 0 4 (fontified t)) . 186) (undo-tree-id260 . -4) (undo-tree-id261 . -4) (190 . 191)) nil (25416 44081 842335 12000) 0 nil])
([nil nil ((185 . 190)) nil (25416 44081 842310 337000) 0 nil])
([nil nil ((184 . 194) (t 25416 44081 880116 410000)) nil (25416 44126 351842 546000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -193) (undo-tree-id283 . -1) 194) nil (25416 44126 351839 851000) 0 nil])
([nil nil ((193 . 194)) nil (25416 44126 351836 164000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -193) (undo-tree-id282 . -1) 194) nil (25416 44126 351833 790000) 0 nil])
([nil nil ((193 . 194)) nil (25416 44126 351829 933000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -193) (undo-tree-id281 . -1) 194) nil (25416 44126 351827 469000) 0 nil])
([nil nil ((193 . 202)) nil (25416 44126 351823 271000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -196) (undo-tree-id275 . -1) (#("t" 0 1 (fontified t)) . -197) (undo-tree-id276 . -1) (#("r" 0 1 (fontified t)) . -198) (undo-tree-id277 . -1) (#("u" 0 1 (fontified t)) . -199) (undo-tree-id278 . -1) (#("c" 0 1 (fontified t)) . -200) (undo-tree-id279 . -1) (#("t" 0 1 (fontified t)) . -201) (undo-tree-id280 . -1) 202) nil (25416 44126 351818 673000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -203) (203 . 204) (#(")" 0 1 (fontified nil)) . -203) (203 . 204) (196 . 204)) nil (25416 44126 351786 875000) 0 nil])
([nil nil ((203 . 210)) nil (25416 44126 351782 467000) 0 nil])
([nil nil ((211 . 214)) nil (25416 44126 351780 103000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified nil)) . -215) (215 . 216) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . -215) (215 . 216) (214 . 216) (#("\"" 0 1 (fontified nil syntax-table (15))) . -214) (214 . 215)) nil (25416 44126 351774 904000) 0 nil])
([nil nil ((215 . 220)) nil (25416 44126 351764 364000) 0 nil])
([nil nil ((221 . 225) (t 25416 44126 353046 813000)) nil (25416 44134 994350 144000) 0 nil])
([nil nil ((225 . 226)) nil (25416 44134 994341 789000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -202) (undo-tree-id284 . -1) (#(":" 0 1 (fontified t)) . -203) (undo-tree-id285 . -1) (#("s" 0 1 (fontified t)) . -204) (undo-tree-id286 . -1) (#("o" 0 1 (fontified t)) . -205) (undo-tree-id287 . -1) (#("u" 0 1 (fontified t)) . -206) (undo-tree-id288 . -1) (#("r" 0 1 (fontified t)) . -207) (undo-tree-id289 . -1) (#("c" 0 1 (fontified t)) . -208) (undo-tree-id290 . -1) (#("e" 0 1 (fontified t)) . -209) (undo-tree-id291 . -1) (#(")" 0 1 (fontified t)) . -210) (undo-tree-id292 . -1) (undo-tree-id293 . 1) (undo-tree-id294 . -1) 211 (t 25416 44134 996481 968000)) nil (25416 44215 744458 331000) 0 nil])
([nil nil ((202 . 203)) nil (25416 44215 744423 868000) 0 nil])
([nil nil ((206 . 207)) nil (25416 44215 744421 624000) 0 nil])
([nil nil ((213 . 214)) nil (25416 44215 744418 448000) 0 nil])
([nil nil ((207 . 215)) nil (25416 44215 744411 55000) 0 nil])
([nil nil ((#("<" 0 1 (fontified t)) . -206) (undo-tree-id296 . -1) 207 (t 25416 44215 783660 750000)) nil (25416 44231 221564 843000) 0 nil])
([nil nil ((#(">" 0 1 (fontified t face font-lock-string-face)) . -220) (undo-tree-id295 . -1) 221) nil (25416 44231 221558 141000) 0 nil])
([nil nil ((221 . 222)) nil (25416 44231 221541 410000) 0 nil])
([nil nil ((206 . 207)) nil (25416 44231 221533 896000) 0 nil])
([nil nil ((#(">" 0 1 (fontified t)) . 206) (#("\"" 0 1 (fontified t syntax-table (15) face font-lock-string-face)) . 206) (#("a" 0 1 (fontified t)) . 206) (#("t" 0 1 (fontified t)) . 206) (#("o" 0 1 (fontified t)) . 206) (#("u" 0 1 (fontified t)) . 206) (#("q" 0 1 (fontified t)) . 206) (#("\"" 0 1 (fontified t syntax-table (15) face font-lock-string-face)) . 206) (#(" " 0 1 (fontified t)) . 206) (#("d" 0 1 (fontified t)) . 206) (#("e" 0 1 (fontified t)) . 206) (#("d" 0 1 (fontified t)) . 206) (#("a" 0 1 (fontified t)) . 206) (#("o" 0 1 (fontified t)) . 206) (#("l" 0 1 (fontified t)) . 206) (#(":" 0 1 (fontified t face elixir-atom-face)) . 206) (#("<" 0 1 (fontified t)) . 206) (t 25416 44231 230826 925000)) nil (25416 44404 178003 787000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified nil)) . -207) (207 . 208) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . -207) (207 . 208) (206 . 208) (#("\"" 0 1 (fontified nil syntax-table (15))) . -206) (206 . 207)) nil (25416 44404 177993 799000) 0 nil])
([nil nil ((nil rear-nonsticky nil 244 . 245) (nil fontified nil 207 . 245) (nil fontified t 207 . 245) (nil face font-lock-string-face 207 . 245) (207 . 245)) nil (25416 44404 177988 930000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t syntax-table (15) face font-lock-string-face)) . -245) (undo-tree-id301 . -1) 246) nil (25416 44404 177984 903000) 0 nil])
([nil nil ((245 . 246)) nil (25416 44404 177978 261000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t syntax-table (15) face font-lock-string-face)) . -206) (undo-tree-id299 . -1) (undo-tree-id300 . -1) 207) nil (25416 44404 177975 556000) 0 nil])
([nil nil ((206 . 208) (#("'" 0 1 (fontified nil syntax-table (15))) . -206) (206 . 207)) nil (25416 44404 177969 244000) 0 nil])
([nil nil ((#("'" 0 1 (fontified nil syntax-table (15) face font-lock-string-face)) . -206) (undo-tree-id298 . -1) (#("'" 0 1 (fontified t syntax-table (15) face font-lock-string-face)) . 207)) nil (25416 44404 177965 577000) 0 nil])
([nil nil ((206 . 208) (#("'" 0 1 (fontified nil syntax-table (15))) . -206) (206 . 207)) nil (25416 44404 177959 165000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t syntax-table (15) face font-lock-string-face)) . -207) (undo-tree-id297 . -1) 208) nil (25416 44404 177950 339000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -196) (undo-tree-id309 . -1) (#("e" 0 1 (fontified t)) . -197) (undo-tree-id310 . -1) (#("t" 0 1 (fontified t)) . -198) (undo-tree-id311 . -1) (#("a" 0 1 (fontified t)) . -199) (undo-tree-id312 . -1) 200 (t 25416 44404 195113 978000)) nil (25416 44465 755640 976000) 0 nil])
([nil nil ((196 . 202)) nil (25416 44465 755631 78000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -205) (205 . 206) (#(")" 0 1 (fontified nil)) . -205) (205 . 206) (204 . 206)) nil (25416 44465 755628 533000) 0 nil])
([nil nil ((205 . 210)) nil (25416 44465 755624 776000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t face elixir-atom-face)) . -207) (undo-tree-id306 . -1) (#("o" 0 1 (fontified t face elixir-atom-face)) . -208) (undo-tree-id307 . -1) (#("u" 0 1 (fontified t face elixir-atom-face)) . -209) (undo-tree-id308 . -1) 210) nil (25416 44465 755621 650000) 0 nil])
([nil nil ((207 . 212)) nil (25416 44465 755613 846000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t face elixir-atom-face)) . -211) (undo-tree-id305 . -1) 212) nil (25416 44465 755611 402000) 0 nil])
([nil nil ((211 . 212)) nil (25416 44465 755606 913000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t face font-lock-string-face)) . 218) (#("t" 0 1 (fontified t face font-lock-string-face)) . 218) (#("a" 0 1 (fontified t face font-lock-string-face)) . 218) (#("d" 0 1 (fontified t face font-lock-string-face)) . 218) (#("a" 0 1 (fontified t face font-lock-string-face)) . 218) (#("t" 0 1 (fontified t face font-lock-string-face)) . 218) (#("e" 0 1 (fontified t face font-lock-string-face)) . 218) (#("M" 0 1 (fontified t face font-lock-string-face)) . 218) (#("." 0 1 (fontified t face font-lock-string-face)) . 218) (#("a" 0 1 (fontified t face font-lock-string-face)) . 218) (#("m" 0 1 (fontified t face font-lock-string-face)) . 218) (#("e" 0 1 (fontified t face font-lock-string-face)) . 218) (#("h" 0 1 (fontified t face font-lock-string-face)) . 218) (#("c" 0 1 (fontified t face font-lock-string-face)) . 218) (#("S" 0 1 (fontified t face font-lock-string-face)) . 218) (#("." 0 1 (fontified t face font-lock-string-face)) . 218) (#("o" 0 1 (fontified t face font-lock-string-face)) . 218) (#("t" 0 1 (fontified t face font-lock-string-face)) . 218) (#("c" 0 1 (fontified t face font-lock-string-face)) . 218) (#("E" 0 1 (fontified t face font-lock-string-face)) . 218) (#("#" 0 1 (fontified t face font-lock-string-face)) . 218)) nil (25416 44465 755599 69000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . 218) (#("," 0 1 (fontified t face font-lock-string-face)) . 218) (#("t" 0 1 (fontified t face font-lock-string-face)) . 218) (#("l" 0 1 (fontified t face font-lock-string-face)) . 218) (#("i" 0 1 (fontified t face font-lock-string-face)) . 218) (#("u" 0 1 (fontified t face font-lock-string-face)) . 218) (#("b" 0 1 (fontified t face font-lock-string-face)) . 218) (#(":" 0 1 (fontified t face font-lock-string-face)) . 218) (#("<" 0 1 (fontified t face font-lock-string-face)) . 218)) nil (25416 44465 755585 554000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t syntax-table (15) face font-lock-string-face)) . -217) (undo-tree-id304 . -1) 218) nil (25416 44465 755579 302000) 0 nil])
([nil nil ((#(">" 0 1 (fontified t rear-nonsticky t)) . -224) (undo-tree-id303 . -1) 225) nil (25416 44465 755573 452000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t syntax-table (15) face font-lock-string-face)) . -224) (undo-tree-id302 . -1) 225) nil (25416 44465 755563 283000) 0 nil])
([nil nil ((160 . 165) (t 25416 44465 796979 463000)) nil (25416 44513 865928 210000) 0 nil])
([nil nil ((160 . 161)) nil (25416 44513 865924 483000) 0 nil])
([nil nil ((166 . 167)) nil (25416 44513 865916 458000) 0 nil])
([nil nil ((167 . 171) (#(" " 0 1 (fontified nil)) . 166) (undo-tree-id313 . -1) (167 . 168) (t 25416 44513 867498 958000)) nil (25416 44522 987734 998000) 0 nil])
([nil nil ((171 . 174)) nil (25416 44522 987718 708000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -185) (185 . 186) (#(")" 0 1 (fontified nil)) . -185) (185 . 186) (174 . 186)) nil (25416 44522 987714 290000) 0 nil])
([nil nil ((186 . 191)) nil (25416 44522 987709 571000) 0 nil])
([nil nil ((192 . 193)) nil (25416 44522 987702 7000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t face font-lock-type-face)) . -175) (undo-tree-id314 . -1) 176 (t 25416 44523 27233 873000)) nil (25416 44530 558519 695000) 0 nil])
([nil nil ((175 . 176)) nil (25416 44530 558498 546000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -160) (undo-tree-id315 . -1) (#("|" 0 1 (fontified t)) . -161) (undo-tree-id316 . -1) (#(">" 0 1 (fontified t)) . -162) (undo-tree-id317 . -1) (#(" " 0 1 (fontified t)) . -163) (undo-tree-id318 . -1) (#("h" 0 1 (fontified t)) . -164) (undo-tree-id319 . -1) (#("d" 0 1 (fontified t)) . -165) (undo-tree-id320 . -1) 166 (t 25416 44530 559019 824000)) nil (25416 44556 816629 122000) 0 nil])
([nil nil ((160 . 161) (t 25416 44556 826300 179000)) nil (25416 44961 639187 563000) 0 nil])
([nil nil ((160 . 161)) nil (25416 44961 639184 748000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -160) (undo-tree-id321 . -1) 161) nil (25416 44961 639179 959000) 0 nil])
([nil nil ((161 . 167)) nil (25416 44961 639160 733000) 0 nil])
([nil nil ((146 . 150) (t 25416 44961 651250 312000)) nil (25416 45009 742507 649000) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -176) (undo-tree-id326 . -1) (#(">" 0 1 (fontified t)) . -177) (undo-tree-id327 . -1) (#(" " 0 1 (fontified t)) . -178) (undo-tree-id328 . -1) 179) nil (25416 45009 742504 143000) 0 nil])
([nil nil ((175 . 176)) nil (25416 45009 742496 198000) 0 nil])
([nil nil ((172 . 176) (#("    " 0 4 (fontified t)) . 171) (undo-tree-id324 . -4) (171 . 176) (#(" " 0 1 (fontified nil)) . 170) (undo-tree-id325 . -1) (171 . 172)) nil (25416 45009 742492 952000) 0 nil])
([nil nil ((176 . 186)) nil (25416 45009 742486 49000) 0 nil])
([nil nil ((186 . 188)) nil (25416 45009 742483 935000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -192) (undo-tree-id322 . -1) (#(" " 0 1 (fontified t face font-lock-comment-delimiter-face)) . -193) (undo-tree-id323 . -1) 194) nil (25416 45009 742479 136000) 0 nil])
([nil nil ((192 . 196)) nil (25416 45009 742453 238000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face font-lock-comment-face)) . -250) (undo-tree-id357 . -1) (#("c" 0 1 (fontified t face font-lock-comment-face)) . -251) (undo-tree-id358 . -1) (#("h" 0 1 (fontified t face font-lock-comment-face)) . -252) (undo-tree-id359 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -253) (undo-tree-id360 . -1) (#("m" 0 1 (fontified t face font-lock-comment-face)) . -254) (undo-tree-id361 . -1) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -255) (undo-tree-id362 . -1) 256 (t 25416 45009 782782 433000)) nil (25416 45068 681171 864000) 0 nil])
([nil nil ((250 . 256)) nil (25416 45068 681158 348000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t face font-lock-comment-face)) . -258) (undo-tree-id347 . -1) (#(":" 0 1 (fontified t face font-lock-comment-face)) . -259) (undo-tree-id348 . -1) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -260) (undo-tree-id349 . -1) (#("o" 0 1 (fontified t face font-lock-comment-face)) . -261) (undo-tree-id350 . -1) (#("u" 0 1 (fontified t face font-lock-comment-face)) . -262) (undo-tree-id351 . -1) (#("r" 0 1 (fontified t face font-lock-comment-face)) . -263) (undo-tree-id352 . -1) (#("c" 0 1 (fontified t face font-lock-comment-face)) . -264) (undo-tree-id353 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -265) (undo-tree-id354 . -1) (#(")" 0 1 (fontified t face font-lock-comment-face)) . -266) (undo-tree-id355 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -267) (undo-tree-id356 . -1) 268) nil (25416 45068 681152 538000) 0 nil])
([nil nil ((#("q" 0 1 (fontified t face font-lock-comment-face)) . -262) (undo-tree-id342 . -1) (#("u" 0 1 (fontified t face font-lock-comment-face)) . -263) (undo-tree-id343 . -1) (#("o" 0 1 (fontified t face font-lock-comment-face)) . -264) (undo-tree-id344 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -265) (undo-tree-id345 . -1) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -266) (undo-tree-id346 . -1) 267) nil (25416 45068 681129 515000) 0 nil])
([nil nil ((nil rear-nonsticky nil 298 . 299) (nil fontified nil 262 . 299) (nil fontified t 262 . 299) (nil face font-lock-comment-face 262 . 299) (262 . 299)) nil (25416 45068 681115 779000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t syntax-table (15) face font-lock-comment-face)) . -299) (undo-tree-id341 . -1) 300) nil (25416 45068 681111 771000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t syntax-table (15) face font-lock-comment-face)) . -262) (undo-tree-id340 . -1) 263) nil (25416 45068 681107 544000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -214) (undo-tree-id339 . -1) 215) nil (25416 45068 681102 755000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 209) (#(" " 0 1 (fontified t)) . 209)) nil (25416 45068 681098 156000) 0 nil])
([nil nil ((#("  
" 0 2 (fontified t) 2 3 (fontified t)) . 209) (undo-tree-id334 . -3) (undo-tree-id335 . -3) (undo-tree-id336 . -3) (undo-tree-id337 . -3) (undo-tree-id338 . -3)) nil (25416 45068 681094 680000) 0 nil])
([nil nil ((#("    |> IO.inspect()" 0 7 (fontified t) 7 9 (fontified t face font-lock-type-face) 9 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t)) . 189) (undo-tree-id333 . -19)) nil (25416 45068 681083 479000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 189) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1)) nil (25416 45068 681073 199000) 0 nil])
([nil nil ((278 . 283) (t 25416 45068 682285 119000)) nil (25416 45076 272151 392000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -297) (297 . 298) (#(")" 0 1 (fontified nil)) . -297) (297 . 298) (283 . 298)) nil (25416 45076 272141 523000) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -283) (undo-tree-id363 . -1) (#(">" 0 1 (fontified t)) . -284) (undo-tree-id364 . -1) (#(" " 0 1 (fontified t)) . -285) (undo-tree-id365 . -1) (#("I" 0 1 (fontified t face font-lock-type-face)) . -286) (undo-tree-id366 . -1) (#("O" 0 1 (fontified t face font-lock-type-face)) . -287) (undo-tree-id367 . -1) (#("." 0 1 (fontified t)) . -288) (undo-tree-id368 . -1) (#("i" 0 1 (fontified t)) . -289) (undo-tree-id369 . -1) (#("n" 0 1 (fontified t)) . -290) (undo-tree-id370 . -1) (#("s" 0 1 (fontified t)) . -291) (undo-tree-id371 . -1) (#("p" 0 1 (fontified t)) . -292) (undo-tree-id372 . -1) (#("e" 0 1 (fontified t)) . -293) (undo-tree-id373 . -1) (#("c" 0 1 (fontified t)) . -294) (undo-tree-id374 . -1) (#("t" 0 1 (fontified t)) . -295) (undo-tree-id375 . -1) (#("(" 0 1 (fontified t)) . -296) (undo-tree-id376 . -1) (#(")" 0 1 (fontified t)) . -297) (undo-tree-id377 . -1) (undo-tree-id378 . 1) (undo-tree-id379 . -1) 298 (t 25416 45076 282226 540000)) nil (25416 45087 960259 899000) 0 nil])
([nil nil ((#("k.__struct__" 0 2 (fontified t) 2 12 (fontified t)) . 176) (undo-tree-id380 . -12) (t 25416 45087 970138 825000)) nil (25416 45100 721647 490000) 0 nil])
([nil nil ((176 . 177)) nil (25416 45100 721605 962000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -164) (undo-tree-id381 . -1) (#("|" 0 1 (fontified t)) . -165) (undo-tree-id382 . -1) (#(">" 0 1 (fontified t)) . -166) (undo-tree-id383 . -1) (#(" " 0 1 (fontified t)) . -167) (undo-tree-id384 . -1) (#("h" 0 1 (fontified t)) . -168) (undo-tree-id385 . -1) (#("d" 0 1 (fontified t)) . -169) (undo-tree-id386 . -1) 170 (t 25416 45100 762046 50000)) nil (25416 45109 224300 267000) 0 nil])
([nil nil ((171 . 176) (t 25416 45109 233986 427000)) nil (25416 45126 616082 289000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -190) (190 . 191) (#(")" 0 1 (fontified nil)) . -190) (190 . 191) (176 . 191)) nil (25416 45126 616077 190000) 0 nil])
([nil nil ((195 . 196)) nil (25416 45126 616067 832000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -145) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (#("k" 0 1 (fontified t)) . -146) (undo-tree-id402 . -1) (#(" " 0 1 (fontified t)) . -147) (undo-tree-id403 . -1) (#("=" 0 1 (fontified t)) . -148) (undo-tree-id404 . -1) (#(" " 0 1 (fontified t)) . -149) (undo-tree-id405 . -1) 150 (t 25416 45126 653868 253000)) nil (25416 45141 340600 20000) 0 nil])
([nil nil ((145 . 146)) nil (25416 45141 340594 840000) 0 nil])
([nil nil ((143 . 147) (#("    " 0 4 (fontified nil)) . 142) (undo-tree-id396 . -3) (undo-tree-id397 . -4) (undo-tree-id398 . -3) (146 . 147)) nil (25416 45141 340593 798000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 162) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1)) nil (25416 45141 340591 13000) 0 nil])
([nil nil ((#("    k" 0 5 (fontified t)) . 162) (undo-tree-id391 . -5)) nil (25416 45141 340587 306000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 162) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1)) nil (25416 45141 340582 497000) 0 nil])
([nil nil ((162 . 163) (t 25416 45141 337773 153000)) nil (25416 45156 300769 671000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -183) (undo-tree-id406 . -1) (#(" " 0 1 (fontified t)) . -184) (undo-tree-id407 . -1) (#(" " 0 1 (fontified t)) . -185) (undo-tree-id408 . -1) (#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -186) (undo-tree-id409 . -1) 187) nil (25416 45156 300763 760000) 0 nil])
([nil nil ((183 . 187)) nil (25416 45156 300732 271000) 0 nil])
([nil nil ((290 . 291) (t 25416 45156 313680 271000)) nil (25416 45192 795999 8000) 0 nil])
([nil nil ((313 . 314)) nil (25416 45192 795996 403000) 0 nil])
([nil nil ((329 . 330)) nil (25416 45192 795993 637000) 0 nil])
([nil nil ((352 . 353)) nil (25416 45192 795986 113000) 0 nil])
([nil nil ((269 . 273) (#("     " 0 4 (fontified nil) 4 5 (fontified nil)) . -183) (273 . 274) (t 25416 45192 809470 656000)) nil (25416 45217 849198 989000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -287) (287 . 288) (#(")" 0 1 (fontified nil)) . -287) (287 . 288) (273 . 288)) nil (25416 45217 849189 281000) 0 nil])
([nil nil ((#("E" 0 1 (fontified t face font-lock-string-face)) . -226) (undo-tree-id410 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -227) (undo-tree-id411 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -228) (undo-tree-id412 . -1) (#("x" 0 1 (fontified t face font-lock-string-face)) . -229) (undo-tree-id413 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -230) (undo-tree-id414 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -231) (undo-tree-id415 . -1) (#("." 0 1 (fontified t face font-lock-string-face)) . -232) (undo-tree-id416 . -1) 233 (t 25416 45217 865339 789000)) nil (25416 45809 354669 110000) 0 nil])
([nil nil ((182 . 187) (t 25416 45809 368341 75000)) nil (25416 45850 188887 221000) 0 nil])
([nil nil ((187 . 188)) nil (25416 45850 188886 360000) 0 nil])
([nil nil ((161 . 172)) nil (25416 45850 188885 728000) 0 nil])
([nil nil ((161 . 167)) nil (25416 45850 188884 987000) 0 nil])
([nil nil ((161 . 162)) nil (25416 45850 188884 366000) 0 nil])
([nil nil ((147 . 151)) nil (25416 45850 188883 615000) 0 nil])
([nil nil ((172 . 173)) nil (25416 45850 188882 623000) 0 nil])
([nil nil ((172 . 176) (#(" " 0 1 (fontified nil)) . 171) (undo-tree-id417 . -1) (172 . 173)) nil (25416 45850 188878 635000) 0 nil])
([nil nil ((216 . 217) (t 25416 45850 200369 64000)) nil (25416 45862 558093 462000) 0 nil])
([nil nil ((188 . 193) (t 25416 45862 600379 123000)) nil (25416 45890 975050 38000) 0 nil])
([nil nil ((193 . 194)) nil (25416 45890 975041 942000) 0 nil])
([nil nil ((221 . 226) (t 25416 45890 976404 741000)) nil (25416 45933 666077 435000) 0 nil])
([nil nil ((#("]" 0 1 (fontified nil)) . -231) (231 . 232) (#("]" 0 1 (fontified nil)) . -231) (231 . 232) (226 . 232)) nil (25416 45933 666074 529000) 0 nil])
([nil nil ((231 . 239)) nil (25416 45933 666071 604000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -241) (undo-tree-id418 . -1) 242) nil (25416 45933 666068 879000) 0 nil])
([nil nil ((241 . 245)) nil (25416 45933 666056 455000) 0 nil])
([nil nil ((143 . 144)) nil (25416 45933 666054 742000) 0 nil])
([nil nil ((173 . 174)) nil (25416 45933 666052 498000) 0 nil])
([nil nil ((191 . 192)) nil (25416 45933 666046 697000) 0 nil])
([nil nil ((287 . 288) (t 25416 45933 668449 735000)) nil (25416 45945 831334 977000) 0 nil])
([nil nil ((291 . 292)) nil (25416 45945 831332 172000) 0 nil])
([nil nil ((293 . 300)) nil (25416 45945 831326 20000) 0 nil])
([nil nil ((243 . 248) (t 25416 45945 836463 899000)) nil (25416 46026 546353 198000) 0 nil])
([nil nil ((249 . 250)) nil (25416 46026 546351 365000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -260) (260 . 261) (#(")" 0 1 (fontified nil)) . -260) (260 . 261) (245 . 261)) nil (25416 46026 546349 211000) 0 nil])
([nil nil ((260 . 265)) nil (25416 46026 546346 105000) 0 nil])
([nil nil ((265 . 269)) nil (25416 46026 546344 742000) 0 nil])
([nil nil ((268 . 280)) nil (25416 46026 546343 279000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -280) (undo-tree-id421 . -1) 281) nil (25416 46026 546341 346000) 0 nil])
([nil nil ((279 . 280)) nil (25416 46026 546337 819000) 0 nil])
([nil nil ((281 . 285)) nil (25416 46026 546335 996000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -283) (undo-tree-id419 . -1) (#(" " 0 1 (fontified t)) . -284) (undo-tree-id420 . -1) 285) nil (25416 46026 546331 888000) 0 nil])
([nil nil ((283 . 285)) nil (25416 46026 546312 391000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -256) (undo-tree-id445 . -1) (#("a" 0 1 (fontified t)) . -257) (undo-tree-id446 . -1) (#("p" 0 1 (fontified t)) . -258) (undo-tree-id447 . -1) 259 (t 25416 46026 560571 704000)) nil (25416 46088 154724 320000) 0 nil])
([nil nil ((256 . 262)) nil (25416 46088 154718 138000) 0 nil])
([nil nil ((#("I" 0 1 (fontified t face font-lock-type-face)) . -271) (undo-tree-id430 . -1) (#("O" 0 1 (fontified t face font-lock-type-face)) . -272) (undo-tree-id431 . -1) (#("." 0 1 (fontified t)) . -273) (undo-tree-id432 . -1) (#("i" 0 1 (fontified t)) . -274) (undo-tree-id433 . -1) (#("n" 0 1 (fontified t)) . -275) (undo-tree-id434 . -1) (#("s" 0 1 (fontified t)) . -276) (undo-tree-id435 . -1) (#("p" 0 1 (fontified t)) . -277) (undo-tree-id436 . -1) (#("e" 0 1 (fontified t)) . -278) (undo-tree-id437 . -1) (#("c" 0 1 (fontified t)) . -279) (undo-tree-id438 . -1) (#("t" 0 1 (fontified t)) . -280) (undo-tree-id439 . -1) (#("(" 0 1 (fontified t)) . -281) (undo-tree-id440 . -1) (#("x" 0 1 (fontified t)) . -282) (undo-tree-id441 . -1) (#(")" 0 1 (fontified t)) . -283) (undo-tree-id442 . -1) (undo-tree-id443 . 1) (undo-tree-id444 . -1) 284) nil (25416 46088 154712 357000) 0 nil])
([nil nil ((271 . 281)) nil (25416 46088 154690 176000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -278) (undo-tree-id427 . -1) (#("u" 0 1 (fontified t)) . -279) (undo-tree-id428 . -1) (#("t" 0 1 (fontified t)) . -280) (undo-tree-id429 . -1) 281) nil (25416 46088 154687 380000) 0 nil])
([nil nil ((278 . 286)) nil (25416 46088 154679 275000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -285) (undo-tree-id426 . -1) 286) nil (25416 46088 154677 502000) 0 nil])
([nil nil ((285 . 286)) nil (25416 46088 154674 476000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -285) (undo-tree-id425 . -1) 286) nil (25416 46088 154672 603000) 0 nil])
([nil nil ((285 . 286)) nil (25416 46088 154669 637000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -285) (undo-tree-id424 . -1) 286) nil (25416 46088 154667 814000) 0 nil])
([nil nil ((285 . 286)) nil (25416 46088 154664 968000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -285) (undo-tree-id423 . -1) 286) nil (25416 46088 154663 115000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified nil)) . -288) (288 . 289) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . -288) (288 . 289) (287 . 289) (#("\"" 0 1 (fontified nil syntax-table (15))) . -287) (285 . 288)) nil (25416 46088 154658 777000) 0 nil])
([nil nil ((288 . 294)) nil (25416 46088 154654 940000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-string-face)) . -293) (undo-tree-id422 . -1) 294) nil (25416 46088 154652 234000) 0 nil])
([nil nil ((293 . 296)) nil (25416 46088 154639 511000) 0 nil])
([nil nil ((296 . 317)) nil (25416 46088 154637 387000) 0 nil])
([nil nil ((317 . 323)) nil (25416 46088 154631 205000) 0 nil])
([nil nil ((318 . 325) (t 25416 46088 168668 608000)) nil (25416 46103 297362 789000) 0 nil])
([nil nil ((283 . 294) (t 25416 46103 308694 168000)) nil (25416 46139 990127 894000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -283) (undo-tree-id451 . -1) (#("_" 0 1 (fontified t face font-lock-constant-face)) . -284) (undo-tree-id452 . -1) (#("_" 0 1 (fontified t)) . -285) (undo-tree-id453 . -1) (#("s" 0 1 (fontified t)) . -286) (undo-tree-id454 . -1) (#("t" 0 1 (fontified t)) . -287) (undo-tree-id455 . -1) (#("r" 0 1 (fontified t)) . -288) (undo-tree-id456 . -1) (#("u" 0 1 (fontified t)) . -289) (undo-tree-id457 . -1) (#("c" 0 1 (fontified t)) . -290) (undo-tree-id458 . -1) (#("t" 0 1 (fontified t)) . -291) (undo-tree-id459 . -1) (#("_" 0 1 (fontified t)) . -292) (undo-tree-id460 . -1) (#("_" 0 1 (fontified t)) . -293) (undo-tree-id461 . -1) 294 (t 25416 46140 5111 886000)) nil (25416 46173 924427 312000) 0 nil])
([nil nil ((271 . 283)) nil (25416 46173 924408 580000) 0 nil])
([nil nil ((#("x.__struct__" 0 2 (fontified t) 2 12 (fontified t)) . 283) (undo-tree-id448 . -12) (undo-tree-id449 . -12) (undo-tree-id450 . -12) 295) nil (25416 46173 924405 524000) 0 nil])
([nil nil ((nil rear-nonsticky nil 293 . 294) (nil fontified nil 284 . 294) (nil fontified nil 282 . 284) (282 . 294)) nil (25416 46173 924387 143000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . 295) (#("C" 0 1 (fontified t face font-lock-type-face)) . 295) (#("." 0 1 (fontified t)) . 295) (#("t" 0 1 (fontified t)) . 295) (#("o" 0 1 (fontified t)) . 295) (#("b" 0 1 (fontified t)) . 295) (#("b" 0 1 (fontified t)) . 295) (#("a" 0 1 (fontified t)) . 295) (#("C" 0 1 (fontified t face font-lock-type-face)) . 295) (#("." 0 1 (fontified t)) . 295) (#("r" 0 1 (fontified t)) . 295) (#("i" 0 1 (fontified t)) . 295) (#("x" 0 1 (fontified t)) . 295) (#("i" 0 1 (fontified t)) . 295) (#("l" 0 1 (fontified t)) . 295) (#("E" 0 1 (fontified t face font-lock-type-face)) . 295) (#("\"" 0 1 (fontified t syntax-table (15) face font-lock-string-face)) . 295) (#(" " 0 1 (fontified t)) . 295) (#("=" 0 1 (fontified t)) . 295) (#("=" 0 1 (fontified t)) . 295) (#(" " 0 1 (fontified t)) . 295)) nil (25416 46173 924379 950000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 295) (#("t" 0 1 (fontified t)) . 295) (#("n" 0 1 (fontified t)) . 295) (#("e" 0 1 (fontified t)) . 295) (#("i" 0 1 (fontified t)) . 295) (#("l" 0 1 (fontified t)) . 295) (#("C" 0 1 (fontified t face font-lock-type-face)) . 295) (#("." 0 1 (fontified t)) . 295) (#("s" 0 1 (fontified t)) . 295) (#("o" 0 1 (fontified t)) . 295) (#("t" 0 1 (fontified t)) . 295) (#("i" 0 1 (fontified t)) . 295) (#("d" 0 1 (fontified t)) . 295) (#("e" 0 1 (fontified t)) . 295) (#("r" 0 1 (fontified t)) . 295) (#("C" 0 1 (fontified t face font-lock-type-face)) . 295) (#("." 0 1 (fontified t)) . 295) (#("t" 0 1 (fontified t)) . 295) (#("o" 0 1 (fontified t)) . 295) (#("b" 0 1 (fontified t)) . 295) (#("b" 0 1 (fontified t)) . 295)) nil (25416 46173 924366 718000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t syntax-table (15) face font-lock-string-face)) . 295) (#("a" 0 1 (fontified t)) . 295) (#("t" 0 1 (fontified t)) . 295) (#("o" 0 1 (fontified t)) . 295) (#("u" 0 1 (fontified t)) . 295) (#("Q" 0 1 (fontified t face font-lock-type-face)) . 295)) nil (25416 46173 924355 919000) 0 nil])
([nil nil ((295 . 296)) nil (25416 46173 924347 765000) 0 nil])
([nil nil ((294 . 303) (t 25416 46173 939819 986000)) nil (25416 46191 449360 166000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -302) (undo-tree-id462 . -1) 303) nil (25416 46191 449357 812000) 0 nil])
([nil nil ((302 . 305)) nil (25416 46191 449342 946000) 0 nil])
([nil nil ((#("    |> IO.inspect()" 0 7 (fontified t) 7 9 (fontified t face font-lock-type-face) 9 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t)) . 409) (undo-tree-id463 . -19) (t 25416 46191 453209 680000)) nil (25416 46214 514826 131000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -286) (undo-tree-id476 . -1) (#("t" 0 1 (fontified t)) . -287) (undo-tree-id477 . -1) (#("r" 0 1 (fontified t)) . -288) (undo-tree-id478 . -1) (#("u" 0 1 (fontified t)) . -289) (undo-tree-id479 . -1) (#("c" 0 1 (fontified t)) . -290) (undo-tree-id480 . -1) (#("t" 0 1 (fontified t)) . -291) (undo-tree-id481 . -1) 292 (t 25416 46214 513891 993000)) nil (25416 46286 696958 653000) 0 nil])
([nil nil ((286 . 287)) nil (25416 46286 696943 887000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -286) (undo-tree-id475 . -1) 287) nil (25416 46286 696941 72000) 0 nil])
([nil nil ((286 . 292)) nil (25416 46286 696936 624000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -294) (undo-tree-id464 . -1) (#("_" 0 1 (fontified t face font-lock-constant-face)) . -295) (undo-tree-id465 . -1) (#("_" 0 1 (fontified t)) . -296) (undo-tree-id466 . -1) (#("s" 0 1 (fontified t)) . -297) (undo-tree-id467 . -1) (#("t" 0 1 (fontified t)) . -298) (undo-tree-id468 . -1) (#("r" 0 1 (fontified t)) . -299) (undo-tree-id469 . -1) (#("u" 0 1 (fontified t)) . -300) (undo-tree-id470 . -1) (#("c" 0 1 (fontified t)) . -301) (undo-tree-id471 . -1) (#("t" 0 1 (fontified t)) . -302) (undo-tree-id472 . -1) (#("_" 0 1 (fontified t)) . -303) (undo-tree-id473 . -1) (#("_" 0 1 (fontified t)) . -304) (undo-tree-id474 . -1) 305) nil (25416 46286 696929 241000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -295) (295 . 296) (#(")" 0 1 (fontified nil)) . -295) (295 . 296) (294 . 296)) nil (25416 46286 696885 815000) 0 nil])
([nil nil ((295 . 302)) nil (25416 46286 696876 269000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -286) (undo-tree-id495 . -1) (#("c" 0 1 (fontified t)) . -287) (undo-tree-id496 . -1) (#("h" 0 1 (fontified t)) . -288) (undo-tree-id497 . -1) (#("e" 0 1 (fontified t)) . -289) (undo-tree-id498 . -1) (#("m" 0 1 (fontified t)) . -290) (undo-tree-id499 . -1) (#("a" 0 1 (fontified t)) . -291) (undo-tree-id500 . -1) 292 (t 25416 46286 712321 335000)) nil (25416 46327 127319 745000) 0 nil])
([nil nil ((286 . 290)) nil (25416 46327 127243 982000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -293) (undo-tree-id485 . -1) (#("s" 0 1 (fontified t face elixir-atom-face)) . -294) (undo-tree-id486 . -1) (#("o" 0 1 (fontified t face elixir-atom-face)) . -295) (undo-tree-id487 . -1) (#("u" 0 1 (fontified t face elixir-atom-face)) . -296) (undo-tree-id488 . -1) (#("r" 0 1 (fontified t face elixir-atom-face)) . -297) (undo-tree-id489 . -1) (#("c" 0 1 (fontified t face elixir-atom-face)) . -298) (undo-tree-id490 . -1) (#("e" 0 1 (fontified t face elixir-atom-face)) . -299) (undo-tree-id491 . -1) (#(")" 0 1 (fontified t)) . -300) (undo-tree-id492 . -1) (undo-tree-id493 . 1) (undo-tree-id494 . -1) 301) nil (25416 46327 127241 938000) 0 nil])
([nil nil ((#("(" 0 1 (fontified nil)) . -292) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (#(")" 0 1 (fontified t)) . 293) (undo-tree-id484 . -1)) nil (25416 46327 127230 829000) 0 nil])
([nil nil ((292 . 293) (#(")" 0 1 (fontified nil)) . -292) (292 . 293)) nil (25416 46327 127216 233000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -286) (undo-tree-id501 . -1) (#("e" 0 1 (fontified t)) . -287) (undo-tree-id502 . -1) (#("t" 0 1 (fontified t)) . -288) (undo-tree-id503 . -1) (#("a" 0 1 (fontified t)) . -289) (undo-tree-id504 . -1) 290 (t 25416 46327 139457 130000)) nil (25417 8304 129928 585000) 0 nil])
([nil nil ((286 . 292)) nil (25417 8304 129907 44000) 0 nil])
([nil nil ((#("." 0 1 (fontified t face font-lock-comment-face)) . 355) (#("r" 0 1 (fontified t face font-lock-comment-face)) . 355) (#("i" 0 1 (fontified t face font-lock-comment-face)) . 355) (#("x" 0 1 (fontified t face font-lock-comment-face)) . 355) (#("i" 0 1 (fontified t face font-lock-comment-face)) . 355) (#("l" 0 1 (fontified t face font-lock-comment-face)) . 355) (#("E" 0 1 (fontified t face font-lock-comment-face)) . 355) (t 25417 8304 143231 73000)) nil (25417 8327 277669 673000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -305) (undo-tree-id505 . -1) 306) nil (25417 8327 277662 199000) 0 nil])
([nil nil ((244 . 245)) nil (25417 8327 277642 241000) 0 nil])
([nil nil ((349 . 351) (t 25417 8327 283682 517000)) nil (25417 8438 532530 607000) 0 nil])
([nil nil ((349 . 350)) nil (25417 8438 532528 312000) 0 nil])
([nil nil ((352 . 355)) nil (25417 8438 532526 288000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -306) 355) nil (25417 8438 532523 804000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -349) (undo-tree-id506 . -1) (#("o" 0 1 (fontified t)) . -350) (undo-tree-id507 . -1) 351) nil (25417 8438 532518 263000) 0 nil])
([nil nil ((349 . 360)) nil (25417 8438 532495 340000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t syntax-table (15) face font-lock-string-face)) . -365) (undo-tree-id526 . -1) (undo-tree-id527 . -1) 366 (t 25417 8438 573861 799000)) nil (25417 8465 449414 414000) 0 nil])
([nil nil ((#("\"" 0 1 (rear-nonsticky t fontified t syntax-table (15) face font-lock-string-face)) . -393) (undo-tree-id525 . -1) 394) nil (25417 8465 449407 861000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -345) (undo-tree-id508 . -1) (#("|" 0 1 (fontified t)) . -346) (undo-tree-id509 . -1) (#(">" 0 1 (fontified t)) . -347) (undo-tree-id510 . -1) (#(" " 0 1 (fontified t)) . -348) (undo-tree-id511 . -1) (#("t" 0 1 (fontified t)) . -349) (undo-tree-id512 . -1) (#("o" 0 1 (fontified t)) . -350) (undo-tree-id513 . -1) (#("_" 0 1 (fontified t)) . -351) (undo-tree-id514 . -1) (#("s" 0 1 (fontified t)) . -352) (undo-tree-id515 . -1) (#("t" 0 1 (fontified t)) . -353) (undo-tree-id516 . -1) (#("r" 0 1 (fontified t)) . -354) (undo-tree-id517 . -1) (#("i" 0 1 (fontified t)) . -355) (undo-tree-id518 . -1) (#("n" 0 1 (fontified t)) . -356) (undo-tree-id519 . -1) (#("g" 0 1 (fontified t)) . -357) (undo-tree-id520 . -1) (#("(" 0 1 (fontified t)) . -358) (undo-tree-id521 . -1) (#(")" 0 1 (fontified t)) . -359) (undo-tree-id522 . -1) (undo-tree-id523 . 1) (undo-tree-id524 . -1) 360) nil (25417 8465 449395 588000) 0 nil])
([nil nil ((345 . 346)) nil (25417 8465 449325 114000) 0 nil])
([nil nil ((385 . 390) (t 25417 8465 454389 991000)) nil (25417 8490 918474 255000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -404) (404 . 405) (#(")" 0 1 (fontified nil)) . -404) (404 . 405) (390 . 405)) nil (25417 8490 918463 885000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -413) (413 . 414) (#(")" 0 1 (fontified nil)) . -413) (413 . 414) (405 . 414) (t 25417 8490 934891 259000)) nil (25417 8539 208608 697000) 0 nil])
([nil nil ((413 . 414)) nil (25417 8539 208604 269000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -413) (undo-tree-id528 . -1) 414) nil (25417 8539 208599 831000) 0 nil])
([nil nil ((413 . 414)) nil (25417 8539 208578 793000) 0 nil])
([nil nil ((#("I" 0 1 (fontified t face font-lock-type-face)) . -393) (undo-tree-id549 . -1) (#("O" 0 1 (fontified t face font-lock-type-face)) . -394) (undo-tree-id550 . -1) (#("." 0 1 (fontified t)) . -395) (undo-tree-id551 . -1) (#("i" 0 1 (fontified t)) . -396) (undo-tree-id552 . -1) (#("n" 0 1 (fontified t)) . -397) (undo-tree-id553 . -1) (#("s" 0 1 (fontified t)) . -398) (undo-tree-id554 . -1) (#("p" 0 1 (fontified t)) . -399) (undo-tree-id555 . -1) (#("e" 0 1 (fontified t)) . -400) (undo-tree-id556 . -1) (#("c" 0 1 (fontified t)) . -401) (undo-tree-id557 . -1) (#("t" 0 1 (fontified t)) . -402) (undo-tree-id558 . -1) 403 (t 25417 8539 213747 25000)) nil (25417 8600 779600 568000) 0 nil])
([nil nil ((393 . 401)) nil (25417 8600 779542 964000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -400) (undo-tree-id548 . -1) 401) nil (25417 8600 779540 660000) 0 nil])
([nil nil ((400 . 405)) nil (25417 8600 779535 931000) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -390) (undo-tree-id529 . -1) (#(">" 0 1 (fontified t)) . -391) (undo-tree-id530 . -1) (#(" " 0 1 (fontified t)) . -392) (undo-tree-id531 . -1) (#("J" 0 1 (fontified t face font-lock-type-face)) . -393) (undo-tree-id532 . -1) (#("a" 0 1 (fontified t face font-lock-type-face)) . -394) (undo-tree-id533 . -1) (#("s" 0 1 (fontified t face font-lock-type-face)) . -395) (undo-tree-id534 . -1) (#("o" 0 1 (fontified t face font-lock-type-face)) . -396) (undo-tree-id535 . -1) (#("n" 0 1 (fontified t face font-lock-type-face)) . -397) (undo-tree-id536 . -1) (#("." 0 1 (fontified t)) . -398) (undo-tree-id537 . -1) (#("e" 0 1 (fontified t)) . -399) (undo-tree-id538 . -1) (#("n" 0 1 (fontified t)) . -400) (undo-tree-id539 . -1) (#("c" 0 1 (fontified t)) . -401) (undo-tree-id540 . -1) (#("o" 0 1 (fontified t)) . -402) (undo-tree-id541 . -1) (#("d" 0 1 (fontified t)) . -403) (undo-tree-id542 . -1) (#("e" 0 1 (fontified t)) . -404) (undo-tree-id543 . -1) (#("(" 0 1 (fontified t)) . -405) (undo-tree-id544 . -1) (#(")" 0 1 (fontified t)) . -406) (undo-tree-id545 . -1) (undo-tree-id546 . 1) (undo-tree-id547 . -1) 407) nil (25417 8600 779526 284000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -417) (417 . 418) (#(")" 0 1 (fontified nil)) . -417) (417 . 418) (400 . 418)) nil (25417 8600 779465 864000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -427) (427 . 428) (#(")" 0 1 (fontified nil)) . -427) (427 . 428) (418 . 428) (t 25417 8600 821788 841000)) nil (25417 8607 83294 755000) 0 nil])
([nil nil ((427 . 428)) nil (25417 8607 83284 547000) 0 nil])
([nil nil ((#("|> Enum.filter(fn x -> IO.inspect(x.__struct__)  end)   " 0 3 (fontified t face font-lock-comment-face) 3 7 (fontified t face font-lock-comment-face) 7 14 (fontified t face font-lock-comment-face) 14 15 (fontified t face font-lock-comment-face) 15 17 (fontified t face font-lock-comment-face) 17 23 (fontified t face font-lock-comment-face) 23 25 (fontified t face font-lock-comment-face) 25 33 (fontified t face font-lock-comment-face) 33 34 (fontified t face font-lock-comment-face) 34 36 (fontified t face font-lock-comment-face) 36 45 (fontified t face font-lock-comment-face) 45 46 (fontified t rear-nonsticky t face font-lock-comment-face) 46 47 (fontified t face font-lock-comment-face) 47 48 (fontified t face font-lock-comment-face) 48 49 (fontified t face font-lock-comment-face) 49 52 (fontified t face font-lock-comment-face) 52 53 (fontified t face font-lock-comment-face) 53 56 (fontified t face font-lock-comment-face)) . 249) (undo-tree-id606 . -34) (undo-tree-id607 . -46) (t 25417 8607 125412 364000)) nil (25417 8688 423947 171000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -244) (undo-tree-id605 . -1) 245) nil (25417 8688 423941 551000) 0 nil])
([nil nil ((#("    
" 0 4 (fontified t) 4 5 (fontified t)) . 244) (undo-tree-id599 . -5) (undo-tree-id600 . -5) (undo-tree-id601 . -4) (undo-tree-id602 . -5) (undo-tree-id603 . -5) (undo-tree-id604 . -4)) nil (25417 8688 423936 942000) 0 nil])
([nil nil ((244 . 248)) nil (25417 8688 423926 323000) 0 nil])
([nil nil ((343 . 347) (#(" " 0 1 (fontified t)) . 342) (undo-tree-id598 . -1) (343 . 344)) nil (25417 8688 423923 949000) 0 nil])
([nil nil ((365 . 369) (#(" " 0 1 (fontified nil)) . 364) (undo-tree-id597 . -1) (365 . 366)) nil (25417 8688 423919 250000) 0 nil])
([nil nil ((380 . 383)) nil (25417 8688 423914 882000) 0 nil])
([nil nil ((383 . 384)) nil (25417 8688 423913 129000) 0 nil])
([nil nil ((#("|> Jason.decode()
#    |> elem(1)
     " 0 3 (fontified t face font-lock-comment-face) 3 8 (fontified t face font-lock-comment-face) 8 15 (fontified t face font-lock-comment-face) 15 16 (fontified t face font-lock-comment-face) 16 17 (fontified t face font-lock-comment-face) 17 18 (fontified t face font-lock-comment-face) 18 19 (fontified t face font-lock-comment-delimiter-face) 19 23 (fontified t face font-lock-comment-delimiter-face) 23 30 (fontified t face font-lock-comment-face) 30 32 (fontified t face font-lock-comment-face) 32 33 (fontified t face font-lock-comment-face) 33 34 (fontified t face font-lock-comment-face) 34 35 (fontified t) 35 38 (fontified t) 38 39 (fontified t)) . 445) (undo-tree-id593 . -38) (undo-tree-id594 . -39) (undo-tree-id595 . -34) (undo-tree-id596 . -39) 484) nil (25417 8688 423910 604000) 0 nil])
([nil nil ((nil rear-nonsticky nil 418 . 419) (nil fontified nil 418 . 419) (nil fontified nil 415 . 418) (nil fontified nil 414 . 415) (nil fontified nil 413 . 414) (nil fontified nil 412 . 413) (nil fontified nil 410 . 412) (nil fontified nil 403 . 410) (nil fontified nil 399 . 403) (nil fontified nil 398 . 399) (nil fontified nil 397 . 398) (nil fontified nil 396 . 397) (nil fontified nil 395 . 396) (nil fontified nil 388 . 395) (nil fontified nil 383 . 388) (nil fontified nil 380 . 383) (380 . 419)) nil (25417 8688 423898 672000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -397) (undo-tree-id591 . -1) (undo-tree-id592 . -1) 398) nil (25417 8688 423888 965000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -397) (undo-tree-id590 . -1) 398) nil (25417 8688 423882 553000) 0 nil])
([nil nil ((380 . 384)) nil (25417 8688 423877 875000) 0 nil])
([nil nil ((401 . 402)) nil (25417 8688 423875 59000) 0 nil])
([nil nil ((#("         
    
    

    
#    |> Jason.encode()
#    |> elem(1)
#     

    
" 0 1 (fontified t) 1 4 (fontified t) 4 5 (rear-nonsticky t fontified t) 5 9 (fontified t) 9 10 (fontified t) 10 14 (fontified t) 14 15 (fontified t) 15 19 (fontified t) 19 20 (fontified t) 20 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t face font-lock-comment-delimiter-face) 27 31 (fontified t face font-lock-comment-delimiter-face) 31 34 (fontified t face font-lock-comment-face) 34 39 (fontified t face font-lock-comment-face) 39 46 (fontified t face font-lock-comment-face) 46 47 (fontified t face font-lock-comment-face) 47 48 (fontified t face font-lock-comment-face) 48 49 (fontified t face font-lock-comment-face) 49 50 (fontified t face font-lock-comment-delimiter-face) 50 54 (fontified t face font-lock-comment-delimiter-face) 54 61 (fontified t face font-lock-comment-face) 61 63 (fontified t face font-lock-comment-face) 63 64 (rear-nonsticky t fontified t face font-lock-comment-face) 64 65 (fontified t face font-lock-comment-face) 65 66 (fontified t face font-lock-comment-delimiter-face) 66 70 (fontified t face font-lock-comment-delimiter-face) 70 71 (fontified t face font-lock-comment-delimiter-face) 71 72 (fontified t face font-lock-comment-face) 72 78 (fontified t)) . -417) (undo-tree-id559 . -20) (undo-tree-id560 . -20) (undo-tree-id561 . -21) (undo-tree-id562 . -21) (undo-tree-id563 . -26) (undo-tree-id564 . -26) (undo-tree-id565 . -49) (undo-tree-id566 . -49) (undo-tree-id567 . -65) (undo-tree-id568 . -65) (undo-tree-id569 . -72) (undo-tree-id570 . -72) (undo-tree-id571 . -73) (undo-tree-id572 . -73) (undo-tree-id573 . -64) (undo-tree-id574 . -64) (undo-tree-id575 . -64) (undo-tree-id576 . -70) (undo-tree-id577 . -64) (undo-tree-id578 . -47) (undo-tree-id579 . -78) (undo-tree-id580 . -78) (undo-tree-id581 . -10) (undo-tree-id582 . -10) (undo-tree-id583 . -15) (undo-tree-id584 . -15) (undo-tree-id585 . -70) (undo-tree-id586 . -78) (undo-tree-id587 . -78) (undo-tree-id588 . -78) (undo-tree-id589 . -78) 495) nil (25417 8688 423863 949000) 0 nil])
([nil nil ((#("    

#    k = data[:credits] |> hd
#    k.__struct__
#    k
#    |> IO.inspect()
    #
" 0 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t face font-lock-comment-delimiter-face) 7 11 (fontified t face font-lock-comment-delimiter-face) 11 12 (fontified t face font-lock-comment-face) 12 15 (fontified t face font-lock-comment-face) 15 19 (fontified t face font-lock-comment-face) 19 20 (fontified t face font-lock-comment-face) 20 28 (fontified t face font-lock-comment-face) 28 35 (fontified t face font-lock-comment-face) 35 36 (fontified t face font-lock-comment-face) 36 37 (fontified t face font-lock-comment-delimiter-face) 37 41 (fontified t face font-lock-comment-delimiter-face) 41 43 (fontified t face font-lock-comment-face) 43 53 (fontified t face font-lock-comment-face) 53 54 (fontified t face font-lock-comment-face) 54 55 (fontified t face font-lock-comment-delimiter-face) 55 59 (fontified t face font-lock-comment-delimiter-face) 59 60 (fontified t face font-lock-comment-face) 60 61 (fontified t face font-lock-comment-face) 61 62 (fontified t face font-lock-comment-delimiter-face) 62 66 (fontified t face font-lock-comment-delimiter-face) 66 69 (fontified t face font-lock-comment-face) 69 71 (fontified t face font-lock-comment-face) 71 79 (fontified t face font-lock-comment-face) 79 80 (fontified t face font-lock-comment-face) 80 81 (fontified t face font-lock-comment-face) 81 82 (fontified t face font-lock-comment-face) 82 86 (fontified t) 86 87 (fontified t face font-lock-comment-delimiter-face) 87 88 (fontified t face font-lock-comment-face)) . -137) (undo-tree-id608 . -29) (undo-tree-id609 . -5) (undo-tree-id610 . -5) (undo-tree-id611 . -6) (undo-tree-id612 . -6) (undo-tree-id613 . -54) (undo-tree-id614 . -54) (undo-tree-id615 . -82) (undo-tree-id616 . -82) (undo-tree-id617 . -61) (undo-tree-id618 . -61) (undo-tree-id619 . -36) (undo-tree-id620 . -36) (undo-tree-id621 . -88) (undo-tree-id622 . -88) (undo-tree-id623 . -5) (undo-tree-id624 . -29) (undo-tree-id625 . -88) (undo-tree-id626 . -88) (undo-tree-id627 . -5) (undo-tree-id628 . -88) (undo-tree-id629 . -88) 225 (t 25417 8688 468985 395000)) nil (25417 8705 881005 718000) 0 nil])
([nil nil ((330 . 334) (#("    " 0 4 (fontified t)) . 329) (undo-tree-id692 . -4) (328 . 334) (t 25417 8705 900133 965000)) nil (25417 9852 228113 413000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 329) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1)) nil (25417 9852 228108 353000) 0 nil])
([nil nil ((#("    
" 0 4 (fontified t) 4 5 (fontified t)) . 329) (undo-tree-id680 . -5) (undo-tree-id681 . -5) (undo-tree-id682 . -5) (undo-tree-id683 . -5) (undo-tree-id684 . -5) (undo-tree-id685 . -5) (undo-tree-id686 . -5) (undo-tree-id687 . -5) (undo-tree-id688 . -5)) nil (25417 9852 228100 989000) 0 nil])
([nil nil ((331 . 335) (#("    " 0 4 (fontified t)) . 330) (undo-tree-id679 . -4) (334 . 335) (#("    " 0 4 (fontified nil)) . 329) (329 . 333) (329 . 330)) nil (25417 9852 228083 998000) 0 nil])
([nil nil ((331 . 335) (#("    " 0 4 (fontified nil)) . 330) (330 . 334) (330 . 331)) nil (25417 9852 228078 26000) 0 nil])
([nil nil ((#("|> elem(0)
    |> Jason.encode()
    |> elem(1)
    |> Jason.decode()
    |> elem(1)

" 0 7 (fontified t) 7 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 15 (fontified t) 15 18 (fontified t) 18 23 (fontified t face font-lock-type-face) 23 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 44 (fontified t) 44 46 (fontified t) 46 47 (fontified t) 47 48 (fontified t) 48 52 (fontified t) 52 55 (fontified t) 55 60 (fontified t face font-lock-type-face) 60 67 (fontified t) 67 68 (fontified t) 68 69 (fontified t) 69 70 (fontified t) 70 74 (fontified t) 74 81 (fontified t) 81 83 (fontified t) 83 84 (fontified t) 84 85 (fontified t) 85 86 (fontified t)) . 244) (undo-tree-id657 . -85) (undo-tree-id658 . -85) (undo-tree-id659 . -86) (undo-tree-id660 . -86) (undo-tree-id661 . -11) (undo-tree-id662 . -11) (undo-tree-id663 . -33) (undo-tree-id664 . -33) (undo-tree-id665 . -48) (undo-tree-id666 . -48) (undo-tree-id667 . -70) (undo-tree-id668 . -70) (undo-tree-id669 . -85) (undo-tree-id670 . -85) (undo-tree-id671 . -85) (undo-tree-id672 . -85) (undo-tree-id673 . -85) (undo-tree-id674 . -48) (undo-tree-id675 . -85) (undo-tree-id676 . -86) (undo-tree-id677 . -86) (undo-tree-id678 . -86) 330) nil (25417 9852 228072 135000) 0 nil])
([nil nil ((242 . 246) (#("    " 0 4 (fontified t)) . 241) (undo-tree-id646 . -4) (241 . 246) (#("    " 0 4 (fontified t)) . 240) (undo-tree-id647 . -4) (undo-tree-id648 . -4) (undo-tree-id649 . -4) (undo-tree-id650 . -4) (undo-tree-id651 . -4) (undo-tree-id652 . -4) (undo-tree-id653 . -4) (undo-tree-id654 . -4) (undo-tree-id655 . -4) (undo-tree-id656 . -4) (244 . 245)) nil (25417 9852 228035 56000) 0 nil])
([nil nil ((nil rear-nonsticky nil 331 . 332) (nil fontified nil 331 . 332) (nil fontified nil 330 . 331) (nil fontified nil 329 . 330) (nil fontified nil 327 . 329) (nil fontified nil 320 . 327) (nil fontified nil 316 . 320) (nil fontified nil 315 . 316) (nil fontified nil 314 . 315) (nil fontified nil 313 . 314) (nil fontified nil 306 . 313) (nil fontified nil 301 . 306) (nil fontified nil 298 . 301) (nil fontified nil 294 . 298) (nil fontified nil 293 . 294) (nil fontified nil 292 . 293) (nil fontified nil 290 . 292) (nil fontified nil 279 . 290) (nil fontified nil 278 . 279) (nil fontified nil 277 . 278) (nil fontified nil 276 . 277) (nil fontified nil 269 . 276) (nil fontified nil 264 . 269) (nil fontified nil 261 . 264) (nil fontified nil 257 . 261) (nil fontified nil 256 . 257) (nil fontified nil 255 . 256) (nil fontified nil 253 . 255) (nil fontified nil 246 . 253) (246 . 332)) nil (25417 9852 228011 902000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 256) (#(" " 0 1 (fontified t)) . 256) (#(" " 0 1 (fontified t)) . 256) (#(" " 0 1 (fontified t)) . 256) (#("
" 0 1 (fontified t)) . 256) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1)) nil (25417 9852 227996 243000) 0 nil])
([nil nil ((256 . 257)) nil (25417 9852 227985 944000) 0 nil])
([nil nil ((274 . 275)) nil (25417 9852 227984 80000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 275) (#(" " 0 1 (fontified t)) . 275) (#(" " 0 1 (fontified t)) . 275) (#(" " 0 1 (fontified t)) . 275) (#("
" 0 1 (fontified t)) . 275) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1)) nil (25417 9852 227980 674000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . 252) (undo-tree-id638 . -1) (#("    " 0 4 (fontified nil)) . -242) (undo-tree-id639 . -4) (257 . 258)) nil (25417 9852 227971 867000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . 270) (undo-tree-id637 . -1) (271 . 272)) nil (25417 9852 227965 305000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 282) (#(" " 0 1 (fontified t)) . 282) (#(" " 0 1 (fontified t)) . 282) (#(" " 0 1 (fontified t)) . 282)) nil (25417 9852 227960 336000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 300) (#(" " 0 1 (fontified t)) . 300) (#(" " 0 1 (fontified t)) . 300) (#(" " 0 1 (fontified t)) . 300)) nil (25417 9852 227956 178000) 0 nil])
([nil nil ((141 . 162)) nil (25417 9852 227953 72000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face font-lock-variable-name-face)) . -158) (undo-tree-id636 . -1) 159) nil (25417 9852 227950 918000) 0 nil])
([nil nil ((158 . 159)) nil (25417 9852 227947 1000) 0 nil])
([nil nil ((263 . 267) (#("    " 0 4 (fontified nil)) . 262) (262 . 266) (262 . 263)) nil (25417 9852 227944 566000) 0 nil])
([nil nil ((263 . 267) (#("    " 0 4 (fontified nil)) . 262) (262 . 266) (262 . 263)) nil (25417 9852 227940 779000) 0 nil])
([nil nil ((267 . 271)) nil (25417 9852 227937 683000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -267) (undo-tree-id632 . -1) (#("o" 0 1 (fontified t)) . -268) (undo-tree-id633 . -1) (#("r" 0 1 (fontified t face font-lock-keyword-face)) . -269) (undo-tree-id634 . -1) (#(" " 0 1 (fontified t)) . -270) (undo-tree-id635 . -1) 271) nil (25417 9852 227934 96000) 0 nil])
([nil nil ((260 . 265)) nil (25417 9852 227924 188000) 0 nil])
([nil nil ((279 . 280) (265 . 280)) nil (25417 9852 227922 174000) 0 nil])
([nil nil ((291 . 293) (#("\"" 0 1 (face font-lock-string-face fontified nil)) . -291) (291 . 292) (#("\"" 0 1 (fontified nil)) . -290) (290 . 291) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . -290) (290 . 291) (289 . 291) (#("\"" 0 1 (fontified nil syntax-table (15))) . -289) (289 . 290)) nil (25417 9852 227918 347000) 0 nil])
([nil nil ((294 . 295) (#("\"" 0 1 (fontified nil face font-lock-string-face syntax-table (15))) . -294) (293 . 295) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . -293) (293 . 294) (#("\"" 0 1 (fontified nil)) . -292) (292 . 293) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . -292) (292 . 293)) nil (25417 9852 227910 703000) 0 nil])
([nil nil ((#("\"\"\"    " 0 1 (fontified t face font-lock-string-face) 1 2 (fontified t face font-lock-string-face) 2 3 (fontified t syntax-table (15) face font-lock-string-face) 3 7 (fontified t)) . 292) (undo-tree-id630 . -7) (undo-tree-id631 . -7) 299) nil (25417 9852 227902 908000) 0 nil])
([nil nil ((nil rear-nonsticky nil 368 . 369) (nil fontified nil 365 . 369) (nil fontified nil 364 . 365) (nil fontified nil 363 . 364) (nil fontified nil 362 . 363) (362 . 369)) nil (25417 9852 227878 202000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -279) (undo-tree-id693 . -1) 280 (t 25417 9852 242077 478000)) nil (25417 9866 406282 240000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -380) (undo-tree-id700 . -1) 381 (t 25417 9866 422077 93000)) nil (25417 9932 14229 164000) 0 nil])
([nil nil ((#("q" 0 1 (fontified t)) . -404) (undo-tree-id695 . -1) (#("u" 0 1 (fontified t)) . -405) (undo-tree-id696 . -1) (#("o" 0 1 (fontified t)) . -406) (undo-tree-id697 . -1) (#("t" 0 1 (fontified t)) . -407) (undo-tree-id698 . -1) (#("a" 0 1 (fontified t)) . -408) (undo-tree-id699 . -1) 409) nil (25417 9932 14221 640000) 0 nil])
([nil nil ((404 . 423)) nil (25417 9932 14207 494000) 0 nil])
([nil nil ((431 . 432) (423 . 432)) nil (25417 9932 14204 738000) 0 nil])
([nil nil ((431 . 432)) nil (25417 9932 14200 871000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -432) (undo-tree-id694 . -1) 433) nil (25417 9932 14193 387000) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -265) (undo-tree-id701 . -1) (#(">" 0 1 (fontified t)) . -266) (undo-tree-id702 . -1) (#(" " 0 1 (fontified t)) . -267) (undo-tree-id703 . -1) (#("I" 0 1 (fontified t face font-lock-type-face)) . -268) (undo-tree-id704 . -1) (#("O" 0 1 (fontified t face font-lock-type-face)) . -269) (undo-tree-id705 . -1) (#("." 0 1 (fontified t)) . -270) (undo-tree-id706 . -1) (#("i" 0 1 (fontified t)) . -271) (undo-tree-id707 . -1) (#("n" 0 1 (fontified t)) . -272) (undo-tree-id708 . -1) (#("s" 0 1 (fontified t)) . -273) (undo-tree-id709 . -1) (#("p" 0 1 (fontified t)) . -274) (undo-tree-id710 . -1) (#("e" 0 1 (fontified t)) . -275) (undo-tree-id711 . -1) (#("c" 0 1 (fontified t)) . -276) (undo-tree-id712 . -1) (#("t" 0 1 (fontified t)) . -277) (undo-tree-id713 . -1) (#("(" 0 1 (fontified t)) . -278) (undo-tree-id714 . -1) (#(")" 0 1 (fontified t)) . -279) (undo-tree-id715 . -1) (undo-tree-id716 . 1) (undo-tree-id717 . -1) 280 (t 25417 9932 58102 753000)) nil (25417 9937 780713 284000) 0 nil])
([nil nil ((260 . 265) (t 25417 9937 786107 16000)) nil (25417 9963 173811 36000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -279) (279 . 280) (#(")" 0 1 (fontified nil)) . -279) (279 . 280) (265 . 280)) nil (25417 9963 173801 258000) 0 nil])
([nil nil ((616 . 621) (t 25417 9963 190129 597000)) nil (25417 10048 425834 834000) 0 nil])
([nil nil ((nil rear-nonsticky nil 670 . 671) (nil fontified nil 669 . 671) (nil fontified nil 660 . 669) (nil fontified nil 654 . 660) (nil fontified nil 650 . 654) (nil fontified nil 649 . 650) (nil fontified nil 631 . 649) (nil fontified nil 630 . 631) (nil fontified nil 629 . 630) (nil fontified nil 623 . 629) (nil fontified nil 622 . 623) (nil fontified nil 619 . 622) (619 . 671)) nil (25417 10048 425830 776000) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil nil ((562 . 563)) nil (25417 10075 535911 528000) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil nil ((#("#  def render(\"credits_quota.json\", %{quota: quota}) do" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 3 (fontified t face font-lock-comment-delimiter-face) 3 6 (fontified t face font-lock-comment-face) 6 7 (fontified t face font-lock-comment-face) 7 13 (fontified t face font-lock-comment-face) 13 14 (fontified t face font-lock-comment-face) 14 15 (fontified t syntax-table (15) face font-lock-comment-face) 15 33 (fontified t face font-lock-comment-face) 33 34 (fontified t syntax-table (15) face font-lock-comment-face) 34 38 (fontified t face font-lock-comment-face) 38 44 (fontified t face font-lock-comment-face) 44 53 (fontified t face font-lock-comment-face) 53 55 (fontified t face font-lock-comment-face)) . 562) (undo-tree-id741 . -3)) nil (25417 10095 768883 64000) 0 nil] [nil nil ((#("," 0 1 (fontified t)) . -651) (undo-tree-id718 . -1) (#(" " 0 1 (fontified t)) . -652) (undo-tree-id719 . -1) (#("%" 0 1 (fontified t)) . -653) (undo-tree-id720 . -1) (#("{" 0 1 (fontified t)) . -654) (undo-tree-id721 . -1) (#("q" 0 1 (fontified t)) . -655) (undo-tree-id722 . -1) (#("u" 0 1 (fontified t)) . -656) (undo-tree-id723 . -1) (#("o" 0 1 (fontified t)) . -657) (undo-tree-id724 . -1) (#("t" 0 1 (fontified t)) . -658) (undo-tree-id725 . -1) (#("a" 0 1 (fontified t)) . -659) (undo-tree-id726 . -1) (#(":" 0 1 (fontified t)) . -660) (undo-tree-id727 . -1) (#(" " 0 1 (fontified t)) . -661) (undo-tree-id728 . -1) (#("q" 0 1 (fontified t)) . -662) (undo-tree-id729 . -1) (#("u" 0 1 (fontified t)) . -663) (undo-tree-id730 . -1) (#("o" 0 1 (fontified t)) . -664) (undo-tree-id731 . -1) (#("t" 0 1 (fontified t)) . -665) (undo-tree-id732 . -1) (#("a" 0 1 (fontified t)) . -666) (undo-tree-id733 . -1) (#("}" 0 1 (fontified t)) . -667) (undo-tree-id734 . -1) (undo-tree-id735 . 1) (undo-tree-id736 . -1) 668) ((651 . 668) (t 25417 10048 430246 5000)) (25417 10074 817108 763000) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil nil ((564 . 566) (#("\"" 0 1 (face font-lock-string-face fontified nil)) . -564) (564 . 565) (#("\"" 0 1 (fontified nil)) . -563) (563 . 564) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . -563) (563 . 564) (562 . 564) (#("\"" 0 1 (fontified nil syntax-table (15))) . -562) (562 . 563)) nil (25417 10095 768877 374000) 0 nil])
([nil nil ((nil rear-nonsticky nil 669 . 670) (nil fontified nil 668 . 670) (nil fontified nil 659 . 668) (nil fontified nil 653 . 659) (nil fontified nil 649 . 653) (nil fontified nil 648 . 649) (nil fontified nil 630 . 648) (nil fontified nil 629 . 630) (nil fontified nil 628 . 629) (nil fontified nil 622 . 628) (nil fontified nil 621 . 622) (nil fontified nil 618 . 621) (618 . 670) (t 25417 10048 430246 5000)) ((#("def render(\"credits_quota.json\", %{quota: quota}) do" 0 3 (fontified nil face font-lock-keyword-face) 3 4 (fontified nil) 4 10 (fontified nil face font-lock-function-name-face) 10 11 (fontified nil) 11 12 (fontified nil syntax-table (15) face font-lock-string-face) 12 30 (fontified nil face font-lock-string-face) 30 31 (fontified nil syntax-table (15) face font-lock-string-face) 31 35 (fontified nil) 35 41 (fontified nil face elixir-atom-face) 41 50 (fontified nil) 50 51 (fontified nil face font-lock-keyword-face) 51 52 (fontified nil rear-nonsticky nil face font-lock-keyword-face)) . 618) (undo-tree-id737 . -52) (undo-tree-id738 . -52) (undo-tree-id739 . -52) (nil rear-nonsticky t 669 . 670)) (25417 10074 302134 130000) 0 (:visualizer [0 1 0 #<marker in no buffer>])])
([nil nil ((#("\"" 0 1 (fontified t face font-lock-string-face)) . -565) (undo-tree-id740 . -1) 566) nil (25417 10095 768870 491000) 0 nil])
nil
([nil nil ((2584 . 2587)) nil (25417 10095 768854 300000) 0 nil])
([nil nil ((2587 . 2588) (#("\"" 0 1 (fontified nil face font-lock-string-face syntax-table (15))) . -2587) (2586 . 2588) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . -2586) (2585 . 2587) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . -2585) (2585 . 2586)) nil (25417 10095 768845 123000) 0 nil])
([nil nil ((#("    %{data: render_many(final_json_response|> elem(0), CreditsView, \"credits_quota.json\")}
#    %{data: render_many(clients_quota, CreditsView, \"credits_quota.json\")}
" 0 4 (fontified t) 4 6 (fontified t) 6 11 (fontified t face elixir-atom-face) 11 50 (fontified t) 50 53 (fontified t) 53 55 (fontified t) 55 66 (fontified t face font-lock-type-face) 66 68 (fontified t) 68 69 (syntax-table (15) fontified t face font-lock-string-face) 69 87 (fontified t face font-lock-string-face) 87 88 (syntax-table (15) fontified t face font-lock-string-face) 88 91 (fontified t) 91 96 (fontified t face font-lock-comment-delimiter-face) 96 100 (fontified t face font-lock-comment-face) 100 144 (fontified t face font-lock-comment-face) 144 145 (syntax-table (15) fontified t face font-lock-comment-face) 145 163 (fontified t face font-lock-comment-face) 163 164 (syntax-table (15) fontified t face font-lock-comment-face) 164 167 (fontified t face font-lock-comment-face)) . -385) (undo-tree-id783 . -91) (undo-tree-id784 . -167) (undo-tree-id785 . -167) (undo-tree-id786 . -167) (undo-tree-id787 . -167) (undo-tree-id788 . -91) (undo-tree-id789 . -91) (undo-tree-id790 . -167) 552 (t 25417 10095 786335 99000)) nil (25417 10604 631832 22000) 0 nil])
([nil nil ((#("    |> IO.inspect()" 0 7 (fontified t) 7 9 (fontified t face font-lock-type-face) 9 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t)) . 261)) nil (25417 10604 631817 135000) 0 nil])
([nil nil ((261 . 265)) nil (25417 10604 631814 961000) 0 nil])
([nil nil ((262 . 266) (#("    " 0 4 (fontified t)) . 261) (undo-tree-id782 . -4) (265 . 266)) nil (25417 10604 631812 516000) 0 nil])
([nil nil ((266 . 270)) nil (25417 10604 631808 278000) 0 nil])
([nil nil ((270 . 277)) nil (25417 10604 631806 595000) 0 nil])
([nil nil ((272 . 274)) nil (25417 10604 631804 942000) 0 nil])
([nil nil ((275 . 276)) nil (25417 10604 631803 139000) 0 nil])
([nil nil ((274 . 275)) nil (25417 10604 631801 445000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -276) (undo-tree-id781 . -1) 277) nil (25417 10604 631799 251000) 0 nil])
([nil nil ((266 . 276)) nil (25417 10604 631795 474000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -302) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (#("\"" 0 1 (fontified t syntax-table (15) face font-lock-string-face)) . -303) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (#("\"" 0 1 (fontified t syntax-table (15) face font-lock-string-face)) . -304) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (#("\"" 0 1 (fontified t face font-lock-string-face)) . -305) (undo-tree-id779 . -1) (undo-tree-id780 . -1) 306) nil (25417 10604 631791 477000) 0 nil])
([nil nil ((298 . 316)) nil (25417 10604 631769 746000) 0 nil])
([nil nil ((316 . 320)) nil (25417 10604 631768 13000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -325) (325 . 326) (#(")" 0 1 (fontified nil)) . -325) (325 . 326) (320 . 326)) nil (25417 10604 631765 398000) 0 nil])
([nil nil ((325 . 328)) nil (25417 10604 631762 52000) 0 nil])
([nil nil ((329 . 332)) nil (25417 10604 631760 88000) 0 nil])
([nil nil ((341 . 343) (298 . 302) (332 . 333)) nil (25417 10604 631758 44000) 0 nil])
([nil nil ((343 . 346)) nil (25417 10604 631755 259000) 0 nil])
([nil nil ((346 . 353)) nil (25417 10604 631753 155000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 353) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1)) nil (25417 10604 631750 561000) 0 nil])
([nil nil ((363 . 370)) nil (25417 10604 631742 986000) 0 nil])
([nil nil ((nil rear-nonsticky nil 370 . 371) (nil fontified nil 370 . 371) (370 . 371)) nil (25417 10604 631740 862000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . 370) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1)) nil (25417 10604 631737 626000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 370) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1)) nil (25417 10604 631730 774000) 0 nil])
([nil nil ((387 . 394)) nil (25417 10604 631724 592000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 394) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1)) nil (25417 10604 631722 318000) 0 nil])
([nil nil ((404 . 411)) nil (25417 10604 631716 196000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 411) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1)) nil (25417 10604 631713 912000) 0 nil])
([nil nil ((428 . 435)) nil (25417 10604 631707 741000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 435) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1)) nil (25417 10604 631705 456000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t syntax-table (15) face font-lock-string-face)) . -447) (undo-tree-id749 . -1) (#("\"" 0 1 (fontified t face font-lock-string-face)) . -448) (undo-tree-id750 . -1) 449) nil (25417 10604 631698 233000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -445) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (#("\"" 0 1 (fontified t syntax-table (15) face font-lock-string-face)) . -446) (undo-tree-id748 . -1) 447) nil (25417 10604 631688 324000) 0 nil])
([nil nil ((445 . 446)) nil (25417 10604 631675 390000) 0 nil])
([nil nil ((451 . 452) (445 . 446)) nil (25417 10604 631673 6000) 0 nil])
([nil nil ((451 . 454)) nil (25417 10604 631670 611000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 298) (#(" " 0 1 (fontified t)) . 298) (#(" " 0 1 (fontified t)) . 298) (#(" " 0 1 (fontified t)) . 298)) nil (25417 10604 631667 606000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 333) (undo-tree-id742 . -1) (#(" " 0 1 (fontified t)) . 333) (#(" " 0 1 (fontified t)) . 333) (#(" " 0 1 (fontified t)) . 333)) nil (25417 10604 631663 87000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 339) (#(" " 0 1 (fontified t)) . 339) (#(" " 0 1 (fontified t)) . 339) (#(" " 0 1 (fontified t)) . 339)) nil (25417 10604 631645 535000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 352) (#(" " 0 1 (fontified t)) . 352) (#(" " 0 1 (fontified t)) . 352) (#(" " 0 1 (fontified t)) . 352)) nil (25417 10604 631641 627000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 372) (#(" " 0 1 (fontified t)) . 372) (#(" " 0 1 (fontified t)) . 372) (#(" " 0 1 (fontified t)) . 372)) nil (25417 10604 631637 770000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 385) (#(" " 0 1 (fontified t)) . 385) (#(" " 0 1 (fontified t)) . 385) (#(" " 0 1 (fontified t)) . 385)) nil (25417 10604 631633 592000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 405) (#(" " 0 1 (fontified t)) . 405) (#(" " 0 1 (fontified t)) . 405) (#(" " 0 1 (fontified t)) . 405)) nil (25417 10604 631628 543000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 418) (#(" " 0 1 (fontified t)) . 418) (#(" " 0 1 (fontified t)) . 418) (#(" " 0 1 (fontified t)) . 418)) nil (25417 10604 631618 494000) 0 nil])
([nil nil ((290 . 304) (t 25417 10604 651373 732000)) nil (25417 11224 18826 528000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 266) (#("(" 0 1 (fontified t)) . 266) (undo-tree-id858 . 1) (undo-tree-id859 . -1) (#("p" 0 1 (fontified t)) . 266) (#("a" 0 1 (fontified t)) . 266) (#("m" 0 1 (fontified t)) . 266) (#("." 0 1 (fontified t)) . 266) (#("m" 0 1 (fontified t)) . 266) (#("u" 0 1 (fontified t)) . 266) (#("n" 0 1 (fontified t)) . 266) (#("E" 0 1 (fontified t face font-lock-type-face)) . 266)) nil (25417 11224 18820 847000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -308) (308 . 309) (#(")" 0 1 (fontified nil)) . -308) (308 . 309) (299 . 309)) nil (25417 11224 18810 989000) 0 nil])
([nil nil ((308 . 321)) nil (25417 11224 18807 653000) 0 nil])
([nil nil ((294 . 297)) nil (25417 11224 18805 719000) 0 nil])
([nil nil ((327 . 331) (#("    " 0 4 (fontified nil)) . 326) (326 . 330) (326 . 327)) nil (25417 11224 18803 455000) 0 nil])
([nil nil ((331 . 334)) nil (25417 11224 18800 379000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -387) (undo-tree-id857 . -1) 388) nil (25417 11224 18798 165000) 0 nil])
([nil nil ((387 . 388)) nil (25417 11224 18794 278000) 0 nil])
([nil nil ((366 . 368)) nil (25417 11224 18792 384000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -270) (undo-tree-id856 . -1) 271) nil (25417 11224 18789 459000) 0 nil])
([nil nil ((270 . 274)) nil (25417 11224 18785 742000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t face font-lock-type-face)) . -307) (undo-tree-id815 . -1) (#("m" 0 1 (fontified t face font-lock-type-face)) . -308) (undo-tree-id816 . -1) (#("." 0 1 (fontified t)) . -309) (undo-tree-id817 . -1) (#("m" 0 1 (fontified t)) . -310) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (#("a" 0 1 (fontified t)) . -311) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (#("p" 0 1 (fontified t)) . -312) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (#("(" 0 1 (fontified t)) . -313) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (#("f" 0 1 (fontified t)) . -314) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (#("n" 0 1 (fontified t face font-lock-keyword-face)) . -315) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (#(" " 0 1 (fontified t)) . -316) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (#("x" 0 1 (fontified t)) . -317) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (#(" " 0 1 (fontified t)) . -318) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (#("-" 0 1 (fontified t)) . -319) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (#(">" 0 1 (fontified t)) . -320) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (#(" " 0 1 (fontified t)) . -321) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (#("x" 0 1 (fontified t)) . -322) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (#(" " 0 1 (fontified t)) . -323) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (#("e" 0 1 (fontified t)) . -324) (undo-tree-id846 . -1) (undo-tree-id847 . 1) (undo-tree-id848 . -1) (#("n" 0 1 (fontified t)) . -325) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (#("d" 0 1 (fontified t face font-lock-keyword-face)) . -326) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (#(")" 0 1 (fontified t)) . -327) (undo-tree-id853 . -1) (undo-tree-id854 . 1) (undo-tree-id855 . -1) 328) nil (25417 11224 18773 118000) 0 nil])
([nil nil ((#("E" 0 1 (fontified t face font-lock-type-face)) . -305) (undo-tree-id813 . -1) (#("n" 0 1 (fontified t face font-lock-type-face)) . -306) (undo-tree-id814 . -1) 307) nil (25417 11224 18570 418000) 0 nil])
([nil nil ((305 . 319)) nil (25417 11224 18563 315000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -317) (undo-tree-id811 . -1) (#("u" 0 1 (fontified t)) . -318) (undo-tree-id812 . -1) 319) nil (25417 11224 18560 780000) 0 nil])
([nil nil ((317 . 321)) nil (25417 11224 18555 229000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -330) (330 . 331) (#(")" 0 1 (fontified nil)) . -330) (330 . 331) (321 . 331)) nil (25417 11224 18552 715000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -266) (undo-tree-id807 . -1) (#("o" 0 1 (fontified t)) . -267) (undo-tree-id808 . -1) (#("r" 0 1 (fontified t)) . -268) (undo-tree-id809 . -1) (#(" " 0 1 (fontified t)) . -269) (undo-tree-id810 . -1) 270) nil (25417 11224 18547 655000) 0 nil])
([nil nil ((266 . 276)) nil (25417 11224 18537 787000) 0 nil])
([nil nil ((#("0..1" 0 1 (fontified t) 1 4 (fontified t)) . 276) (undo-tree-id805 . -4) (undo-tree-id806 . -4) 280) nil (25417 11224 18535 172000) 0 nil])
([nil nil ((nil rear-nonsticky nil 278 . 279) (nil fontified nil 276 . 279) (nil fontified nil 275 . 276) (275 . 279)) nil (25417 11224 18529 621000) 0 nil])
([nil nil ((279 . 280)) nil (25417 11224 18526 265000) 0 nil])
([nil nil ((279 . 285)) nil (25417 11224 18524 201000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -284) (undo-tree-id804 . -1) 285) nil (25417 11224 18522 7000) 0 nil])
([nil nil ((284 . 289)) nil (25417 11224 18517 849000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -284) (undo-tree-id803 . -1) 285) nil (25417 11224 18515 485000) 0 nil])
([nil nil ((284 . 295)) nil (25417 11224 18511 648000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -294) (undo-tree-id802 . -1) 295) nil (25417 11224 18508 562000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -284) (undo-tree-id791 . -1) (#("i" 0 1 (fontified t)) . -285) (undo-tree-id792 . -1) (#("n" 0 1 (fontified t)) . -286) (undo-tree-id793 . -1) (#("a" 0 1 (fontified t)) . -287) (undo-tree-id794 . -1) (#("l" 0 1 (fontified t)) . -288) (undo-tree-id795 . -1) (#("_" 0 1 (fontified t)) . -289) (undo-tree-id796 . -1) (#("j" 0 1 (fontified t)) . -290) (undo-tree-id797 . -1) (#("s" 0 1 (fontified t)) . -291) (undo-tree-id798 . -1) (#("o" 0 1 (fontified t)) . -292) (undo-tree-id799 . -1) (#("n" 0 1 (fontified t)) . -293) (undo-tree-id800 . -1) (#(" " 0 1 (fontified t)) . -294) (undo-tree-id801 . -1) 295) nil (25417 11224 18499 24000) 0 nil])
([nil nil ((284 . 285)) nil (25417 11224 18460 432000) 0 nil])
([nil nil ((285 . 286)) nil (25417 11224 18458 238000) 0 nil])
([nil nil ((288 . 290)) nil (25417 11224 18455 222000) 0 nil])
([nil nil ((260 . 275)) nil (25417 11224 18448 179000) 0 nil])
([nil nil ((277 . 281) (#("    " 0 4 (fontified t)) . 276) (undo-tree-id882 . -4) (275 . 281) (t 25417 11224 40171 142000)) nil (25417 11240 287421 555000) 0 nil])
([nil nil ((292 . 293) (281 . 293)) nil (25417 11240 287416 175000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -292) (undo-tree-id881 . -1) 293) nil (25417 11240 287413 169000) 0 nil])
([nil nil ((292 . 311)) nil (25417 11240 287408 521000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -302) (undo-tree-id880 . -1) 303) nil (25417 11240 287405 455000) 0 nil])
([nil nil ((302 . 303)) nil (25417 11240 287399 854000) 0 nil])
([nil nil ((#("    Enum.map(0..1, fn x -> x  ) <- final_json_response do
      encode_results_as_json()

    end
" 0 4 (fontified t) 4 8 (fontified t face font-lock-type-face) 8 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 16 (fontified t) 16 17 (rear-nonsticky t fontified t) 17 19 (fontified t) 19 21 (fontified t face font-lock-keyword-face) 21 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 55 (fontified t) 55 57 (fontified t face font-lock-keyword-face) 57 58 (fontified t) 58 86 (fontified t) 86 87 (fontified t) 87 88 (fontified t) 88 89 (fontified t) 89 90 (fontified t) 90 94 (fontified t) 94 97 (fontified t face font-lock-keyword-face) 97 98 (fontified t)) . -314) (undo-tree-id860 . -58) (undo-tree-id861 . -58) (undo-tree-id862 . -89) (undo-tree-id863 . -89) (undo-tree-id864 . -89) (undo-tree-id865 . -89) (undo-tree-id866 . -89) (undo-tree-id867 . -89) (undo-tree-id868 . -98) (undo-tree-id869 . -98) (undo-tree-id870 . -98) (undo-tree-id871 . -90) (undo-tree-id872 . -90) (undo-tree-id873 . -89) (undo-tree-id874 . -89) (undo-tree-id875 . -98) (undo-tree-id876 . -31) (undo-tree-id877 . -13) (undo-tree-id878 . -98) (undo-tree-id879 . -98) 412) nil (25417 11240 287389 595000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -260) (undo-tree-id883 . -1) 261 (t 25417 11240 332157 131000)) nil (25417 11262 966513 346000) 0 nil])
([nil nil ((260 . 264)) nil (25417 11262 966492 96000) 0 nil])
([nil nil ((#("def encode_results_as_json(res,n) do" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 26 (fontified t face font-lock-function-name-face) 26 32 (fontified t) 32 34 (fontified t) 34 36 (fontified t face font-lock-keyword-face)) . 318) (undo-tree-id885 . -36) (t 25417 11262 976141 385000)) nil (25417 11298 178116 912000) 0 nil])
([nil nil ((#(" end " 0 1 (rear-nonsticky t fontified t) 1 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t)) . 404) (undo-tree-id884 . -5)) nil (25417 11298 178109 579000) 0 nil])
([nil nil ((319 . 320)) nil (25417 11298 178088 239000) 0 nil])
([nil nil ((326 . 327) (t 25417 11298 196125 93000)) nil (25417 11304 857425 301000) 0 nil])
([nil nil ((340 . 341)) nil (25417 11304 857422 927000) 0 nil])
([nil nil ((340 . 341)) nil (25417 11304 857421 93000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -340) (undo-tree-id886 . -1) 341) nil (25417 11304 857417 497000) 0 nil])
([nil nil ((361 . 362)) nil (25417 11304 857401 897000) 0 nil])
([nil nil ((375 . 376)) nil (25417 11304 857398 942000) 0 nil])
([nil nil ((396 . 397)) nil (25417 11304 857391 588000) 0 nil])
([nil nil ((278 . 280) (t 25417 11304 868123 87000)) nil (25417 11316 460902 999000) 0 nil])
([nil nil ((260 . 261) (t 25417 11316 480120 391000)) nil (25417 11368 971985 999000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -260) (undo-tree-id887 . -1) (#(" " 0 1 (fontified t face font-lock-comment-delimiter-face)) . -261) (undo-tree-id888 . -1) 262 (t 25417 11368 980120 176000)) nil (25417 11409 158538 928000) 0 nil])
([nil nil ((260 . 261)) nil (25417 11409 158513 620000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t face font-lock-type-face)) . -270) (undo-tree-id889 . -1) 271 (t 25417 11409 204132 425000)) nil (25417 11423 674648 581000) 0 nil])
([nil nil ((281 . 285) (#("    " 0 4 (fontified nil)) . 280) (280 . 284) (280 . 281) (t 25417 11423 720139 310000)) nil (25417 11503 419366 406000) 0 nil])
([nil nil ((285 . 295)) nil (25417 11503 419362 859000) 0 nil])
([nil nil ((285 . 288)) nil (25417 11503 419360 685000) 0 nil])
([nil nil ((297 . 305)) nil (25417 11503 419358 591000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -321) (321 . 322) (#(")" 0 1 (fontified nil)) . -321) (321 . 322) (305 . 322)) nil (25417 11503 419355 696000) 0 nil])
([nil nil ((#("    IO.inspect(final_json_response)" 0 4 (fontified t) 4 6 (fontified t face font-lock-type-face) 6 14 (fontified t) 14 35 (fontified t)) . 324) (undo-tree-id896 . -35)) nil (25417 11503 419351 628000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 280) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1)) nil (25417 11503 419346 989000) 0 nil])
([nil nil ((261 . 265) (#(" " 0 1 (fontified t)) . 260) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (261 . 262)) nil (25417 11503 419336 409000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . 141) (#(" " 0 1 (fontified t)) . 141) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . 141) (#("s" 0 1 (fontified t face font-lock-variable-name-face)) . 141) (#("n" 0 1 (fontified t face font-lock-variable-name-face)) . 141) (#("o" 0 1 (fontified t face font-lock-variable-name-face)) . 141) (#("p" 0 1 (fontified t face font-lock-variable-name-face)) . 141) (#("s" 0 1 (fontified t face font-lock-variable-name-face)) . 141) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . 141) (#("r" 0 1 (fontified t face font-lock-variable-name-face)) . 141) (#("_" 0 1 (fontified t face font-lock-comment-face)) . 141) (#("n" 0 1 (fontified t face font-lock-variable-name-face)) . 141) (#("o" 0 1 (fontified t face font-lock-variable-name-face)) . 141) (#("s" 0 1 (fontified t face font-lock-variable-name-face)) . 141) (#("j" 0 1 (fontified t face font-lock-variable-name-face)) . 141) (#("_" 0 1 (fontified t face font-lock-comment-face)) . 141) (#("l" 0 1 (fontified t face font-lock-variable-name-face)) . 141) (#("a" 0 1 (fontified t face font-lock-variable-name-face)) . 141) (#("n" 0 1 (fontified t face font-lock-variable-name-face)) . 141) (#("i" 0 1 (fontified t face font-lock-variable-name-face)) . 141) (#("f" 0 1 (fontified t face font-lock-variable-name-face)) . 141)) nil (25417 11503 419307 365000) 0 nil])
([nil nil ((304 . 308) (t 25417 11503 468198 514000)) nil (25417 11511 523407 906000) 0 nil])
([nil nil ((#("I" 0 1 (fontified t face font-lock-type-face)) . -292) (undo-tree-id897 . -1) (#("O" 0 1 (fontified t face font-lock-type-face)) . -293) (undo-tree-id898 . -1) (#("." 0 1 (fontified t)) . -294) (undo-tree-id899 . -1) (#("i" 0 1 (fontified t)) . -295) (undo-tree-id900 . -1) (#("n" 0 1 (fontified t)) . -296) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (#("s" 0 1 (fontified t)) . -297) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (#("p" 0 1 (fontified t)) . -298) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (#("e" 0 1 (fontified t)) . -299) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (#("c" 0 1 (fontified t)) . -300) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (#("t" 0 1 (fontified t)) . -301) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (#("(" 0 1 (fontified t)) . -302) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . 1) (undo-tree-id922 . -1) (#(")" 0 1 (fontified t)) . -303) (undo-tree-id923 . -1) (undo-tree-id924 . 1) (undo-tree-id925 . -1) (#(" " 0 1 (fontified t)) . -304) (undo-tree-id926 . -1) 305 (t 25417 11511 544206 395000)) nil (25417 11595 796830 380000) 0 nil])
([nil nil ((292 . 304)) nil (25417 11595 796719 552000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -313) (313 . 314) (#(")" 0 1 (fontified nil)) . -313) (313 . 314) (304 . 314)) nil (25417 11595 796715 654000) 0 nil])
([nil nil ((313 . 314)) nil (25417 11595 796710 765000) 0 nil])
([nil nil ((315 . 316)) nil (25417 11595 796703 622000) 0 nil])
([nil nil ((243 . 244) (t 25417 11595 816307 152000)) nil (25417 11768 408811 528000) 0 nil])
([nil nil ((267 . 268)) nil (25417 11768 408808 593000) 0 nil])
([nil nil ((239 . 244)) nil (25417 11768 408805 597000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -258) (258 . 259) (#(")" 0 1 (fontified nil)) . -258) (258 . 259) (244 . 259)) nil (25417 11768 408796 280000) 0 nil])
([nil nil ((261 . 265) (#("    " 0 4 (fontified t)) . 260) (undo-tree-id934 . -4) (259 . 265) (t 25417 11768 420602 633000)) nil (25417 12274 870338 32000) 0 nil])
([nil nil ((261 . 265) (#("    " 0 4 (fontified nil)) . 260) (260 . 264) (260 . 261)) nil (25417 12274 870332 682000) 0 nil])
([nil nil ((259 . 264)) nil (25417 12274 870329 586000) 0 nil])
([nil nil ((141 . 151)) nil (25417 12274 870327 662000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -373) (undo-tree-id933 . -1) 374) nil (25417 12274 870325 278000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -379) (undo-tree-id932 . -1) 380) nil (25417 12274 870321 110000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -392) (undo-tree-id931 . -1) 393) nil (25417 12274 870316 822000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -412) (undo-tree-id930 . -1) 413) nil (25417 12274 870312 634000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -425) (undo-tree-id929 . -1) 426) nil (25417 12274 870308 296000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -445) (undo-tree-id928 . -1) 446) nil (25417 12274 870303 387000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -389) (undo-tree-id927 . -1) 390) nil (25417 12274 870296 654000) 0 nil])
([nil nil ((389 . 390)) nil (25417 12274 870277 218000) 0 nil])
([nil nil ((#("    |> IO.inspect()" 0 7 (fontified t) 7 9 (fontified t face font-lock-type-face) 9 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t)) . 250) (undo-tree-id935 . -19) (t 25417 12274 913904 32000)) nil (25417 12279 783277 120000) 0 nil])
([nil nil ((359 . 363) (t 25417 12279 829918 677000)) nil (25417 12290 1414 510000) 0 nil])
([nil nil ((442 . 445) (t 25417 12290 9949 86000)) nil (25417 12364 714149 797000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -457) (457 . 458) (#(")" 0 1 (fontified nil)) . -457) (457 . 458) (445 . 458)) nil (25417 12364 714146 731000) 0 nil])
([nil nil ((458 . 468) (457 . 459) (#("\"" 0 1 (fontified nil syntax-table (15))) . -457) (457 . 458)) nil (25417 12364 714142 684000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face font-lock-string-face)) . -463) (undo-tree-id938 . -1) 464) nil (25417 12364 714139 137000) 0 nil])
([nil nil ((463 . 464)) nil (25417 12364 714135 170000) 0 nil])
([nil nil ((#("}" 0 1 (fontified nil)) . -458) (458 . 459) (#("}" 0 1 (fontified nil)) . -458) (458 . 459) (457 . 459)) nil (25417 12364 714132 525000) 0 nil])
([nil nil ((457 . 458)) nil (25417 12364 714129 8000) 0 nil])
([nil nil ((460 . 461)) nil (25417 12364 714127 175000) 0 nil])
([nil nil ((473 . 474)) nil (25417 12364 714125 261000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t syntax-table (15) face font-lock-string-face)) . -472) (undo-tree-id937 . -1) 473) nil (25417 12364 714122 736000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t syntax-table (15) face font-lock-string-face)) . -461) (undo-tree-id936 . -1) 462) nil (25417 12364 714116 404000) 0 nil])
([nil nil ((461 . 463)) nil (25417 12364 714098 401000) 0 nil])
([nil nil ((474 . 476)) nil (25417 12364 714091 187000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -473) (undo-tree-id939 . -1) (#("&" 0 1 (fontified t)) . -474) (undo-tree-id940 . -1) (#("1" 0 1 (fontified t)) . -475) (undo-tree-id941 . -1) 476 (t 25417 12364 722175 612000)) nil (25417 12374 608835 60000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -452) (undo-tree-id949 . -1) (#("n" 0 1 (fontified t)) . -453) (undo-tree-id950 . -1) (#("t" 0 1 (fontified t)) . -454) (undo-tree-id951 . -1) (#("o" 0 1 (fontified t)) . -455) (undo-tree-id952 . -1) 456 (t 25417 12374 618206 23000)) nil (25417 12434 398900 575000) 0 nil])
([nil nil ((452 . 455)) nil (25417 12434 398888 933000) 0 nil])
([nil nil ((#("%" 0 1 (fontified t)) . -456) (undo-tree-id942 . -1) (#("{" 0 1 (fontified t)) . -457) (undo-tree-id943 . -1) (#("}" 0 1 (fontified t)) . -458) (undo-tree-id944 . -1) (undo-tree-id945 . 1) (undo-tree-id946 . -1) (#("," 0 1 (fontified t)) . -459) (undo-tree-id947 . -1) (#(" " 0 1 (fontified t)) . -460) (undo-tree-id948 . -1) 461) nil (25417 12434 398879 826000) 0 nil])
([nil nil ((442 . 445) (t 25417 12434 410391 633000)) nil (25417 12451 288059 336000) 0 nil])
([nil nil ((448 . 449)) nil (25417 12451 288050 660000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -448) (undo-tree-id953 . -1) 449 (t 25417 12451 334444 727000)) nil (25417 12493 760484 73000) 0 nil])
([nil nil ((356 . 361)) nil (25417 12493 760466 530000) 0 nil])
([nil nil ((475 . 478)) nil (25417 12493 760458 886000) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -453) (undo-tree-id954 . -1) (#(">" 0 1 (fontified t)) . -454) (undo-tree-id955 . -1) (#(" " 0 1 (fontified t)) . -455) (undo-tree-id956 . -1) 456 (t 25417 12493 770578 849000)) nil (25417 12496 820613 447000) 0 nil])
([nil nil ((461 . 463) (t 25417 12496 838588 598000)) nil (25417 12519 443580 164000) 0 nil])
([nil nil ((#(":QuotaState qs" 0 1 (fontified t face elixir-atom-face) 1 11 (fontified t face elixir-atom-face) 11 14 (fontified t)) . 463) (undo-tree-id957 . -14) (undo-tree-id958 . -14) (undo-tree-id959 . -14) 477) nil (25417 12519 443575 24000) 0 nil])
([nil nil ((nil rear-nonsticky nil 475 . 476) (nil fontified nil 473 . 476) (nil fontified nil 463 . 473) (nil fontified nil 462 . 463) (462 . 476)) nil (25417 12519 443550 418000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t)) . -476) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . 1) (undo-tree-id969 . -1) 477 (t 25417 12519 462660 692000)) nil (25417 12540 964103 8000) 0 nil])
([nil nil ((476 . 477) (#("]" 0 1 (fontified nil)) . -476) (476 . 477)) nil (25417 12540 964093 520000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t)) . -476) (undo-tree-id962 . -1) (undo-tree-id963 . 1) (undo-tree-id964 . -1) 477) nil (25417 12540 964090 995000) 0 nil])
([nil nil ((476 . 477) (#("}" 0 1 (fontified nil)) . -476) (476 . 477)) nil (25417 12540 964085 425000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -461) (undo-tree-id960 . -1) (undo-tree-id961 . -1) 462) nil (25417 12540 964081 257000) 0 nil])
([nil nil ((461 . 462)) nil (25417 12540 964063 594000) 0 nil])
([nil nil ((473 . 474) (t 25417 12540 970729 563000)) nil (25417 12551 926384 93000) 0 nil])
([nil nil ((#("q" 0 1 (fontified t)) . -475) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (#("s" 0 1 (fontified t rear-nonsticky t)) . -476) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) 477 (t 25417 12551 934764 783000)) nil (25417 12597 958224 503000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -491) (491 . 492) (#(")" 0 1 (fontified nil)) . -491) (491 . 492) (475 . 492)) nil (25417 12597 958195 729000) 0 nil])
([nil nil ((491 . 492)) nil (25417 12597 958186 121000) 0 nil])
([nil nil ((493 . 502) (t 25417 12597 978913 551000)) nil (25417 12641 219820 501000) 0 nil])
([nil nil ((501 . 503)) nil (25417 12641 219817 956000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -503) (undo-tree-id976 . -1) 504) nil (25417 12641 219813 598000) 0 nil])
([nil nil ((502 . 503)) nil (25417 12641 219791 387000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 483) (#("0" 0 1 (fontified t)) . 483) (#("(" 0 1 (fontified t)) . 483) (undo-tree-id978 . 1) (undo-tree-id979 . -1) (#("m" 0 1 (fontified t)) . 483) (#("e" 0 1 (fontified t)) . 483) (#("l" 0 1 (fontified t)) . 483) (#("e" 0 1 (fontified t)) . 483) (#(" " 0 1 (fontified t)) . 483) (#(">" 0 1 (fontified t)) . 483) (#("|" 0 1 (fontified t)) . 483) (#(" " 0 1 (fontified t)) . 483) (#(")" 0 1 (fontified t)) . 483) (#("0" 0 1 (fontified t)) . 483) (#("(" 0 1 (fontified t)) . 483) (#("m" 0 1 (fontified t)) . 483) (#("e" 0 1 (fontified t)) . 483) (#("l" 0 1 (fontified t)) . 483) (#("e" 0 1 (fontified t)) . 483) (#(" " 0 1 (fontified t)) . 483) (#(">" 0 1 (fontified t)) . 483) (#("|" 0 1 (fontified t)) . 483) (t 25417 12641 266242 604000)) nil (25417 12654 279984 243000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -482) (undo-tree-id977 . -1) 483) nil (25417 12654 279964 216000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -477) (undo-tree-id982 . -1) (#("u" 0 1 (fontified t)) . -478) (undo-tree-id983 . -1) (#("l" 0 1 (fontified t)) . -479) (undo-tree-id984 . -1) (#("t" 0 1 (fontified t)) . -480) (undo-tree-id985 . -1) (#("s" 0 1 (fontified t)) . -481) (undo-tree-id986 . -1) 482 (t 25417 12654 297924 407000)) nil (25417 12666 98059 207000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -475) (undo-tree-id980 . -1) (#("e" 0 1 (fontified t)) . -476) (undo-tree-id981 . -1) 477) nil (25417 12666 98043 508000) 0 nil])
([nil nil ((475 . 477)) nil (25417 12666 98020 55000) 0 nil])
([nil nil ((452 . 453) (t 25417 12666 145641 752000)) nil (25417 12699 633437 85000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -379) (undo-tree-id987 . -1) 380 (t 25417 12699 644875 471000)) nil (25417 12728 126101 396000) 0 nil])
([nil nil ((379 . 380)) nil (25417 12728 126077 552000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -379) (undo-tree-id988 . -1) 380 (t 25417 12728 148259 969000)) nil (25417 12743 294774 588000) 0 nil])
([nil nil ((379 . 380)) nil (25417 12743 294753 970000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -379) (undo-tree-id989 . -1) 380 (t 25417 12743 315945 447000)) nil (25417 12936 333292 942000) 0 nil])
([nil nil ((379 . 380)) nil (25417 12936 333267 264000) 0 nil])
([nil nil ((354 . 355) (t 25417 12936 356621 546000)) nil (25417 12956 951600 916000) 0 nil])
([nil nil ((370 . 371)) nil (25417 12956 951598 642000) 0 nil])
([nil nil ((384 . 385)) nil (25417 12956 951596 878000) 0 nil])
([nil nil ((405 . 406)) nil (25417 12956 951595 15000) 0 nil])
([nil nil ((419 . 420)) nil (25417 12956 951593 282000) 0 nil])
([nil nil ((440 . 441)) nil (25417 12956 951591 278000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -257) (257 . 258) (#(")" 0 1 (fontified nil)) . -257) (257 . 258) (249 . 258)) nil (25417 12956 951586 700000) 0 nil])
([nil nil ((257 . 258)) nil (25417 12956 951577 272000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -252) (undo-tree-id990 . -1) (#("l" 0 1 (fontified t)) . -253) (undo-tree-id991 . -1) (#("e" 0 1 (fontified t)) . -254) (undo-tree-id992 . -1) (#("m" 0 1 (fontified t)) . -255) (undo-tree-id993 . -1) (#("(" 0 1 (fontified t)) . -256) (undo-tree-id994 . -1) (#("1" 0 1 (fontified t)) . -257) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (#(")" 0 1 (fontified t)) . -258) (undo-tree-id997 . -1) (undo-tree-id998 . 1) (undo-tree-id999 . -1) 259 (t 25417 12956 972330 698000)) nil (25417 12974 700761 864000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -263) (263 . 264) (#(")" 0 1 (fontified nil)) . -263) (263 . 264) (252 . 264)) nil (25417 12974 700732 29000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t face font-lock-type-face)) . -253) (undo-tree-id1000 . -1) 254 (t 25417 12974 708088 967000)) nil (25417 12983 611786 78000) 0 nil])
([nil nil ((253 . 254)) nil (25417 12983 611763 325000) 0 nil])
([nil nil ((264 . 265) (t 25417 12983 631970 215000)) nil (25417 13009 228410 492000) 0 nil])
([nil nil ((#("|" 0 1 (fontified t)) . -249) (undo-tree-id1001 . -1) (#(">" 0 1 (fontified t)) . -250) (undo-tree-id1002 . -1) (#(" " 0 1 (fontified t)) . -251) (undo-tree-id1003 . -1) (#("I" 0 1 (fontified t face font-lock-type-face)) . -252) (undo-tree-id1004 . -1) (#("O" 0 1 (fontified t face font-lock-type-face)) . -253) (undo-tree-id1005 . -1) (#("." 0 1 (fontified t)) . -254) (undo-tree-id1006 . -1) (#("i" 0 1 (fontified t)) . -255) (undo-tree-id1007 . -1) (#("n" 0 1 (fontified t)) . -256) (undo-tree-id1008 . -1) (#("s" 0 1 (fontified t)) . -257) (undo-tree-id1009 . -1) (#("p" 0 1 (fontified t)) . -258) (undo-tree-id1010 . -1) (#("e" 0 1 (fontified t)) . -259) (undo-tree-id1011 . -1) (#("c" 0 1 (fontified t)) . -260) (undo-tree-id1012 . -1) (#("t" 0 1 (fontified t)) . -261) (undo-tree-id1013 . -1) (#("(" 0 1 (fontified t)) . -262) (undo-tree-id1014 . -1) (#(")" 0 1 (fontified t)) . -263) (undo-tree-id1015 . -1) (undo-tree-id1016 . 1) (undo-tree-id1017 . -1) (#("=" 0 1 (fontified t)) . -264) (undo-tree-id1018 . -1) 265) nil (25417 13009 228396 627000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . 251) (251 . 255) (251 . 252) (t 25417 13009 251639 624000)) nil (25417 13021 656238 888000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -267) (267 . 268) (#(")" 0 1 (fontified nil)) . -267) (267 . 268) (256 . 268)) nil (25417 13021 656234 930000) 0 nil])
([nil nil ((267 . 272)) nil (25417 13021 656231 63000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -283) (283 . 284) (#(")" 0 1 (fontified nil)) . -283) (283 . 284) (272 . 284)) nil (25417 13021 656226 194000) 0 nil])
([nil nil ((283 . 284)) nil (25417 13021 656217 658000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -283) (undo-tree-id1019 . -1) 284 (t 25417 13021 675484 668000)) nil (25417 13040 478880 988000) 0 nil])
([nil nil ((283 . 284)) nil (25417 13040 478860 780000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -283) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) 284 (t 25417 13040 499256 307000)) nil (25417 13750 689535 640000) 0 nil])
([nil nil ((283 . 284)) nil (25417 13750 689505 42000) 0 nil])
([nil nil ((256 . 260) (t 25417 13750 738310 918000)) nil (25417 13819 360634 748000) 0 nil])
([nil nil ((260 . 265)) nil (25417 13819 360632 283000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -263) (undo-tree-id1025 . -1) (#("-" 0 1 (fontified t)) . -264) (undo-tree-id1026 . -1) 265) nil (25417 13819 360629 237000) 0 nil])
([nil nil ((263 . 273)) nil (25417 13819 360623 166000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -260) (undo-tree-id1024 . -1) 261) nil (25417 13819 360620 611000) 0 nil])
([nil nil ((260 . 261)) nil (25417 13819 360616 73000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -300) (undo-tree-id1023 . -1) 301) nil (25417 13819 360612 276000) 0 nil])
([nil nil ((300 . 301)) nil (25417 13819 360594 683000) 0 nil])
([nil nil ((303 . 307)) nil (25417 13819 360586 828000) 0 nil])
([nil nil ((273 . 279) (#(" " 0 1 (fontified t)) . 272) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (273 . 274) (t 25417 13819 370060 898000)) nil (25417 13960 831034 783000) 0 nil])
([nil nil ((272 . 279)) nil (25417 13960 831028 601000) 0 nil])
([nil nil ((279 . 284)) nil (25417 13960 831026 928000) 0 nil])
([nil nil ((284 . 291)) nil (25417 13960 831025 225000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -284) (undo-tree-id1039 . -1) (#(" " 0 1 (fontified t)) . -285) (undo-tree-id1040 . -1) (#("-" 0 1 (fontified t)) . -286) (undo-tree-id1041 . -1) (#(">" 0 1 (fontified t)) . -287) (undo-tree-id1042 . -1) (#(" " 0 1 (fontified t)) . -288) (undo-tree-id1043 . -1) 289) nil (25417 13960 831021 327000) 0 nil])
([nil nil ((285 . 288)) nil (25417 13960 831007 231000) 0 nil])
([nil nil ((289 . 290) (#(" " 0 1 (fontified t)) . 289) (288 . 289)) nil (25417 13960 831004 977000) 0 nil])
([nil nil ((290 . 295)) nil (25417 13960 831002 412000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 295) (#(" " 0 1 (fontified t)) . 295) (#(" " 0 1 (fontified t)) . 295) (#(" " 0 1 (fontified t)) . 295) (#(" " 0 1 (fontified t)) . 295) (#(" " 0 1 (fontified t)) . 295) (#("
" 0 1 (fontified t)) . 295) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1)) nil (25417 13960 830998 144000) 0 nil])
([nil nil ((330 . 338)) nil (25417 13960 830989 418000) 0 nil])
([nil nil ((333 . 337) (#("      " 0 6 (fontified t)) . 330) (undo-tree-id1034 . -6) (undo-tree-id1035 . -6) (336 . 337)) nil (25417 13960 830986 903000) 0 nil])
([nil nil ((337 . 340)) nil (25417 13960 830980 852000) 0 nil])
([nil nil ((340 . 344)) nil (25417 13960 830979 178000) 0 nil])
([nil nil ((331 . 332)) nil (25417 13960 830977 485000) 0 nil])
([nil nil ((nil rear-nonsticky nil 374 . 375) (nil fontified nil 374 . 375) (nil fontified nil 373 . 374) (nil fontified nil 371 . 373) (nil fontified nil 355 . 371) (nil fontified nil 347 . 355) (nil fontified nil 345 . 347) (345 . 375)) nil (25417 13960 830974 900000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -326) (undo-tree-id1029 . -1) (#("n" 0 1 (fontified t)) . -327) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (#("d" 0 1 (fontified t face font-lock-keyword-face)) . -328) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) 329) nil (25417 13960 830968 408000) 0 nil])
([nil nil ((379 . 382) (#("    " 0 4 (fontified t)) . 379) (undo-tree-id1028 . -4) (#("	  " 0 3 (fontified nil)) . 378) (378 . 381) (378 . 379)) nil (25417 13960 830956 386000) 0 nil])
([nil nil ((378 . 384)) nil (25417 13960 830950 885000) 0 nil])
([nil nil ((384 . 386)) nil (25417 13960 830949 2000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -385) (undo-tree-id1027 . -1) 386) nil (25417 13960 830945 335000) 0 nil])
([nil nil ((385 . 387)) nil (25417 13960 830929 786000) 0 nil])
([nil nil ((387 . 394)) nil (25417 13960 830926 880000) 0 nil])
([nil nil ((393 . 396)) nil (25417 13960 830919 266000) 0 nil])
([nil nil ((#("   # |> Tuple.to_list()
   # |> Enum.map(fn x -> x |> Jason.encode |> elem(1) end)


" 0 3 (fontified t) 3 5 (fontified t face font-lock-comment-delimiter-face) 5 8 (fontified t face font-lock-comment-face) 8 13 (fontified t face font-lock-comment-face) 13 21 (fontified t face font-lock-comment-face) 21 23 (fontified t face font-lock-comment-face) 23 24 (fontified t face font-lock-comment-face) 24 27 (fontified t) 27 29 (fontified t face font-lock-comment-delimiter-face) 29 32 (fontified t face font-lock-comment-face) 32 36 (fontified t face font-lock-comment-face) 36 40 (fontified t face font-lock-comment-face) 40 41 (fontified t face font-lock-comment-face) 41 43 (fontified t face font-lock-comment-face) 43 54 (fontified t face font-lock-comment-face) 54 59 (fontified t face font-lock-comment-face) 59 74 (fontified t face font-lock-comment-face) 74 76 (fontified t face font-lock-comment-face) 76 78 (fontified t face font-lock-comment-face) 78 81 (fontified t face font-lock-comment-face) 81 82 (fontified t face font-lock-comment-face) 82 83 (fontified t face font-lock-comment-face) 83 84 (fontified t) 84 85 (fontified t)) . -402) (undo-tree-id1050 . -85) (undo-tree-id1051 . -85) (undo-tree-id1052 . -85) (undo-tree-id1053 . -84) (undo-tree-id1054 . -84) (undo-tree-id1055 . -83) (undo-tree-id1056 . -83) (undo-tree-id1057 . -24) (undo-tree-id1058 . -24) (undo-tree-id1059 . -85) (undo-tree-id1060 . -85) (undo-tree-id1061 . -85) (undo-tree-id1062 . -85) (undo-tree-id1063 . -85) (undo-tree-id1064 . -85) (undo-tree-id1065 . -85) (undo-tree-id1066 . -85) (undo-tree-id1067 . -85) 487 (t 25417 13960 849611 78000)) nil (25417 14215 570124 585000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 250) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1)) nil (25417 14215 570085 993000) 0 nil])
([nil nil ((#("    
" 0 4 (fontified t) 4 5 (fontified t)) . 372) (undo-tree-id1068 . -5) (undo-tree-id1069 . -5) (undo-tree-id1070 . -5) (undo-tree-id1071 . -5) (t 25417 14215 584967 104000)) nil (25417 14228 83650 492000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 428) (t 25417 14228 108939 638000)) nil (25417 14277 828451 166000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 448)) nil (25417 14277 828448 771000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 461)) nil (25417 14277 828446 908000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 481)) nil (25417 14277 828444 934000) 0 nil])
([nil nil ((323 . 324)) nil (25417 14277 828443 241000) 0 nil])
([nil nil ((324 . 337)) nil (25417 14277 828441 367000) 0 nil])
([nil nil ((#("             " 0 13 (fontified t)) . -324) (undo-tree-id1072 . -13) (337 . 338)) nil (25417 14277 828438 191000) 0 nil])
([nil nil ((325 . 326)) nil (25417 14277 828420 899000) 0 nil])
([nil nil ((324 . 345)) nil (25417 14277 828419 146000) 0 nil])
([nil nil ((345 . 348)) nil (25417 14277 828417 362000) 0 nil])
([nil nil ((nil rear-nonsticky nil 413 . 414) (nil fontified nil 413 . 414) (nil fontified nil 412 . 413) (nil fontified nil 410 . 412) (nil fontified nil 403 . 410) (nil fontified nil 401 . 403) (nil fontified nil 400 . 401) (nil fontified nil 399 . 400) (nil fontified nil 398 . 399) (nil fontified nil 391 . 398) (nil fontified nil 386 . 391) (nil fontified nil 383 . 386) (nil fontified nil 381 . 383) (nil fontified nil 380 . 381) (nil fontified nil 379 . 380) (nil fontified nil 377 . 379) (nil fontified nil 370 . 377) (nil fontified nil 368 . 370) (nil fontified nil 367 . 368) (nil fontified nil 366 . 367) (nil fontified nil 365 . 366) (nil fontified nil 358 . 365) (nil fontified nil 353 . 358) (nil fontified nil 350 . 353) (nil fontified nil 348 . 350) (348 . 414)) nil (25417 14277 828412 273000) 0 nil])
([nil nil ((368 . 389)) nil (25417 14277 828399 910000) 0 nil])
([nil nil ((389 . 392)) nil (25417 14277 828398 246000) 0 nil])
([nil nil ((405 . 426)) nil (25417 14277 828396 473000) 0 nil])
([nil nil ((426 . 429)) nil (25417 14277 828394 530000) 0 nil])
([nil nil ((449 . 470)) nil (25417 14277 828391 594000) 0 nil])
([nil nil ((470 . 474)) nil (25417 14277 828384 391000) 0 nil])
([nil nil ((#(" |> Jason.encode()
                          |> elem(1)
                          |> Jason.decode()
                           |> elem(1)" 0 1 (fontified t) 1 4 (fontified t) 4 9 (fontified t face font-lock-type-face) 9 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 43 (fontified t) 43 45 (fontified t) 45 52 (fontified t) 52 54 (fontified t) 54 55 (fontified t) 55 56 (fontified t) 56 80 (fontified t) 80 82 (fontified t) 82 85 (fontified t) 85 90 (fontified t face font-lock-type-face) 90 97 (fontified t) 97 98 (fontified t) 98 99 (fontified t) 99 100 (fontified t) 100 125 (fontified t) 125 127 (fontified t) 127 134 (fontified t) 134 136 (fontified t) 136 137 (fontified t)) . -349) (undo-tree-id1083 . -100) (undo-tree-id1084 . -100) (undo-tree-id1085 . -56) (undo-tree-id1086 . -56) (undo-tree-id1087 . -19) (undo-tree-id1088 . -19) (undo-tree-id1089 . -137) (undo-tree-id1090 . -100) (undo-tree-id1091 . -137) (undo-tree-id1092 . 1) (undo-tree-id1093 . -137) (undo-tree-id1094 . 3) (undo-tree-id1095 . -135) 486 (t 25417 14277 852833 684000)) nil (25417 14344 511801 312000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 323) (#(" " 0 1 (fontified t)) . 323) (#(" " 0 1 (fontified t)) . 323) (#(" " 0 1 (fontified t)) . 323) (#(" " 0 1 (fontified t)) . 323) (#(" " 0 1 (fontified t)) . 323) (#(" " 0 1 (fontified t)) . 323) (#(" " 0 1 (fontified t)) . 323) (#(" " 0 1 (fontified t)) . 323) (#(" " 0 1 (fontified t)) . 323) (#(" " 0 1 (fontified t)) . 323) (#(" " 0 1 (fontified t)) . 323) (#(" " 0 1 (fontified t)) . 323) (#(" " 0 1 (fontified t)) . 323) (#("
" 0 1 (fontified t)) . 323) (undo-tree-id1082 . -1)) nil (25417 14344 511772 698000) 0 nil])
([nil nil ((#("           
" 0 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t rear-nonsticky t)) . 323) (undo-tree-id1077 . -11) (undo-tree-id1078 . -12) (undo-tree-id1079 . -12) (undo-tree-id1080 . -12) (undo-tree-id1081 . -10)) nil (25417 14344 511762 619000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 323) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1)) nil (25417 14344 511716 623000) 0 nil])
([nil nil ((429 . 430)) nil (25417 14344 511709 450000) 0 nil])
([nil nil ((#("@" 0 1 (fontified t)) . -429) (undo-tree-id1073 . -1) 430) nil (25417 14344 511705 923000) 0 nil])
([nil nil ((429 . 430)) nil (25417 14344 511689 993000) 0 nil])
([nil nil ((450 . 451)) nil (25417 14344 511687 939000) 0 nil])
([nil nil ((464 . 465)) nil (25417 14344 511685 104000) 0 nil])
([nil nil ((485 . 486)) nil (25417 14344 511677 911000) 0 nil])
([nil nil ((nil rear-nonsticky nil 437 . 438) (nil fontified nil 393 . 438) (393 . 438) (t 25417 14344 536698 877000)) nil (25417 14627 393357 282000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t syntax-table (15) face font-lock-string-face)) . -417) (undo-tree-id1099 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -418) (undo-tree-id1100 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -419) (undo-tree-id1101 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -420) (undo-tree-id1102 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -421) (undo-tree-id1103 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -422) (undo-tree-id1104 . -1) (#("," 0 1 (fontified t face font-lock-string-face)) . -423) (undo-tree-id1105 . -1) (#("\"" 0 1 (fontified t syntax-table (15) face font-lock-string-face)) . -424) (undo-tree-id1106 . -1) (#("n" 0 1 (fontified t)) . -425) (undo-tree-id1107 . -1) (#("o" 0 1 (fontified t)) . -426) (undo-tree-id1108 . -1) (#("s" 0 1 (fontified t)) . -427) (undo-tree-id1109 . -1) (#("o" 0 1 (fontified t)) . -428) (undo-tree-id1110 . -1) (#("t" 0 1 (fontified t)) . -429) (undo-tree-id1111 . -1) (#("r" 0 1 (fontified t)) . -430) (undo-tree-id1112 . -1) (#("o" 0 1 (fontified t)) . -431) (undo-tree-id1113 . -1) (#("s" 0 1 (fontified t)) . -432) (undo-tree-id1114 . -1) (#("\"" 0 1 (fontified t syntax-table (15) face font-lock-string-face)) . -433) (undo-tree-id1115 . -1) 434) nil (25417 14627 393347 624000) 0 nil])
([nil nil ((#("{" 0 1 (fontified nil)) . -416) (undo-tree-id1098 . -1) (#("}" 0 1 (fontified t)) . 417)) nil (25417 14627 393311 206000) 0 nil])
([nil nil ((416 . 417)) nil (25417 14627 393307 339000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -416) (undo-tree-id1097 . -1) 417) nil (25417 14627 393304 904000) 0 nil])
([nil nil ((nil rear-nonsticky nil 433 . 434) (nil fontified nil 433 . 434) (nil fontified nil 431 . 433) (nil fontified nil 416 . 431) (416 . 434)) nil (25417 14627 393300 145000) 0 nil])
([nil nil ((#("	  " 0 1 (fontified nil) 1 3 (fontified nil)) . -446) (446 . 447) (#("	" 0 1 (fontified nil)) . 446) (442 . 446) (393 . 397) (437 . 438)) nil (25417 14627 393295 697000) 0 nil])
([nil nil ((nil fontified nil 489 . 490) (nil fontified nil 487 . 489) (nil fontified nil 486 . 487) (nil fontified nil 484 . 486) (nil fontified nil 469 . 484) (nil fontified nil 467 . 469) (nil fontified nil 456 . 467) (nil fontified nil 449 . 456) (nil fontified nil 446 . 449) (446 . 490)) nil (25417 14627 393290 668000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -436) (undo-tree-id1096 . -1) 437) nil (25417 14627 393283 53000) 0 nil])
([nil nil ((436 . 437)) nil (25417 14627 393266 683000) 0 nil])
([nil nil ((251 . 252)) nil (25417 14627 393265 19000) 0 nil])
([nil nil ((273 . 274)) nil (25417 14627 393263 346000) 0 nil])
([nil nil ((290 . 291)) nil (25417 14627 393261 613000) 0 nil])
([nil nil ((331 . 332)) nil (25417 14627 393259 559000) 0 nil])
([nil nil ((377 . 378)) nil (25417 14627 393256 594000) 0 nil])
([nil nil ((388 . 389)) nil (25417 14627 393249 701000) 0 nil])
([nil nil ((447 . 448) (t 25417 14627 408198 718000)) nil (25417 14634 246753 34000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -447) (undo-tree-id1116 . -1) 448) nil (25417 14634 246748 105000) 0 nil])
([nil nil ((448 . 449)) nil (25417 14634 246726 214000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -448) (undo-tree-id1118 . -1) 449 (t 25417 14634 272187 721000)) nil (25417 14657 407960 922000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t face elixir-atom-face)) . 469) (#("a" 0 1 (fontified t face elixir-atom-face)) . 469) (#("l" 0 1 (fontified t face elixir-atom-face)) . 469) (#("P" 0 1 (fontified t face elixir-atom-face)) . 469)) nil (25417 14657 407954 901000) 0 nil])
([nil nil ((469 . 476)) nil (25417 14657 407951 294000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face elixir-atom-face)) . -469) (undo-tree-id1117 . -1) 470) nil (25417 14657 407946 976000) 0 nil])
([nil nil ((469 . 470)) nil (25417 14657 407924 434000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -494) (undo-tree-id1119 . -1) 495 (t 25417 14657 460150 899000)) nil (25417 14660 600210 956000) 0 nil])
([nil nil ((494 . 495)) nil (25417 14660 600189 977000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -442) (undo-tree-id1323 . -1) 443 (t 25417 14660 624145 910000)) nil (25417 14713 830780 704000) 0 nil])
([nil nil ((442 . 443)) nil (25417 14713 830776 255000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -494) (undo-tree-id1322 . -1) 495) nil (25417 14713 830774 81000) 0 nil])
([nil nil ((494 . 495)) nil (25417 14713 830770 364000) 0 nil])
([nil nil ((#("Map.new([{:QuotasPlan, results |> elem(n)}])
    Map.new([{:QuotasConcept, results |> elem(n)}])
" 0 3 (fontified t face font-lock-type-face) 3 10 (fontified t) 10 21 (fontified t face elixir-atom-face) 21 23 (fontified t) 23 38 (fontified t) 38 40 (fontified t) 40 41 (rear-nonsticky t fontified t) 41 43 (fontified t) 43 44 (rear-nonsticky t fontified t) 44 45 (fontified t) 45 49 (fontified t) 49 52 (fontified t face font-lock-type-face) 52 59 (fontified t) 59 73 (fontified t face elixir-atom-face) 73 75 (fontified t) 75 90 (fontified t) 90 92 (fontified t) 92 93 (rear-nonsticky t fontified t) 93 95 (fontified t) 95 96 (rear-nonsticky t fontified t) 96 97 (fontified t)) . 403) (undo-tree-id1310 . -97) (undo-tree-id1311 . -97) (undo-tree-id1312 . -97) (undo-tree-id1313 . -97) (undo-tree-id1314 . -97) (undo-tree-id1315 . -97) (undo-tree-id1316 . -97) (undo-tree-id1317 . -45) (undo-tree-id1318 . -45) (undo-tree-id1319 . -23) (undo-tree-id1320 . -49) (undo-tree-id1321 . -97) 500) nil (25417 14713 830766 867000) 0 nil])
([nil nil ((336 . 342) (#("      " 0 6 (fontified nil)) . 335) (undo-tree-id1308 . -6) (335 . 342) (#(" " 0 1 (fontified nil face font-lock-comment-face)) . 334) (undo-tree-id1309 . -1) (290 . 296) (329 . 330)) nil (25417 14713 830744 94000) 0 nil])
([nil nil ((342 . 345)) nil (25417 14713 830737 41000) 0 nil])
([nil nil ((nil rear-nonsticky nil 440 . 441) (nil fontified nil 440 . 441) (nil fontified nil 439 . 440) (nil fontified nil 437 . 439) (nil fontified nil 436 . 437) (nil fontified nil 434 . 436) (nil fontified nil 419 . 434) (nil fontified nil 417 . 419) (nil fontified nil 403 . 417) (nil fontified nil 396 . 403) (nil fontified nil 393 . 396) (nil fontified nil 389 . 393) (nil fontified nil 388 . 389) (nil fontified nil 387 . 388) (nil fontified nil 385 . 387) (nil fontified nil 384 . 385) (nil fontified nil 382 . 384) (nil fontified nil 367 . 382) (nil fontified nil 365 . 367) (nil fontified nil 354 . 365) (nil fontified nil 347 . 354) (nil fontified nil 344 . 347) (344 . 441)) nil (25417 14713 830732 693000) 0 nil])
([nil nil ((#("    Map.new([{:QuotasConcept, results |> elem(n)}])" 0 4 (fontified t) 4 7 (fontified t face font-lock-type-face) 7 14 (fontified t) 14 28 (fontified t face elixir-atom-face) 28 30 (fontified t) 30 45 (fontified t) 45 47 (fontified t) 47 48 (rear-nonsticky t fontified t) 48 50 (fontified t) 50 51 (rear-nonsticky t fontified t)) . 389) (undo-tree-id1302 . -51) (undo-tree-id1303 . -51) (undo-tree-id1304 . 1) (undo-tree-id1305 . -51) (undo-tree-id1306 . 40) (undo-tree-id1307 . -12) 440) nil (25417 14713 830720 750000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t face font-lock-comment-face)) . 408) (#("u" 0 1 (fontified t face font-lock-comment-face)) . 408) (#("s" 0 1 (fontified t face font-lock-comment-face)) . 408) (#("e" 0 1 (fontified t face font-lock-comment-face)) . 408) (#("r" 0 1 (fontified t face font-lock-comment-face)) . 408) (#("(" 0 1 (fontified t face font-lock-comment-face)) . 408) (#("t" 0 1 (fontified t face font-lock-comment-face)) . 408) (#("c" 0 1 (fontified t face font-lock-comment-face)) . 408) (#("e" 0 1 (fontified t face font-lock-comment-face)) . 408) (#("p" 0 1 (fontified t face font-lock-comment-face)) . 408) (#("s" 0 1 (fontified t face font-lock-comment-face)) . 408) (#("n" 0 1 (fontified t face font-lock-comment-face)) . 408) (#("i" 0 1 (fontified t face font-lock-comment-face)) . 408) (#("." 0 1 (fontified t face font-lock-comment-face)) . 408) (#("O" 0 1 (fontified t face font-lock-comment-face)) . 408) (#("I" 0 1 (fontified t face font-lock-comment-face)) . 408)) nil (25417 14713 830705 481000) 0 nil])
([nil nil ((#(")" 0 1 (rear-nonsticky t fontified t face font-lock-comment-face)) . 408) (#(")" 0 1 (fontified t face font-lock-comment-face)) . 408) (undo-tree-id1296 . 1) (undo-tree-id1297 . 1) (undo-tree-id1298 . -1) (#("n" 0 1 (fontified t face font-lock-comment-face)) . 408) (undo-tree-id1299 . 1) (#("(" 0 1 (fontified t face font-lock-comment-face)) . 408) (undo-tree-id1300 . 1) (undo-tree-id1301 . -1) (#("m" 0 1 (fontified t face font-lock-comment-face)) . 408) (#("e" 0 1 (fontified t face font-lock-comment-face)) . 408) (#("l" 0 1 (fontified t face font-lock-comment-face)) . 408) (#("e" 0 1 (fontified t face font-lock-comment-face)) . 408) (#(" " 0 1 (fontified t face font-lock-comment-face)) . 408) (#(">" 0 1 (fontified t face font-lock-comment-face)) . 408) (#("|" 0 1 (fontified t face font-lock-comment-face)) . 408) (#(" " 0 1 (fontified t face font-lock-comment-face)) . 408) (#("s" 0 1 (fontified t face font-lock-comment-face)) . 408) (#("t" 0 1 (fontified t face font-lock-comment-face)) . 408)) nil (25417 14713 830693 87000) 0 nil])
([nil nil ((409 . 410) (#(" " 0 1 (fontified nil face font-lock-comment-face)) . 408) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (393 . 394) (408 . 409)) nil (25417 14713 830676 25000) 0 nil])
([nil nil ((nil fontified nil 460 . 461) (nil fontified nil 458 . 460) (nil fontified nil 457 . 458) (nil fontified nil 455 . 457) (nil fontified nil 440 . 455) (nil fontified nil 438 . 440) (nil fontified nil 424 . 438) (nil fontified nil 417 . 424) (nil fontified nil 414 . 417) (nil fontified nil 410 . 414) (410 . 461)) nil (25417 14713 830667 910000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 393) (#("	" 0 1 (fontified t)) . 393)) nil (25417 14713 830661 137000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 290) (#(" " 0 1 (fontified t)) . 290) (#(" " 0 1 (fontified t)) . 290) (#(" " 0 1 (fontified t)) . 290) (#(" " 0 1 (fontified t)) . 290) (#(" " 0 1 (fontified t)) . 290) (#(" " 0 1 (fontified t)) . 290)) nil (25417 14713 830656 598000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 251)) nil (25417 14713 830651 949000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 272)) nil (25417 14713 830649 865000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -304) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (#("r" 0 1 (fontified t)) . -305) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (#("e" 0 1 (fontified t)) . -306) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (#("s" 0 1 (fontified t)) . -307) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (#("u" 0 1 (fontified t)) . -308) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (#("l" 0 1 (fontified t)) . -309) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (#("t" 0 1 (fontified t)) . -310) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (#("s" 0 1 (fontified t)) . -311) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (#(" " 0 1 (fontified t)) . -312) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (#("|" 0 1 (fontified t)) . -313) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (#(">" 0 1 (fontified t)) . -314) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (#(" " 0 1 (fontified t)) . -315) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (#("e" 0 1 (fontified t)) . -316) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (#("l" 0 1 (fontified t)) . -317) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (#("e" 0 1 (fontified t)) . -318) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (#("m" 0 1 (fontified t)) . -319) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (#("(" 0 1 (fontified t)) . -320) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (#("n" 0 1 (fontified t)) . -321) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (#(")" 0 1 (fontified t)) . -322) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (#(" " 0 1 (fontified t)) . -323) (undo-tree-id1290 . -1) (#(")" 0 1 (fontified t)) . -324) (undo-tree-id1291 . -1) (undo-tree-id1292 . 1) (undo-tree-id1293 . -1) 325) nil (25417 14713 830631 370000) 0 nil])
([nil nil ((#("I" 0 1 (fontified t face font-lock-type-face)) . -294) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (#("O" 0 1 (fontified t face font-lock-type-face)) . -295) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (#("." 0 1 (fontified t)) . -296) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (#("i" 0 1 (fontified t)) . -297) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (#("n" 0 1 (fontified t)) . -298) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (#("s" 0 1 (fontified t)) . -299) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (#("p" 0 1 (fontified t)) . -300) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (#("e" 0 1 (fontified t)) . -301) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (#("c" 0 1 (fontified t)) . -302) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (#("t" 0 1 (fontified t)) . -303) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) 304) nil (25417 14713 830309 8000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 295) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1)) nil (25417 14713 830210 711000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . 348) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1)) nil (25417 14713 830202 406000) 0 nil])
([nil nil ((#(" 
" 0 1 (fontified t) 1 2 (fontified t)) . 348) (undo-tree-id1126 . -2) (undo-tree-id1127 . -2) (undo-tree-id1128 . -2) (undo-tree-id1129 . -2)) nil (25417 14713 830194 170000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 348) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1)) nil (25417 14713 830182 488000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -415) (undo-tree-id1121 . -1) 416) nil (25417 14713 830171 928000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -425) (undo-tree-id1120 . -1) 426) nil (25417 14713 830161 498000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 362) (#("	" 0 1 (fontified t)) . 362) (undo-tree-id1324 . -1) (t 25417 14713 853419 172000)) nil (25417 14717 310024 659000) 0 nil])
([nil nil ((362 . 367)) nil (25417 14717 310001 154000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -474) (undo-tree-id1326 . -1) 475 (t 25417 14717 357499 361000)) nil (25417 14757 785324 646000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -494) (undo-tree-id1325 . -1) 495) nil (25417 14757 785318 124000) 0 nil])
([nil nil ((350 . 353) (303 . 305) (347 . 348)) nil (25417 14757 785301 232000) 0 nil])
([nil nil ((nil rear-nonsticky nil 382 . 383) (nil fontified nil 382 . 383) (nil fontified nil 380 . 382) (nil fontified nil 373 . 380) (nil fontified nil 371 . 373) (nil fontified nil 370 . 371) (nil fontified nil 369 . 370) (nil fontified nil 368 . 369) (nil fontified nil 361 . 368) (nil fontified nil 356 . 361) (nil fontified nil 353 . 356) (353 . 383)) nil (25417 14757 785296 973000) 0 nil])
([nil nil ((372 . 380)) nil (25417 14757 785290 151000) 0 nil])
([nil nil ((518 . 519)) nil (25417 14757 785287 295000) 0 nil])
([nil nil ((539 . 540)) nil (25417 14757 785279 801000) 0 nil])
([nil nil ((391 . 395) (t 25417 14757 798389 256000)) nil (25417 14779 228047 138000) 0 nil])
([nil nil ((395 . 407)) nil (25417 14779 228044 954000) 0 nil])
([nil nil ((395 . 397)) nil (25417 14779 228043 251000) 0 nil])
([nil nil ((397 . 398)) nil (25417 14779 228041 417000) 0 nil])
([nil nil ((410 . 412)) nil (25417 14779 228039 694000) 0 nil])
([nil nil ((412 . 416)) nil (25417 14779 228037 931000) 0 nil])
([nil nil ((424 . 425) (416 . 425)) nil (25417 14779 228035 667000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -424) (undo-tree-id1327 . -1) 425) nil (25417 14779 228030 577000) 0 nil])
([nil nil ((424 . 425)) nil (25417 14779 228009 257000) 0 nil])
([nil nil ((#("	  |> Jason.encode()
          |> elem(1)
	  |> Jason.decode()
	  |> elem(1)
" 0 3 (fontified t) 3 6 (fontified t) 6 11 (fontified t face font-lock-type-face) 11 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 31 (fontified t) 31 38 (fontified t) 38 40 (fontified t) 40 41 (fontified t rear-nonsticky t) 41 42 (fontified t) 42 48 (fontified t) 48 53 (fontified t face font-lock-type-face) 53 60 (fontified t) 60 62 (fontified t) 62 63 (fontified t) 63 73 (fontified t) 73 76 (fontified t) 76 77 (fontified t)) . -350) (undo-tree-id1437 . -21) (undo-tree-id1438 . -21) (undo-tree-id1439 . -42) (undo-tree-id1440 . -42) (undo-tree-id1441 . -63) (undo-tree-id1442 . -63) (undo-tree-id1443 . -77) (undo-tree-id1444 . -77) (undo-tree-id1445 . -77) (undo-tree-id1446 . -77) (undo-tree-id1447 . -77) (undo-tree-id1448 . -3) (undo-tree-id1449 . -77) 427 (t 25417 14779 278836 373000)) nil (25417 14846 670717 835000) 0 nil])
([nil nil ((364 . 365)) nil (25417 14846 670694 912000) 0 nil])
([nil nil ((349 . 353)) nil (25417 14846 670693 78000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -367) (367 . 368) (#(")" 0 1 (fontified nil)) . -367) (367 . 368) (353 . 368)) nil (25417 14846 670690 544000) 0 nil])
([nil nil ((441 . 444) (392 . 393) (439 . 440)) nil (25417 14846 670686 837000) 0 nil])
([nil nil ((444 . 457)) nil (25417 14846 670684 51000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t face font-lock-type-face)) . -448) (undo-tree-id1436 . -1) 449) nil (25417 14846 670681 857000) 0 nil])
([nil nil ((448 . 449)) nil (25417 14846 670678 40000) 0 nil])
([nil nil ((#("#  qs = results
#  |> elem(1)
#  |> Jason.encode()
#  |> elem(1)
#  |> Jason.decode()
#  |> elem(1)
  
 # Map.new({:QuotaState, qs})
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 3 (fontified t face font-lock-comment-delimiter-face) 3 5 (fontified t face font-lock-comment-face) 5 8 (fontified t face font-lock-comment-face) 8 15 (fontified t face font-lock-comment-face) 15 16 (fontified t face font-lock-comment-face) 16 17 (fontified t face font-lock-comment-delimiter-face) 17 19 (fontified t face font-lock-comment-delimiter-face) 19 26 (fontified t face font-lock-comment-face) 26 28 (fontified t face font-lock-comment-face) 28 29 (fontified t face font-lock-comment-face) 29 30 (fontified t face font-lock-comment-face) 30 31 (fontified t face font-lock-comment-delimiter-face) 31 33 (fontified t face font-lock-comment-delimiter-face) 33 36 (fontified t face font-lock-comment-face) 36 41 (fontified t face font-lock-comment-face) 41 48 (fontified t face font-lock-comment-face) 48 49 (fontified t face font-lock-comment-face) 49 50 (fontified t face font-lock-comment-face) 50 51 (fontified t face font-lock-comment-face) 51 52 (fontified t face font-lock-comment-delimiter-face) 52 54 (fontified t face font-lock-comment-delimiter-face) 54 61 (fontified t face font-lock-comment-face) 61 63 (fontified t face font-lock-comment-face) 63 64 (fontified t face font-lock-comment-face) 64 65 (fontified t face font-lock-comment-face) 65 66 (fontified t face font-lock-comment-delimiter-face) 66 68 (fontified t face font-lock-comment-delimiter-face) 68 71 (fontified t face font-lock-comment-face) 71 76 (fontified t face font-lock-comment-face) 76 83 (fontified t face font-lock-comment-face) 83 84 (fontified t face font-lock-comment-face) 84 85 (fontified t face font-lock-comment-face) 85 86 (fontified t face font-lock-comment-face) 86 87 (fontified t face font-lock-comment-delimiter-face) 87 89 (fontified t face font-lock-comment-delimiter-face) 89 96 (fontified t face font-lock-comment-face) 96 98 (fontified t face font-lock-comment-face) 98 99 (fontified t face font-lock-comment-face) 99 100 (fontified t face font-lock-comment-face) 100 102 (fontified t) 102 103 (fontified t) 103 104 (fontified t) 104 106 (fontified t face font-lock-comment-delimiter-face) 106 109 (fontified t face font-lock-comment-face) 109 113 (fontified t face font-lock-comment-face) 113 114 (fontified t face font-lock-comment-face) 114 115 (fontified t face font-lock-comment-face) 115 116 (fontified t face font-lock-comment-face) 116 126 (fontified t face font-lock-comment-face) 126 127 (fontified t face font-lock-comment-face) 127 130 (fontified t face font-lock-comment-face) 130 131 (fontified t face font-lock-comment-face) 131 132 (fontified t face font-lock-comment-face) 132 133 (fontified t face font-lock-comment-face)) . -484) (undo-tree-id1414 . -133) (undo-tree-id1415 . -133) (undo-tree-id1416 . -103) (undo-tree-id1417 . -103) (undo-tree-id1418 . -16) (undo-tree-id1419 . -16) (undo-tree-id1420 . -86) (undo-tree-id1421 . -86) (undo-tree-id1422 . -65) (undo-tree-id1423 . -65) (undo-tree-id1424 . -51) (undo-tree-id1425 . -51) (undo-tree-id1426 . -30) (undo-tree-id1427 . -30) (undo-tree-id1428 . -100) (undo-tree-id1429 . -100) (undo-tree-id1430 . -128) (undo-tree-id1431 . -133) (undo-tree-id1432 . -133) (undo-tree-id1433 . -30) (undo-tree-id1434 . -33) (undo-tree-id1435 . -133) 617) nil (25417 14846 670673 341000) 0 nil])
([nil nil ((#("
\"\"\"
  def render(\"credits_quota.json\", %{quota: quota}) do  
    %{
      id: quota.id,
      loan_code: quota.loan_code,
      plan_number: quota.plan_number,
      quota_sec: quota.quota_sec,
      start_date: quota.start_date,
      payment_date: quota.payment_date,
      due_date: quota.due_date,
      quota_delayed_days: quota.quota_delayed_days,
      quota_state: quota.quota_state,
      balance_sub_code: quota.balance_sub_code,
      delayed_quota_history_days: quota.delayed_quota_history_days,
      previous_quota_state: quota.previous_quota_state,
      previous_payment_date: quota.previous_payment_date,
      previous_state_sub_code: quota.previous_state_sub_code,
      prevision_amount: quota.prevision_amount,
      inte_adjust: quota.inte_adjust,
      bill_number: quota.bill_number
    }
  end

  def render(\"credits_clients_quota.json\", %{clients_quota: clients_quota}) do
    %{
      loan_code: clients_quota.loan_code,
      plan_number: clients_quota.plan_number,
      quota_sec: clients_quota.quota_sec,
      concept_code: clients_quota.concept_code,
      user_code: clients_quota.user_code,
      calc_number_days: clients_quota.calc_number_days,
      quota_amount: clients_quota.quota_amount,
      earned_amount: clients_quota.earned_amount,
      paid_amount: clients_quota.paid_amount,
      condoned_amount: clients_quota.condoned_amount,
      payment_sec: clients_quota.payment_sec,
      payment_date: clients_quota.payment_date,
      concept_state: clients_quota.concept_state,
      previous_paid_amount: clients_quota.previous_paid_amount,
      previous_concept_state: clients_quota.previous_concept_state,
      previous_payment_date: clients_quota.previous_payment_date,
      previous_sec_payment: clients_quota.previous_sec_payment,
      last_payment_penalty: clients_quota.last_payment_penalty,
      previous_earned_amount: clients_quota.previous_earned_amount,
      debt_balance: clients_quota.debt_balance,
      office_code: clients_quota.office_code
    }
  end
\"\"\"
" 0 1 (fontified t) 1 2 (syntax-table (15) fontified t face font-lock-string-face) 2 3 (fontified t face font-lock-string-face) 3 4 (fontified t face font-lock-string-face) 4 5 (fontified t face font-lock-string-face) 5 7 (fontified t face font-lock-string-face) 7 10 (fontified t face font-lock-string-face) 10 11 (fontified t face font-lock-string-face) 11 17 (fontified t face font-lock-string-face) 17 18 (fontified t face font-lock-string-face) 18 19 (fontified t face font-lock-string-face) 19 37 (fontified t face font-lock-string-face) 37 38 (fontified t face font-lock-string-face) 38 39 (fontified t face font-lock-string-face) 39 40 (fontified t face font-lock-string-face) 40 41 (fontified t face font-lock-string-face) 41 42 (fontified t face font-lock-string-face) 42 43 (fontified t face font-lock-string-face) 43 44 (fontified t face font-lock-string-face) 44 45 (fontified t face font-lock-string-face) 45 46 (fontified t face font-lock-string-face) 46 47 (fontified t face font-lock-string-face) 47 48 (fontified t face font-lock-string-face) 48 49 (fontified t face font-lock-string-face) 49 50 (fontified t face font-lock-string-face) 50 51 (fontified t face font-lock-string-face) 51 52 (fontified t face font-lock-string-face) 52 53 (fontified t face font-lock-string-face) 53 54 (fontified t face font-lock-string-face) 54 55 (fontified t face font-lock-string-face) 55 57 (fontified t face font-lock-string-face) 57 58 (fontified t face font-lock-string-face) 58 59 (rear-nonsticky t fontified t face font-lock-string-face) 59 61 (fontified t face font-lock-string-face) 61 62 (fontified t face font-lock-string-face) 62 75 (fontified t face font-lock-string-face) 75 78 (fontified t face font-lock-string-face) 78 92 (fontified t face font-lock-string-face) 92 95 (fontified t face font-lock-string-face) 95 105 (fontified t face font-lock-string-face) 105 113 (fontified t face font-lock-string-face) 113 114 (fontified t face font-lock-string-face) 114 115 (fontified t face font-lock-string-face) 115 116 (fontified t face font-lock-string-face) 116 118 (fontified t face font-lock-string-face) 118 123 (fontified t face font-lock-string-face) 123 127 (fontified t face font-lock-string-face) 127 128 (fontified t face font-lock-string-face) 128 129 (fontified t face font-lock-string-face) 129 137 (fontified t face font-lock-string-face) 137 139 (fontified t face font-lock-string-face) 139 141 (fontified t face font-lock-string-face) 141 142 (fontified t face font-lock-string-face) 142 147 (fontified t face font-lock-string-face) 147 148 (fontified t face font-lock-string-face) 148 154 (fontified t face font-lock-string-face) 154 155 (fontified t face font-lock-string-face) 155 156 (fontified t face font-lock-string-face) 156 160 (fontified t face font-lock-string-face) 160 161 (fontified t face font-lock-string-face) 161 162 (fontified t face font-lock-string-face) 162 167 (fontified t face font-lock-string-face) 167 174 (fontified t face font-lock-string-face) 174 175 (fontified t face font-lock-string-face) 175 177 (fontified t face font-lock-string-face) 177 180 (fontified t face font-lock-string-face) 180 186 (fontified t face font-lock-string-face) 186 188 (fontified t face font-lock-string-face) 188 193 (fontified t face font-lock-string-face) 193 194 (fontified t face font-lock-string-face) 194 195 (fontified t face font-lock-string-face) 195 196 (fontified t face font-lock-string-face) 196 201 (fontified t face font-lock-string-face) 201 203 (fontified t face font-lock-string-face) 203 207 (fontified t face font-lock-string-face) 207 212 (fontified t face font-lock-string-face) 212 221 (fontified t face font-lock-string-face) 221 225 (fontified t face font-lock-string-face) 225 226 (fontified t face font-lock-string-face) 226 227 (fontified t face font-lock-string-face) 227 231 (fontified t face font-lock-string-face) 231 232 (fontified t face font-lock-string-face) 232 234 (fontified t face font-lock-string-face) 234 235 (fontified t face font-lock-string-face) 235 237 (fontified t face font-lock-string-face) 237 240 (fontified t face font-lock-string-face) 240 241 (fontified t face font-lock-string-face) 241 242 (fontified t face font-lock-string-face) 242 243 (fontified t face font-lock-string-face) 243 245 (fontified t face font-lock-string-face) 245 246 (fontified t face font-lock-string-face) 246 247 (fontified t face font-lock-string-face) 247 248 (fontified t face font-lock-string-face) 248 249 (fontified t face font-lock-string-face) 249 250 (fontified t face font-lock-string-face) 250 251 (fontified t face font-lock-string-face) 251 252 (fontified t face font-lock-string-face) 252 254 (fontified t face font-lock-string-face) 254 255 (fontified t face font-lock-string-face) 255 256 (fontified t face font-lock-string-face) 256 258 (fontified t face font-lock-string-face) 258 260 (fontified t face font-lock-string-face) 260 261 (fontified t face font-lock-string-face) 261 264 (fontified t face font-lock-string-face) 264 265 (fontified t face font-lock-string-face) 265 266 (fontified t face font-lock-string-face) 266 267 (fontified t face font-lock-string-face) 267 269 (fontified t face font-lock-string-face) 269 270 (fontified t face font-lock-string-face) 270 271 (fontified t face font-lock-string-face) 271 272 (fontified t face font-lock-string-face) 272 273 (fontified t face font-lock-string-face) 273 274 (fontified t face font-lock-string-face) 274 277 (fontified t face font-lock-string-face) 277 278 (fontified t face font-lock-string-face) 278 280 (fontified t face font-lock-string-face) 280 282 (fontified t face font-lock-string-face) 282 283 (fontified t face font-lock-string-face) 283 286 (fontified t face font-lock-string-face) 286 289 (fontified t face font-lock-string-face) 289 290 (fontified t face font-lock-string-face) 290 291 (fontified t face font-lock-string-face) 291 292 (fontified t face font-lock-string-face) 292 295 (fontified t face font-lock-string-face) 295 296 (fontified t face font-lock-string-face) 296 301 (fontified t face font-lock-string-face) 301 303 (fontified t face font-lock-string-face) 303 304 (fontified t face font-lock-string-face) 304 309 (fontified t face font-lock-string-face) 309 311 (fontified t face font-lock-string-face) 311 313 (fontified t face font-lock-string-face) 313 314 (fontified t face font-lock-string-face) 314 318 (fontified t face font-lock-string-face) 318 319 (fontified t face font-lock-string-face) 319 320 (fontified t face font-lock-string-face) 320 324 (fontified t face font-lock-string-face) 324 326 (fontified t face font-lock-string-face) 326 328 (fontified t face font-lock-string-face) 328 330 (fontified t face font-lock-string-face) 330 334 (fontified t face font-lock-string-face) 334 335 (fontified t face font-lock-string-face) 335 340 (fontified t face font-lock-string-face) 340 341 (fontified t face font-lock-string-face) 341 342 (fontified t face font-lock-string-face) 342 343 (fontified t face font-lock-string-face) 343 344 (fontified t face font-lock-string-face) 344 345 (fontified t face font-lock-string-face) 345 347 (fontified t face font-lock-string-face) 347 348 (fontified t face font-lock-string-face) 348 349 (fontified t face font-lock-string-face) 349 351 (fontified t face font-lock-string-face) 351 352 (fontified t face font-lock-string-face) 352 353 (fontified t face font-lock-string-face) 353 354 (fontified t face font-lock-string-face) 354 355 (fontified t face font-lock-string-face) 355 356 (fontified t face font-lock-string-face) 356 361 (fontified t face font-lock-string-face) 361 371 (fontified t face font-lock-string-face) 371 373 (fontified t face font-lock-string-face) 373 377 (fontified t face font-lock-string-face) 377 379 (fontified t face font-lock-string-face) 379 380 (fontified t face font-lock-string-face) 380 384 (fontified t face font-lock-string-face) 384 385 (fontified t face font-lock-string-face) 385 387 (fontified t face font-lock-string-face) 387 388 (fontified t face font-lock-string-face) 388 389 (fontified t face font-lock-string-face) 389 393 (fontified t face font-lock-string-face) 393 396 (fontified t face font-lock-string-face) 396 397 (fontified t face font-lock-string-face) 397 399 (fontified t face font-lock-string-face) 399 400 (fontified t face font-lock-string-face) 400 403 (fontified t face font-lock-string-face) 403 408 (fontified t face font-lock-string-face) 408 411 (fontified t face font-lock-string-face) 411 413 (fontified t face font-lock-string-face) 413 414 (fontified t face font-lock-string-face) 414 416 (fontified t face font-lock-string-face) 416 421 (fontified t face font-lock-string-face) 421 432 (fontified t face font-lock-string-face) 432 433 (fontified t face font-lock-string-face) 433 441 (fontified t face font-lock-string-face) 441 443 (fontified t face font-lock-string-face) 443 445 (fontified t face font-lock-string-face) 445 446 (fontified t face font-lock-string-face) 446 447 (fontified t face font-lock-string-face) 447 452 (fontified t face font-lock-string-face) 452 453 (fontified t face font-lock-string-face) 453 461 (fontified t face font-lock-string-face) 461 472 (fontified t face font-lock-string-face) 472 474 (fontified t face font-lock-string-face) 474 477 (fontified t face font-lock-string-face) 477 479 (fontified t face font-lock-string-face) 479 480 (fontified t face font-lock-string-face) 480 492 (face font-lock-string-face fontified t) 492 497 (face font-lock-string-face fontified t) 497 505 (face font-lock-string-face fontified t) 505 509 (face font-lock-string-face fontified t) 509 515 (fontified t face font-lock-string-face) 515 536 (fontified t face font-lock-string-face) 536 562 (fontified t face font-lock-string-face) 562 565 (fontified t face font-lock-string-face) 565 571 (fontified t face font-lock-string-face) 571 593 (fontified t face font-lock-string-face) 593 623 (fontified t face font-lock-string-face) 623 629 (fontified t face font-lock-string-face) 629 653 (fontified t face font-lock-string-face) 653 691 (fontified t face font-lock-string-face) 691 695 (fontified t face font-lock-string-face) 695 708 (fontified t face font-lock-string-face) 708 731 (fontified t face font-lock-string-face) 731 733 (fontified t face font-lock-string-face) 733 739 (fontified t face font-lock-string-face) 739 751 (fontified t face font-lock-string-face) 751 771 (fontified t face font-lock-string-face) 771 777 (fontified t face font-lock-string-face) 777 789 (fontified t face font-lock-string-face) 789 816 (fontified t face font-lock-string-face) 816 819 (fontified t face font-lock-string-face) 819 823 (fontified t face font-lock-string-face) 823 826 (fontified t face font-lock-string-face) 826 827 (fontified t face font-lock-string-face) 827 833 (fontified t face font-lock-string-face) 833 834 (fontified t face font-lock-string-face) 834 835 (fontified t face font-lock-string-face) 835 855 (fontified t face font-lock-string-face) 855 861 (fontified t face font-lock-string-face) 861 862 (fontified t face font-lock-string-face) 862 866 (fontified t face font-lock-string-face) 866 880 (fontified t face font-lock-string-face) 880 897 (fontified t face font-lock-string-face) 897 899 (fontified t face font-lock-string-face) 899 900 (fontified t face font-lock-string-face) 900 913 (fontified t face font-lock-string-face) 913 923 (fontified t face font-lock-string-face) 923 955 (fontified t face font-lock-string-face) 955 967 (fontified t face font-lock-string-face) 967 1001 (fontified t face font-lock-string-face) 1001 1009 (fontified t face font-lock-string-face) 1009 1011 (face font-lock-string-face fontified t) 1011 1037 (face font-lock-string-face fontified t) 1037 1043 (fontified t face font-lock-string-face) 1043 1056 (fontified t face font-lock-string-face) 1056 1065 (fontified t face font-lock-string-face) 1065 1085 (fontified t face font-lock-string-face) 1085 1091 (fontified t face font-lock-string-face) 1091 1101 (fontified t face font-lock-string-face) 1101 1133 (fontified t face font-lock-string-face) 1133 1150 (fontified t face font-lock-string-face) 1150 1189 (fontified t face font-lock-string-face) 1189 1202 (fontified t face font-lock-string-face) 1202 1233 (fontified t face font-lock-string-face) 1233 1237 (fontified t face font-lock-string-face) 1237 1251 (fontified t face font-lock-string-face) 1251 1281 (fontified t face font-lock-string-face) 1281 1287 (fontified t face font-lock-string-face) 1287 1299 (fontified t face font-lock-string-face) 1299 1333 (fontified t face font-lock-string-face) 1333 1349 (fontified t face font-lock-string-face) 1349 1387 (fontified t face font-lock-string-face) 1387 1399 (fontified t face font-lock-string-face) 1399 1400 (fontified t face font-lock-string-face) 1400 1427 (fontified t face font-lock-string-face) 1427 1433 (fontified t face font-lock-string-face) 1433 1446 (fontified t face font-lock-string-face) 1446 1481 (fontified t face font-lock-string-face) 1481 1495 (fontified t face font-lock-string-face) 1495 1531 (fontified t face font-lock-string-face) 1531 1537 (fontified t face font-lock-string-face) 1537 1552 (face font-lock-string-face fontified t) 1552 1585 (face font-lock-string-face fontified t) 1585 1589 (face font-lock-string-face fontified t) 1589 2018 (fontified t face font-lock-string-face) 2018 2024 (fontified t face font-lock-string-face) 2024 2025 (fontified t face font-lock-string-face) 2025 2026 (fontified t face font-lock-string-face) 2026 2027 (syntax-table (15) fontified t face font-lock-string-face) 2027 2028 (fontified t)) . -505) (undo-tree-id1379 . -1851) (undo-tree-id1380 . -1851) (undo-tree-id1381 . -1657) (undo-tree-id1382 . -1657) (undo-tree-id1383 . -2024) (undo-tree-id1384 . -2024) (undo-tree-id1385 . -1787) (undo-tree-id1386 . -1787) (undo-tree-id1387 . -1723) (undo-tree-id1388 . -1723) (undo-tree-id1389 . -2012) (undo-tree-id1390 . -2012) (undo-tree-id1391 . -1967) (undo-tree-id1392 . -1967) (undo-tree-id1393 . -1919) (undo-tree-id1394 . -1919) (undo-tree-id1395 . -2028) (undo-tree-id1396 . -2028) (undo-tree-id1397 . -1589) (undo-tree-id1398 . -1589) (undo-tree-id1399 . -1525) (undo-tree-id1400 . -1525) (undo-tree-id1401 . -1475) (undo-tree-id1402 . -1475) (undo-tree-id1403 . -1427) (undo-tree-id1404 . -1427) (undo-tree-id1405 . -1381) (undo-tree-id1406 . -1381) (undo-tree-id1407 . -2028) (undo-tree-id1408 . -1381) (undo-tree-id1409 . -2028) (undo-tree-id1410 . -2018) (undo-tree-id1411 . -2018) (undo-tree-id1412 . -2028) (undo-tree-id1413 . -2028) 2533) nil (25417 14846 670634 457000) 0 nil])
([nil nil ((#("    
" 0 4 (fontified t) 4 5 (fontified t)) . 478) (undo-tree-id1369 . -4) (undo-tree-id1370 . -4) (undo-tree-id1371 . -5) (undo-tree-id1372 . -4) (undo-tree-id1373 . -4) (undo-tree-id1374 . -4) (undo-tree-id1375 . -4) (undo-tree-id1376 . -5) (undo-tree-id1377 . -5) (undo-tree-id1378 . -5)) nil (25417 14846 670579 473000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 478) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1)) nil (25417 14846 670560 347000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . 478) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1)) nil (25417 14846 670546 220000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 478) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1)) nil (25417 14846 670536 11000) 0 nil])
([nil nil ((#("    
" 0 4 (fontified t) 4 5 (fontified t)) . 478) (undo-tree-id1349 . -5) (undo-tree-id1350 . -5) (undo-tree-id1351 . -5) (undo-tree-id1352 . -5)) nil (25417 14846 670527 625000) 0 nil])
([nil nil ((#("    
" 0 4 (fontified t) 4 5 (fontified t)) . 478) (undo-tree-id1345 . -5) (undo-tree-id1346 . -5) (undo-tree-id1347 . -5) (undo-tree-id1348 . -5)) nil (25417 14846 670518 919000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 478) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1)) nil (25417 14846 670510 453000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 485) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1)) nil (25417 14846 670500 995000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 485) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1)) nil (25417 14846 670485 976000) 0 nil])
([nil current ((#("
" 0 1 (fontified t)) . 485) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1)) nil (25417 14846 670471 849000) 0 nil])
nil
